{"/home/travis/build/npmtest/node-npmtest-node-hue-api/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_node_hue_api */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/lib.npmtest_node_hue_api.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/lib.npmtest_node_hue_api.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":57}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":63}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_node_hue_api */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_node_hue_api = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_node_hue_api = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":56}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":70},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-node-hue-api && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_node_hue_api */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_node_hue_api","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_node_hue_api.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_node_hue_api.rollup.js'] =","            local.assetsDict['/assets.npmtest_node_hue_api.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_node_hue_api.__dirname + '/lib.npmtest_node_hue_api.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/index.js","s":{"1":1,"2":1,"3":2,"4":0,"5":0,"6":0,"7":1,"8":0},"b":{},"f":{"1":2,"2":0,"3":0},"fnMap":{"1":{"name":"deprecated","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":33}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":11},"end":{"line":18,"column":23}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":13},"end":{"line":32,"column":30}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":14,"column":5}},"2":{"start":{"line":17,"column":0},"end":{"line":23,"column":1}},"3":{"start":{"line":18,"column":4},"end":{"line":22,"column":6}},"4":{"start":{"line":19,"column":8},"end":{"line":19,"column":57}},"5":{"start":{"line":20,"column":8},"end":{"line":20,"column":31}},"6":{"start":{"line":21,"column":8},"end":{"line":21,"column":36}},"7":{"start":{"line":26,"column":0},"end":{"line":53,"column":2}},"8":{"start":{"line":33,"column":8},"end":{"line":33,"column":31}}},"branchMap":{},"code":["\"use strict\";","","//","// This wrapper is to provide some continuity in the modifications of the APIs over time","//","","var bridgeDiscovery = require(\"./hue-api/bridge-discovery\")","    , Hue = require(\"./hue-api\")","    , lightState = require(\"./hue-api/lightstate\")","    , scheduledEvent = require(\"./hue-api/scheduledEvent\")","    , scene = require(\"./hue-api/scene\")","    , timer = require(\"./hue-api/timer\")","    , ApiError = require(\"./hue-api/errors\").ApiError","    ;","","","function deprecated(fn, message) {","    return function () {","        var args = Array.prototype.slice.call(arguments);","        console.error(message);","        return fn.apply(this, args);","    };","}","","","module.exports = {","    HueApi: Hue,","    BridgeApi: Hue,","    api: Hue,","","    //TODO document this, it is currently broken though","    connect: function(config) {","        return new Hue(config);","    },","","    lightState: lightState,","    scheduledEvent: scheduledEvent,","    scene: scene,","    timer: timer,","","    upnpSearch: bridgeDiscovery.networkSearch,","    nupnpSearch: bridgeDiscovery.locateBridges,","","    locateBridges: deprecated(bridgeDiscovery.locateBridges","        , \"'locateBridges' is deprecated, please use 'nupnpSearch' instead\"),","","    searchForBridges: deprecated(","        bridgeDiscovery.networkSearch","        , \"'searchForBridges' is deprecated, please use 'upnpSearch' instead\"","    ),","","    ApiError: ApiError","};"],"l":{"7":1,"17":1,"18":2,"19":0,"20":0,"21":0,"26":1,"33":0}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/bridge-discovery.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/bridge-discovery.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":1,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":31},"end":{"line":19,"column":50}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":31},"end":{"line":30,"column":45}}},"3":{"name":"(anonymous_3)","line":42,"loc":{"start":{"line":42,"column":29},"end":{"line":42,"column":45}}},"4":{"name":"_identifyBridges","line":53,"loc":{"start":{"line":53,"column":0},"end":{"line":53,"column":43}}},"5":{"name":"followLocationResponse","line":73,"loc":{"start":{"line":73,"column":0},"end":{"line":73,"column":38}}},"6":{"name":"(anonymous_6)","line":76,"loc":{"start":{"line":76,"column":14},"end":{"line":76,"column":29}}},"7":{"name":"_parseDescription","line":88,"loc":{"start":{"line":88,"column":0},"end":{"line":88,"column":32}}},"8":{"name":"(anonymous_8)","line":94,"loc":{"start":{"line":94,"column":28},"end":{"line":94,"column":49}}},"9":{"name":"(anonymous_9)","line":124,"loc":{"start":{"line":124,"column":61},"end":{"line":124,"column":77}}},"10":{"name":"_isHueBridge","line":144,"loc":{"start":{"line":144,"column":0},"end":{"line":144,"column":35}}},"11":{"name":"_getHueBridgeHost","line":156,"loc":{"start":{"line":156,"column":0},"end":{"line":156,"column":40}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":9,"column":5}},"2":{"start":{"line":19,"column":0},"end":{"line":21,"column":2}},"3":{"start":{"line":20,"column":4},"end":{"line":20,"column":64}},"4":{"start":{"line":30,"column":0},"end":{"line":33,"column":2}},"5":{"start":{"line":31,"column":4},"end":{"line":31,"column":90}},"6":{"start":{"line":32,"column":4},"end":{"line":32,"column":48}},"7":{"start":{"line":42,"column":0},"end":{"line":45,"column":2}},"8":{"start":{"line":43,"column":4},"end":{"line":44,"column":33}},"9":{"start":{"line":53,"column":0},"end":{"line":66,"column":1}},"10":{"start":{"line":54,"column":4},"end":{"line":57,"column":9}},"11":{"start":{"line":59,"column":4},"end":{"line":64,"column":5}},"12":{"start":{"line":60,"column":8},"end":{"line":63,"column":9}},"13":{"start":{"line":62,"column":12},"end":{"line":62,"column":79}},"14":{"start":{"line":65,"column":4},"end":{"line":65,"column":26}},"15":{"start":{"line":73,"column":0},"end":{"line":80,"column":1}},"16":{"start":{"line":74,"column":4},"end":{"line":79,"column":9}},"17":{"start":{"line":88,"column":0},"end":{"line":142,"column":1}},"18":{"start":{"line":89,"column":4},"end":{"line":92,"column":9}},"19":{"start":{"line":94,"column":4},"end":{"line":139,"column":7}},"20":{"start":{"line":95,"column":8},"end":{"line":97,"column":13}},"21":{"start":{"line":99,"column":8},"end":{"line":138,"column":9}},"22":{"start":{"line":100,"column":12},"end":{"line":100,"column":33}},"23":{"start":{"line":102,"column":12},"end":{"line":117,"column":14}},"24":{"start":{"line":119,"column":12},"end":{"line":135,"column":13}},"25":{"start":{"line":122,"column":16},"end":{"line":122,"column":27}},"26":{"start":{"line":124,"column":16},"end":{"line":132,"column":19}},"27":{"start":{"line":125,"column":20},"end":{"line":131,"column":23}},"28":{"start":{"line":134,"column":16},"end":{"line":134,"column":37}},"29":{"start":{"line":137,"column":12},"end":{"line":137,"column":37}},"30":{"start":{"line":141,"column":4},"end":{"line":141,"column":28}},"31":{"start":{"line":144,"column":0},"end":{"line":154,"column":1}},"32":{"start":{"line":145,"column":4},"end":{"line":145,"column":13}},"33":{"start":{"line":147,"column":4},"end":{"line":152,"column":5}},"34":{"start":{"line":148,"column":8},"end":{"line":148,"column":38}},"35":{"start":{"line":149,"column":8},"end":{"line":151,"column":9}},"36":{"start":{"line":150,"column":12},"end":{"line":150,"column":24}},"37":{"start":{"line":153,"column":4},"end":{"line":153,"column":17}},"38":{"start":{"line":156,"column":0},"end":{"line":167,"column":1}},"39":{"start":{"line":157,"column":4},"end":{"line":157,"column":12}},"40":{"start":{"line":159,"column":4},"end":{"line":165,"column":5}},"41":{"start":{"line":160,"column":8},"end":{"line":160,"column":41}},"42":{"start":{"line":161,"column":8},"end":{"line":164,"column":10}},"43":{"start":{"line":166,"column":4},"end":{"line":166,"column":16}}},"branchMap":{"1":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":8}},{"start":{"line":60,"column":8},"end":{"line":60,"column":8}}]},"2":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":8},"end":{"line":99,"column":8}},{"start":{"line":99,"column":8},"end":{"line":99,"column":8}}]},"3":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":12},"end":{"line":119,"column":12}},{"start":{"line":119,"column":12},"end":{"line":119,"column":12}}]},"4":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":16},"end":{"line":119,"column":44}},{"start":{"line":120,"column":19},"end":{"line":120,"column":50}},{"start":{"line":121,"column":19},"end":{"line":121,"column":55}}]},"5":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":4},"end":{"line":147,"column":4}},{"start":{"line":147,"column":4},"end":{"line":147,"column":4}}]},"6":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":8},"end":{"line":147,"column":19}},{"start":{"line":147,"column":23},"end":{"line":147,"column":40}},{"start":{"line":147,"column":44},"end":{"line":147,"column":66}}]},"7":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":8},"end":{"line":149,"column":8}},{"start":{"line":149,"column":8},"end":{"line":149,"column":8}}]},"8":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":4},"end":{"line":159,"column":4}},{"start":{"line":159,"column":4},"end":{"line":159,"column":4}}]}},"code":["\"use strict\";","","var url = require(\"url\")","    , Q = require(\"q\")","    , search = require(\"./search\")","    , http = require(\"./httpPromise\")","    , utils = require(\"./utils\")","    , discovery = require(\"./commands/discovery\")","    ;","","/**"," * Will locate the Philips Hue Devices on the network. Depending upon the speed and size of the network the timeout"," * may need to be adjusted to locate the Hue Bridge."," *"," * @param timeout The maximum time to wait for Hue Devices to be located. If not specified will use the default of 5"," * seconds."," * @return A promise that will resolve the Hue Bridges as an Array of {\"id\": {String}, \"ipaddress\": {String}} objects."," */","module.exports.networkSearch = function (timeout) {","    return search.locateBridges(timeout).then(_identifyBridges);","};","","/**"," * Uses the http://www.meethue.com/api/nupnp call to search for any bridges locally on the network. This lookup can be"," * significantly faster than issuing search requests in the {locateBridges} function."," *"," * @param cb An option callback function that will be informed of results."," * @returns {Q.promise} A promise that will resolve the addresses of the bridges, or {null} if a callback was provided."," */","module.exports.locateBridges = function (cb) {","    var promise = http.invoke(discovery.upnpLookup, {host: \"www.meethue.com\", ssl: true});","    return utils.promiseOrCallback(promise, cb);","};","","/**"," * Obtains an object representation of the Description XML."," *"," * @param host The host to get the description XML from."," * @return {*} The object representing some of the values in the description XML."," * @private"," */","module.exports.description = function (host) {","    return http.invoke(discovery.description, {\"host\": host})","        .then(_parseDescription);","};","","/**"," * Identifies the bridges based on the response from possible devices from SSDP search"," * @param possibleBridges The results from the search to be processed."," * @return A promise that will process all the results and return only the valid Hue Bridges."," * @private"," */","function _identifyBridges(possibleBridges) {","    var lookups = []","        , path","        //, uri","        ;","","    for (path in possibleBridges) {","        if (possibleBridges.hasOwnProperty(path)) {","            //uri = parseUri(path);","            lookups.push(followLocationResponse(path).then(_getHueBridgeHost));","        }","    }","    return Q.all(lookups);","}","","/**"," * Performs a GET on the provided path, the location response from the bridge."," * This function expects there to be an XML description document present at the provided path."," * @param path The path in the LOCATION response from SSDP lookup."," */","function followLocationResponse(path) {","    return http.simpleGet(path)","        .then(_parseDescription)","        .fail(function (err) {","            // Do nothing with services that do not respond with an XML document","        })","        ;","}","","/**"," * Parses the XML Description and converts it into an Object."," * @param xml The XML to parse and convert into an object"," * @return {Function|promise|promise|exports.promise}"," * @private"," */","function _parseDescription(xml) {","    var xml2js = require(\"xml2js\")","        , parser = new xml2js.Parser()","        , deferred = Q.defer()","        ;","","    parser.parseString(xml, function (err, data) {","        var result = null","            , icons","            ;","","        if (err) {","            deferred.reject(err);","        } else {","            result = {","                \"version\": {","                    \"major\": data.root.specVersion[0].major[0],","                    \"minor\": data.root.specVersion[0].minor[0]","                },","                \"url\": data.root.URLBase[0],","                \"name\": data.root.device[0].friendlyName[0],","                \"manufacturer\": data.root.device[0].manufacturer[0],","                \"model\": {","                    \"name\": data.root.device[0].modelName[0],","                    \"description\": data.root.device[0].modelDescription[0],","                    \"number\": data.root.device[0].modelNumber[0],","                    \"serial\": data.root.device[0].serialNumber[0],","                    \"udn\": data.root.device[0].UDN[0]","                }","            };","","            if (data.root.device[0].iconList","                && data.root.device[0].iconList[0]","                && data.root.device[0].iconList[0].icon) {","                icons = [];","","                data.root.device[0].iconList[0].icon.forEach(function (icon) {","                    icons.push({","                        mimetype: icon.mimetype[0],","                        height: icon.height[0],","                        width: icon.width[0],","                        depth: icon.depth[0],","                        url: icon.url[0]","                    });","                });","","                result.icons = icons;","            }","","            deferred.resolve(result);","        }","    });","","    return deferred.promise;","}","","function _isHueBridge(description) {","    var name;","","    if (description && description.model && description.model.name) {","        name = description.model.name;","        if (name.toLowerCase().indexOf(\"philips hue bridge\") >= 0) {","            return true;","        }","    }","    return false;","}","","function _getHueBridgeHost(description) {","    var uri;","","    if (_isHueBridge(description)) {","        uri = url.parse(description.url);","        return {","            \"id\": description.model.serial,","            \"ipaddress\": uri.hostname","        };","    }","    return null;","}"],"l":{"3":1,"19":1,"20":0,"30":1,"31":0,"32":0,"42":1,"43":0,"53":1,"54":0,"59":0,"60":0,"62":0,"65":0,"73":1,"74":0,"88":1,"89":0,"94":0,"95":0,"99":0,"100":0,"102":0,"119":0,"122":0,"124":0,"125":0,"134":0,"137":0,"141":0,"144":1,"145":0,"147":0,"148":0,"149":0,"150":0,"153":0,"156":1,"157":0,"159":0,"160":0,"161":0,"166":0}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/search.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/search.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":1,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":1,"80":1,"81":1,"82":0,"83":1,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":1,"92":0,"93":0,"94":0,"95":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0},"fnMap":{"1":{"name":"locateBridges","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":32}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":26},"end":{"line":20,"column":42}}},"3":{"name":"(anonymous_3)","line":26,"loc":{"start":{"line":26,"column":15},"end":{"line":26,"column":26}}},"4":{"name":"SSDPSearch","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":29}}},"5":{"name":"(anonymous_5)","line":40,"loc":{"start":{"line":40,"column":28},"end":{"line":40,"column":43}}},"6":{"name":"onMessage","line":45,"loc":{"start":{"line":45,"column":30},"end":{"line":45,"column":61}}},"7":{"name":"search","line":59,"loc":{"start":{"line":59,"column":30},"end":{"line":59,"column":48}}},"8":{"name":"_close","line":75,"loc":{"start":{"line":75,"column":0},"end":{"line":75,"column":24}}},"9":{"name":"_buildSearchPacket","line":83,"loc":{"start":{"line":83,"column":0},"end":{"line":83,"column":34}}},"10":{"name":"(anonymous_10)","line":85,"loc":{"start":{"line":85,"column":30},"end":{"line":85,"column":43}}},"11":{"name":"_parseSearchResponse","line":91,"loc":{"start":{"line":91,"column":0},"end":{"line":91,"column":37}}},"12":{"name":"_filterResults","line":112,"loc":{"start":{"line":112,"column":0},"end":{"line":112,"column":39}}},"13":{"name":"(anonymous_13)","line":115,"loc":{"start":{"line":115,"column":26},"end":{"line":115,"column":43}}},"14":{"name":"_combineResults","line":125,"loc":{"start":{"line":125,"column":0},"end":{"line":125,"column":47}}},"15":{"name":"_addUnique","line":149,"loc":{"start":{"line":149,"column":0},"end":{"line":149,"column":34}}},"16":{"name":"SocketCleanUp","line":171,"loc":{"start":{"line":171,"column":0},"end":{"line":171,"column":25}}},"17":{"name":"(anonymous_17)","line":176,"loc":{"start":{"line":176,"column":30},"end":{"line":176,"column":47}}},"18":{"name":"(anonymous_18)","line":180,"loc":{"start":{"line":180,"column":33},"end":{"line":180,"column":50}}},"19":{"name":"(anonymous_19)","line":191,"loc":{"start":{"line":191,"column":35},"end":{"line":191,"column":46}}},"20":{"name":"(anonymous_20)","line":196,"loc":{"start":{"line":196,"column":21},"end":{"line":196,"column":38}}},"21":{"name":"(anonymous_21)","line":201,"loc":{"start":{"line":201,"column":47},"end":{"line":201,"column":58}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":6,"column":27}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":40}},"3":{"start":{"line":15,"column":0},"end":{"line":32,"column":1}},"4":{"start":{"line":16,"column":4},"end":{"line":18,"column":21}},"5":{"start":{"line":20,"column":4},"end":{"line":22,"column":7}},"6":{"start":{"line":21,"column":8},"end":{"line":21,"column":28}},"7":{"start":{"line":23,"column":4},"end":{"line":23,"column":20}},"8":{"start":{"line":26,"column":4},"end":{"line":29,"column":24}},"9":{"start":{"line":27,"column":8},"end":{"line":27,"column":23}},"10":{"start":{"line":28,"column":8},"end":{"line":28,"column":50}},"11":{"start":{"line":31,"column":4},"end":{"line":31,"column":28}},"12":{"start":{"line":33,"column":0},"end":{"line":33,"column":45}},"13":{"start":{"line":35,"column":0},"end":{"line":56,"column":1}},"14":{"start":{"line":36,"column":4},"end":{"line":36,"column":20}},"15":{"start":{"line":38,"column":4},"end":{"line":38,"column":45}},"16":{"start":{"line":40,"column":4},"end":{"line":43,"column":7}},"17":{"start":{"line":41,"column":8},"end":{"line":41,"column":53}},"18":{"start":{"line":42,"column":8},"end":{"line":42,"column":27}},"19":{"start":{"line":45,"column":4},"end":{"line":52,"column":7}},"20":{"start":{"line":46,"column":8},"end":{"line":46,"column":54}},"21":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"22":{"start":{"line":50,"column":12},"end":{"line":50,"column":77}},"23":{"start":{"line":54,"column":4},"end":{"line":54,"column":28}},"24":{"start":{"line":55,"column":4},"end":{"line":55,"column":41}},"25":{"start":{"line":57,"column":0},"end":{"line":57,"column":56}},"26":{"start":{"line":59,"column":0},"end":{"line":73,"column":2}},"27":{"start":{"line":60,"column":4},"end":{"line":61,"column":20}},"28":{"start":{"line":63,"column":4},"end":{"line":71,"column":7}},"29":{"start":{"line":72,"column":4},"end":{"line":72,"column":51}},"30":{"start":{"line":75,"column":0},"end":{"line":81,"column":1}},"31":{"start":{"line":76,"column":4},"end":{"line":79,"column":5}},"32":{"start":{"line":77,"column":8},"end":{"line":77,"column":29}},"33":{"start":{"line":78,"column":8},"end":{"line":78,"column":30}},"34":{"start":{"line":80,"column":4},"end":{"line":80,"column":33}},"35":{"start":{"line":83,"column":0},"end":{"line":89,"column":1}},"36":{"start":{"line":84,"column":4},"end":{"line":84,"column":43}},"37":{"start":{"line":85,"column":4},"end":{"line":87,"column":7}},"38":{"start":{"line":86,"column":8},"end":{"line":86,"column":46}},"39":{"start":{"line":88,"column":4},"end":{"line":88,"column":27}},"40":{"start":{"line":91,"column":0},"end":{"line":110,"column":1}},"41":{"start":{"line":92,"column":4},"end":{"line":98,"column":12}},"42":{"start":{"line":100,"column":4},"end":{"line":108,"column":5}},"43":{"start":{"line":101,"column":8},"end":{"line":101,"column":26}},"44":{"start":{"line":102,"column":8},"end":{"line":102,"column":43}},"45":{"start":{"line":103,"column":8},"end":{"line":107,"column":9}},"46":{"start":{"line":104,"column":12},"end":{"line":104,"column":66}},"47":{"start":{"line":105,"column":12},"end":{"line":105,"column":75}},"48":{"start":{"line":106,"column":12},"end":{"line":106,"column":32}},"49":{"start":{"line":109,"column":4},"end":{"line":109,"column":18}},"50":{"start":{"line":112,"column":0},"end":{"line":123,"column":1}},"51":{"start":{"line":113,"column":4},"end":{"line":113,"column":26}},"52":{"start":{"line":115,"column":4},"end":{"line":121,"column":7}},"53":{"start":{"line":116,"column":8},"end":{"line":120,"column":9}},"54":{"start":{"line":117,"column":12},"end":{"line":117,"column":51}},"55":{"start":{"line":119,"column":12},"end":{"line":119,"column":99}},"56":{"start":{"line":122,"column":4},"end":{"line":122,"column":24}},"57":{"start":{"line":125,"column":0},"end":{"line":147,"column":1}},"58":{"start":{"line":126,"column":4},"end":{"line":128,"column":14}},"59":{"start":{"line":130,"column":4},"end":{"line":132,"column":5}},"60":{"start":{"line":131,"column":8},"end":{"line":131,"column":37}},"61":{"start":{"line":134,"column":4},"end":{"line":145,"column":5}},"62":{"start":{"line":135,"column":8},"end":{"line":144,"column":9}},"63":{"start":{"line":136,"column":12},"end":{"line":143,"column":13}},"64":{"start":{"line":137,"column":16},"end":{"line":137,"column":56}},"65":{"start":{"line":139,"column":16},"end":{"line":139,"column":27}},"66":{"start":{"line":140,"column":16},"end":{"line":140,"column":40}},"67":{"start":{"line":141,"column":16},"end":{"line":141,"column":43}},"68":{"start":{"line":142,"column":16},"end":{"line":142,"column":36}},"69":{"start":{"line":146,"column":4},"end":{"line":146,"column":18}},"70":{"start":{"line":149,"column":0},"end":{"line":164,"column":1}},"71":{"start":{"line":150,"column":4},"end":{"line":152,"column":12}},"72":{"start":{"line":154,"column":4},"end":{"line":159,"column":5}},"73":{"start":{"line":155,"column":8},"end":{"line":155,"column":37}},"74":{"start":{"line":156,"column":8},"end":{"line":158,"column":9}},"75":{"start":{"line":157,"column":12},"end":{"line":157,"column":18}},"76":{"start":{"line":161,"column":4},"end":{"line":163,"column":5}},"77":{"start":{"line":162,"column":8},"end":{"line":162,"column":26}},"78":{"start":{"line":171,"column":0},"end":{"line":174,"column":1}},"79":{"start":{"line":172,"column":4},"end":{"line":172,"column":24}},"80":{"start":{"line":173,"column":4},"end":{"line":173,"column":29}},"81":{"start":{"line":176,"column":0},"end":{"line":178,"column":2}},"82":{"start":{"line":177,"column":4},"end":{"line":177,"column":32}},"83":{"start":{"line":180,"column":0},"end":{"line":189,"column":2}},"84":{"start":{"line":181,"column":4},"end":{"line":184,"column":9}},"85":{"start":{"line":186,"column":4},"end":{"line":188,"column":5}},"86":{"start":{"line":187,"column":8},"end":{"line":187,"column":31}},"87":{"start":{"line":191,"column":0},"end":{"line":199,"column":2}},"88":{"start":{"line":192,"column":4},"end":{"line":194,"column":9}},"89":{"start":{"line":196,"column":4},"end":{"line":198,"column":7}},"90":{"start":{"line":197,"column":8},"end":{"line":197,"column":23}},"91":{"start":{"line":201,"column":0},"end":{"line":208,"column":2}},"92":{"start":{"line":202,"column":4},"end":{"line":202,"column":20}},"93":{"start":{"line":204,"column":4},"end":{"line":207,"column":5}},"94":{"start":{"line":205,"column":8},"end":{"line":205,"column":53}},"95":{"start":{"line":206,"column":8},"end":{"line":206,"column":32}}},"branchMap":{"1":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":7},"end":{"line":29,"column":14}},{"start":{"line":29,"column":18},"end":{"line":29,"column":22}}]},"2":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":49,"column":8}},{"start":{"line":49,"column":8},"end":{"line":49,"column":8}}]},"3":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":76,"column":4}},{"start":{"line":76,"column":4},"end":{"line":76,"column":4}}]},"4":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":8},"end":{"line":103,"column":8}},{"start":{"line":103,"column":8},"end":{"line":103,"column":8}}]},"5":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":12},"end":{"line":103,"column":30}},{"start":{"line":103,"column":34},"end":{"line":103,"column":62}}]},"6":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":116,"column":8}},{"start":{"line":116,"column":8},"end":{"line":116,"column":8}}]},"7":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":135,"column":8}},{"start":{"line":135,"column":8},"end":{"line":135,"column":8}}]},"8":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":12},"end":{"line":136,"column":12}},{"start":{"line":136,"column":12},"end":{"line":136,"column":12}}]},"9":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":8},"end":{"line":156,"column":8}},{"start":{"line":156,"column":8},"end":{"line":156,"column":8}}]},"10":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":4},"end":{"line":161,"column":4}},{"start":{"line":161,"column":4},"end":{"line":161,"column":4}}]},"11":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":4},"end":{"line":186,"column":4}},{"start":{"line":186,"column":4},"end":{"line":186,"column":4}}]},"12":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":4},"end":{"line":204,"column":4}},{"start":{"line":204,"column":4},"end":{"line":204,"column":4}}]}},"code":["\"use strict\";","","var Q = require(\"q\"),","    dgram = require('dgram'),","    EventEmitter = require('events').EventEmitter,","    util = require(\"util\");","","var socketCleanUp = new SocketCleanUp();","","/**"," * Locates possible Philips Hue Bridges on the network."," * @param timeout The maximum time to wait for responses, or if none provided will default to 5 seconds"," * @return {Function|promise|promise|exports.promise}"," */","function locateBridges(timeout) {","    var deferred = Q.defer(),","        search = new SSDPSearch(timeout),","        results = [];","","    search.on(\"response\", function(value) {","        results.push(value);","    });","    search.search();","","    // Give up after the timeout and process whatever results we have","    setTimeout(function() {","        _close(search);","        deferred.resolve(_filterResults(results));","    }, timeout || 5000);","","    return deferred.promise;","}","module.exports.locateBridges = locateBridges;","","function SSDPSearch(timeout) {","    var self = this;","","    self.socket = dgram.createSocket('udp4');","","    self.socket.on('error', function (err) {","        console.log('############### Got an error!');","        console.trace(err);","    });","","    self.socket.on('message', function onMessage(msg, rinfo) {","        var msgStrings = msg.toString().split(\"\\r\\n\");","","        // HTTP/#.# ### Response","        if (msgStrings[0].match(/HTTP\\/(\\d{1})\\.(\\d{1}) (\\d+) (.*)/)) {","            self.emit('response', _parseSearchResponse(msgStrings.slice(1)));","        }","    });","","    socketCleanUp.add(self);","    socketCleanUp.registerExitListener();","}","SSDPSearch.prototype.__proto__ = EventEmitter.prototype;","","SSDPSearch.prototype.search = function search() {","    var ip = \"239.255.255.250\",","        port = 1900;","","    var pkt = new Buffer(_buildSearchPacket(","        {","            \"HOST\": ip + \":\" + port,","            \"MAN\": \"ssdp:discover\",","            \"MX\": 10,","//            \"ST\": \"SsdpSearch:all\"","            \"ST\": \"urn:schemas-upnp-org:device:Basic:1\"","        }","    ));","    this.socket.send(pkt, 0, pkt.length, port, ip);","};","","function _close(target) {","    if (!target.closed) {","        target.closed = true;","        target.socket.close();","    }","    socketCleanUp.remove(target);","}","","function _buildSearchPacket(vars) {","    var packet = \"M-SEARCH * HTTP/1.1\\r\\n\";","    Object.keys(vars).forEach(function (n) {","        packet += n + \": \" + vars[n] + \"\\r\\n\";","    });","    return packet + \"\\r\\n\";","}","","function _parseSearchResponse(lines) {","    var line,","        separatorIndex,","        key,","        value,","        result = {},","        idx,","        len;","","    for (idx = 0, len = lines.length; idx < lines.length; idx++) {","        line = lines[idx];","        separatorIndex = line.indexOf(\":\");","        if (separatorIndex > 0 && separatorIndex < line.length) {","            key = line.substring(0, separatorIndex).toLowerCase();","            value = line.substring(separatorIndex + 1, line.length).trim();","            result[key] = value;","        }","    }","    return result;","}","","function _filterResults(resultObjects) {","    var uniqueValues = {};","","    resultObjects.forEach(function(result) {","        if (! uniqueValues[result.location]) {","            uniqueValues[result.location] = result;","        } else {","            uniqueValues[result.location] = _combineResults(uniqueValues[result.location], result);","        }","    });","    return uniqueValues;","}","","function _combineResults(objectOne, objectTwo) {","    var result = {},","        key,","        array;","","    for (key in objectOne) {","        result[key] = objectOne[key];","    }","","    for (key in objectTwo) {","        if (result[key] !== objectTwo[key]) {","            if (util.isArray(result[key])) {","                _addUnique(result[key], objectTwo[key]);","            } else {","                array = [];","                array.push(result[key]);","                array.push(objectTwo[key]);","                result[key] = array;","            }","        }","    }","    return result;","}","","function _addUnique(array, value) {","    var found = false,","        idx,","        len;","","    for (idx = 0, len = array.length; idx < len; idx++) {","        found = array[idx] === value;","        if (found) {","            break;","        }","    }","","    if (!found) {","        array.push(value);","    }","}","","/**"," * A socket register to take care of closing all sockets that are opened, if not already closed"," *"," * @constructor"," */","function SocketCleanUp() {","    this._searches = [];","    this._registered = false;","}","","SocketCleanUp.prototype.add = function(search) {","    this._searches.push(search);","};","","SocketCleanUp.prototype.remove = function(search) {","    var self = this","        , searches = self._searches","        , idx = searches.indexOf(search)","        ;","","    if (idx > -1) {","        searches.splice(idx, 1)","    }","};","","SocketCleanUp.prototype.finished = function() {","    var self = this","        , searches = self._searches","        ;","","    searches.forEach(function(search) {","        _close(search);","    });","};","","SocketCleanUp.prototype.registerExitListener = function() {","    var self = this;","","    if (! self._registered) {","        process.on(\"exit\", self.finished.bind(self));","        self._registered = true;","    }","};",""],"l":{"3":1,"8":1,"15":1,"16":0,"20":0,"21":0,"23":0,"26":0,"27":0,"28":0,"31":0,"33":1,"35":1,"36":0,"38":0,"40":0,"41":0,"42":0,"45":0,"46":0,"49":0,"50":0,"54":0,"55":0,"57":1,"59":1,"60":0,"63":0,"72":0,"75":1,"76":0,"77":0,"78":0,"80":0,"83":1,"84":0,"85":0,"86":0,"88":0,"91":1,"92":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"109":0,"112":1,"113":0,"115":0,"116":0,"117":0,"119":0,"122":0,"125":1,"126":0,"130":0,"131":0,"134":0,"135":0,"136":0,"137":0,"139":0,"140":0,"141":0,"142":0,"146":0,"149":1,"150":0,"154":0,"155":0,"156":0,"157":0,"161":0,"162":0,"171":1,"172":1,"173":1,"176":1,"177":0,"180":1,"181":0,"186":0,"187":0,"191":1,"192":0,"196":0,"197":0,"201":1,"202":0,"204":0,"205":0,"206":0}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/httpPromise.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/httpPromise.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"buildOptions","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":43}}},"2":{"name":"getError","line":61,"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":30}}},"3":{"name":"checkForError","line":87,"loc":{"start":{"line":87,"column":0},"end":{"line":87,"column":31}}},"4":{"name":"requireStatusCode200","line":101,"loc":{"start":{"line":101,"column":0},"end":{"line":101,"column":38}}},"5":{"name":"generateErrorsIfMatched","line":114,"loc":{"start":{"line":114,"column":0},"end":{"line":114,"column":38}}},"6":{"name":"(anonymous_6)","line":115,"loc":{"start":{"line":115,"column":9},"end":{"line":115,"column":27}}},"7":{"name":"(anonymous_7)","line":126,"loc":{"start":{"line":126,"column":24},"end":{"line":126,"column":55}}},"8":{"name":"(anonymous_8)","line":140,"loc":{"start":{"line":140,"column":10},"end":{"line":140,"column":35}}},"9":{"name":"(anonymous_9)","line":152,"loc":{"start":{"line":152,"column":35},"end":{"line":152,"column":49}}},"10":{"name":"(anonymous_10)","line":160,"loc":{"start":{"line":160,"column":27},"end":{"line":160,"column":42}}},"11":{"name":"(anonymous_11)","line":163,"loc":{"start":{"line":163,"column":12},"end":{"line":163,"column":29}}},"12":{"name":"wrapAxios","line":173,"loc":{"start":{"line":173,"column":0},"end":{"line":173,"column":28}}},"13":{"name":"(anonymous_13)","line":176,"loc":{"start":{"line":176,"column":15},"end":{"line":176,"column":33}}},"14":{"name":"(anonymous_14)","line":179,"loc":{"start":{"line":179,"column":11},"end":{"line":179,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":10,"column":3}},"2":{"start":{"line":12,"column":0},"end":{"line":14,"column":2}},"3":{"start":{"line":16,"column":0},"end":{"line":59,"column":1}},"4":{"start":{"line":17,"column":2},"end":{"line":26,"column":6}},"5":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"6":{"start":{"line":29,"column":4},"end":{"line":29,"column":34}},"7":{"start":{"line":32,"column":2},"end":{"line":32,"column":48}},"8":{"start":{"line":33,"column":2},"end":{"line":33,"column":43}},"9":{"start":{"line":35,"column":2},"end":{"line":39,"column":3}},"10":{"start":{"line":36,"column":4},"end":{"line":36,"column":50}},"11":{"start":{"line":38,"column":4},"end":{"line":38,"column":80}},"12":{"start":{"line":40,"column":2},"end":{"line":40,"column":35}},"13":{"start":{"line":43,"column":2},"end":{"line":52,"column":3}},"14":{"start":{"line":44,"column":4},"end":{"line":44,"column":55}},"15":{"start":{"line":46,"column":4},"end":{"line":51,"column":5}},"16":{"start":{"line":47,"column":6},"end":{"line":47,"column":36}},"17":{"start":{"line":48,"column":6},"end":{"line":48,"column":42}},"18":{"start":{"line":50,"column":6},"end":{"line":50,"column":88}},"19":{"start":{"line":54,"column":2},"end":{"line":56,"column":3}},"20":{"start":{"line":55,"column":4},"end":{"line":55,"column":46}},"21":{"start":{"line":58,"column":2},"end":{"line":58,"column":17}},"22":{"start":{"line":61,"column":0},"end":{"line":85,"column":1}},"23":{"start":{"line":62,"column":2},"end":{"line":65,"column":5}},"24":{"start":{"line":67,"column":2},"end":{"line":83,"column":3}},"25":{"start":{"line":68,"column":4},"end":{"line":82,"column":5}},"26":{"start":{"line":69,"column":6},"end":{"line":75,"column":7}},"27":{"start":{"line":70,"column":8},"end":{"line":70,"column":43}},"28":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"29":{"start":{"line":73,"column":10},"end":{"line":73,"column":16}},"30":{"start":{"line":76,"column":11},"end":{"line":82,"column":5}},"31":{"start":{"line":77,"column":6},"end":{"line":81,"column":8}},"32":{"start":{"line":84,"column":2},"end":{"line":84,"column":16}},"33":{"start":{"line":87,"column":0},"end":{"line":99,"column":1}},"34":{"start":{"line":88,"column":2},"end":{"line":90,"column":5}},"35":{"start":{"line":92,"column":2},"end":{"line":92,"column":27}},"36":{"start":{"line":93,"column":2},"end":{"line":93,"column":35}},"37":{"start":{"line":95,"column":2},"end":{"line":97,"column":3}},"38":{"start":{"line":96,"column":4},"end":{"line":96,"column":41}},"39":{"start":{"line":98,"column":2},"end":{"line":98,"column":20}},"40":{"start":{"line":101,"column":0},"end":{"line":112,"column":1}},"41":{"start":{"line":102,"column":2},"end":{"line":110,"column":3}},"42":{"start":{"line":103,"column":4},"end":{"line":109,"column":6}},"43":{"start":{"line":111,"column":2},"end":{"line":111,"column":16}},"44":{"start":{"line":114,"column":0},"end":{"line":124,"column":1}},"45":{"start":{"line":115,"column":2},"end":{"line":123,"column":4}},"46":{"start":{"line":116,"column":4},"end":{"line":121,"column":5}},"47":{"start":{"line":117,"column":6},"end":{"line":120,"column":9}},"48":{"start":{"line":122,"column":4},"end":{"line":122,"column":18}},"49":{"start":{"line":126,"column":0},"end":{"line":158,"column":2}},"50":{"start":{"line":127,"column":2},"end":{"line":129,"column":5}},"51":{"start":{"line":132,"column":2},"end":{"line":132,"column":38}},"52":{"start":{"line":134,"column":2},"end":{"line":136,"column":3}},"53":{"start":{"line":135,"column":4},"end":{"line":135,"column":75}},"54":{"start":{"line":138,"column":2},"end":{"line":149,"column":7}},"55":{"start":{"line":141,"column":6},"end":{"line":141,"column":17}},"56":{"start":{"line":143,"column":6},"end":{"line":147,"column":7}},"57":{"start":{"line":144,"column":8},"end":{"line":144,"column":46}},"58":{"start":{"line":146,"column":8},"end":{"line":146,"column":36}},"59":{"start":{"line":148,"column":6},"end":{"line":148,"column":20}},"60":{"start":{"line":151,"column":2},"end":{"line":155,"column":3}},"61":{"start":{"line":152,"column":4},"end":{"line":154,"column":7}},"62":{"start":{"line":153,"column":6},"end":{"line":153,"column":33}},"63":{"start":{"line":157,"column":2},"end":{"line":157,"column":17}},"64":{"start":{"line":160,"column":0},"end":{"line":166,"column":2}},"65":{"start":{"line":161,"column":2},"end":{"line":165,"column":9}},"66":{"start":{"line":164,"column":10},"end":{"line":164,"column":29}},"67":{"start":{"line":173,"column":0},"end":{"line":184,"column":1}},"68":{"start":{"line":174,"column":2},"end":{"line":174,"column":27}},"69":{"start":{"line":176,"column":2},"end":{"line":181,"column":7}},"70":{"start":{"line":177,"column":6},"end":{"line":177,"column":31}},"71":{"start":{"line":180,"column":6},"end":{"line":180,"column":27}},"72":{"start":{"line":183,"column":2},"end":{"line":183,"column":26}}},"branchMap":{"1":{"line":24,"type":"cond-expr","locations":[{"start":{"line":24,"column":33},"end":{"line":24,"column":40}},{"start":{"line":24,"column":43},"end":{"line":24,"column":49}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"3":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":20},"end":{"line":32,"column":38}},{"start":{"line":32,"column":42},"end":{"line":32,"column":47}}]},"4":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":19},"end":{"line":33,"column":33}},{"start":{"line":33,"column":37},"end":{"line":33,"column":42}}]},"5":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"6":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"7":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":6},"end":{"line":43,"column":27}},{"start":{"line":43,"column":31},"end":{"line":43,"column":55}}]},"8":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"9":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"10":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":2},"end":{"line":67,"column":2}},{"start":{"line":67,"column":2},"end":{"line":67,"column":2}}]},"11":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"12":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":72,"column":8}},{"start":{"line":72,"column":8},"end":{"line":72,"column":8}}]},"13":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":11},"end":{"line":76,"column":11}},{"start":{"line":76,"column":11},"end":{"line":76,"column":11}}]},"14":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":2},"end":{"line":95,"column":2}},{"start":{"line":95,"column":2},"end":{"line":95,"column":2}}]},"15":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":2},"end":{"line":102,"column":2}},{"start":{"line":102,"column":2},"end":{"line":102,"column":2}}]},"16":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":4},"end":{"line":116,"column":4}},{"start":{"line":116,"column":4},"end":{"line":116,"column":4}}]},"17":{"line":116,"type":"binary-expr","locations":[{"start":{"line":116,"column":8},"end":{"line":116,"column":11}},{"start":{"line":116,"column":15},"end":{"line":116,"column":37}}]},"18":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":2},"end":{"line":134,"column":2}},{"start":{"line":134,"column":2},"end":{"line":134,"column":2}}]},"19":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":6},"end":{"line":143,"column":6}},{"start":{"line":143,"column":6},"end":{"line":143,"column":6}}]},"20":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":2},"end":{"line":151,"column":2}},{"start":{"line":151,"column":2},"end":{"line":151,"column":2}}]}},"code":["'use strict';","","var url = require(\"url\")","  , util = require(\"util\")","  , Q = require(\"q\")","  , axios = require(\"axios\")","  , httpAdapter = require(\"axios/lib/adapters/http\")","  , errors = require(\"./errors.js\")","  , debug = /hue-api/.test(process.env.NODE_DEBUG)","  ;","","var defaultOptions = {","  adapter: httpAdapter,","};","","function buildOptions(command, parameters) {","  var options = {","      adapter: httpAdapter,","      debug: debug,","      headers: {}","    },","    body,","    urlObj = {","      protocol: parameters.ssl ? \"https\" : \"http\",","      hostname: parameters.host","    };","","  if (parameters.port) {","    urlObj.port = parameters.port;","  }","","  options.timeout = parameters.timeout || 10000;","  options.method = command.method || \"GET\";","","  if (command.getPath) {","    urlObj.pathname = command.getPath(parameters);","  } else {","    throw new errors.ApiError(\"Cannot get the path to invoke from the command\");","  }","  options.url = url.format(urlObj);","","  // Check if the command has body arguments and process them accordingly","  if (command.bodyArguments && command.buildRequestBody) {","    body = command.buildRequestBody(parameters.values);","","    if (command.bodyType === \"application/json\") {","      options.responseType = \"json\";","      options.data = JSON.stringify(body);","    } else {","      throw new errors.ApiError(\"No support for \" + command.bodyType + \" in requests.\");","    }","  }","","  if (command.response) {","    options.headers.Accept = command.response;","  }","","  return options;","}","","function getError(jsonObject) {","  var result = null","    , idx = 0","    , len = 0","    ;","","  if (jsonObject) {","    if (util.isArray(jsonObject)) {","      for (idx = 0, len = jsonObject.length; idx < len; idx++) {","        result = getError(jsonObject[idx]);","        // Stop on the first error","        if (result) {","          break;","        }","      }","    } else if (jsonObject.error) {","      return {","        type: jsonObject.error.type,","        description: jsonObject.error.description,","        address: jsonObject.error.address","      };","    }","  }","  return result;","}","","function checkForError(result) {","  var jsonResult","    , jsonError","    ;","","  jsonResult = result.data;","  jsonError = getError(jsonResult);","","  if (jsonError) {","    throw new errors.ApiError(jsonError);","  }","  return jsonResult;","}","","function requireStatusCode200(result) {","  if (result.status !== 200) {","    throw new errors.ApiError(","      {","        type: \"Response Error\",","        description: \"Unexpected response status; \" + result.statusCode,","        statusCode: result.statusCode","      }","    );","  }","  return result;","}","","function generateErrorsIfMatched(map) {","  return function (result) {","    if (map && map[result.statusCode]) {","      throw new errors.ApiError({","        type: result.statusCode,","        message: map[result.statusCode]","      });","    }","    return result;","  };","}","","module.exports.invoke = function (command, parameters) {","  var options = buildOptions(command, parameters)","    , promise","    ;","","  //promise = requestUtil.request(options);","  promise = wrapAxios(axios(options));","","  if (command.statusCodeMap) {","    promise = promise.then(generateErrorsIfMatched(command.statusCodeMap));","  }","","  promise = promise","    .then(requireStatusCode200)","    .then(function (requestResult) {","      var result;","","      if (options.headers.Accept === \"application/json\") {","        result = checkForError(requestResult);","      } else {","        result = requestResult.data;","      }","      return result;","    });","","  if (command.postProcessing) {","    command.postProcessing.forEach(function (fn) {","      promise = promise.then(fn);","    });","  }","","  return promise;","};","","module.exports.simpleGet = function (uri) {","  return wrapAxios(axios.get(uri, defaultOptions))","      .then(requireStatusCode200)","      .then(function(result) {","          return result.data;","      });","};","","/**"," * Wrap an axios ES6 promise inside a Q promise."," * @param promise The axios promise to wrap"," * @returns {*|promise}"," */","function wrapAxios(promise) {","  var deferred = Q.defer();","","  promise.then(function (result) {","      deferred.resolve(result);","    })","    .catch(function (err) {","      deferred.reject(err);","    });","","  return deferred.promise;","}"],"l":{"3":1,"12":1,"16":1,"17":0,"28":0,"29":0,"32":0,"33":0,"35":0,"36":0,"38":0,"40":0,"43":0,"44":0,"46":0,"47":0,"48":0,"50":0,"54":0,"55":0,"58":0,"61":1,"62":0,"67":0,"68":0,"69":0,"70":0,"72":0,"73":0,"76":0,"77":0,"84":0,"87":1,"88":0,"92":0,"93":0,"95":0,"96":0,"98":0,"101":1,"102":0,"103":0,"111":0,"114":1,"115":0,"116":0,"117":0,"122":0,"126":1,"127":0,"132":0,"134":0,"135":0,"138":0,"141":0,"143":0,"144":0,"146":0,"148":0,"151":0,"152":0,"153":0,"157":0,"160":1,"161":0,"164":0,"173":1,"174":0,"176":0,"177":0,"180":0,"183":0}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/errors.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/errors.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":1,"20":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":20},"end":{"line":11,"column":43}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":15},"end":{"line":26,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":11,"column":0},"end":{"line":17,"column":2}},"3":{"start":{"line":13,"column":4},"end":{"line":13,"column":50}},"4":{"start":{"line":16,"column":4},"end":{"line":16,"column":34}},"5":{"start":{"line":18,"column":0},"end":{"line":18,"column":36}},"6":{"start":{"line":19,"column":0},"end":{"line":19,"column":48}},"7":{"start":{"line":26,"column":0},"end":{"line":44,"column":2}},"8":{"start":{"line":27,"column":4},"end":{"line":28,"column":13}},"9":{"start":{"line":30,"column":4},"end":{"line":36,"column":5}},"10":{"start":{"line":31,"column":8},"end":{"line":31,"column":29}},"11":{"start":{"line":32,"column":8},"end":{"line":32,"column":17}},"12":{"start":{"line":34,"column":8},"end":{"line":34,"column":58}},"13":{"start":{"line":35,"column":8},"end":{"line":35,"column":26}},"14":{"start":{"line":38,"column":4},"end":{"line":38,"column":63}},"15":{"start":{"line":39,"column":4},"end":{"line":39,"column":21}},"16":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"17":{"start":{"line":42,"column":8},"end":{"line":42,"column":37}},"18":{"start":{"line":45,"column":0},"end":{"line":45,"column":39}},"19":{"start":{"line":46,"column":0},"end":{"line":46,"column":38}},"20":{"start":{"line":48,"column":0},"end":{"line":48,"column":35}}},"branchMap":{"1":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":34},"end":{"line":13,"column":40}},{"start":{"line":13,"column":44},"end":{"line":13,"column":48}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":19},"end":{"line":16,"column":22}},{"start":{"line":16,"column":26},"end":{"line":16,"column":33}}]},"3":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"4":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":23},"end":{"line":34,"column":36}},{"start":{"line":34,"column":40},"end":{"line":34,"column":57}}]},"5":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]}},"code":["\"use strict\";","","var util = require('util');","","/**"," * An Abstract base class for custom errors."," * @param msg The error message"," * @param constr The constructor to call."," * @constructor"," */","var AbstractError = function (msg, constr) {","    // If defined, pass the constr property to V8's captureStackTrace to clean up the output","    Error.captureStackTrace(this, constr || this);","","    // If defined, store a custom error message","    this.message = msg || \"Error\";","};","util.inherits(AbstractError, Error);","AbstractError.prototype.name = \"Abstract Error\";","","/**"," * An Error Type for API related errors when calling the Philips Hue API."," * @param error The error object returned from the request."," * @constructor"," */","var ApiError = function (error) {","    var errorMessage,","        type;","","    if (typeof(error) === 'string') {","        errorMessage = error;","        type = 0;","    } else {","        errorMessage = error.message || error.description;","        type = error.type;","    }","","    ApiError.super_.call(this, errorMessage, this.constructor);","    this.type = type;","","    if (error.address) {","        this.address = error.address;","    }","};","util.inherits(ApiError, AbstractError);","ApiError.prototype.name = \"Api Error\";","","module.exports.ApiError = ApiError;"],"l":{"3":1,"11":1,"13":0,"16":0,"18":1,"19":1,"26":1,"27":0,"30":0,"31":0,"32":0,"34":0,"35":0,"38":0,"39":0,"41":0,"42":0,"45":1,"46":1,"48":1}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/utils.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":0,"78":0,"79":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":35},"end":{"line":13,"column":58}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":32},"end":{"line":31,"column":60}}},"3":{"name":"resolveValue","line":32,"loc":{"start":{"line":32,"column":4},"end":{"line":32,"column":33}}},"4":{"name":"resolveError","line":38,"loc":{"start":{"line":38,"column":4},"end":{"line":38,"column":31}}},"5":{"name":"(anonymous_5)","line":52,"loc":{"start":{"line":52,"column":25},"end":{"line":52,"column":48}}},"6":{"name":"(anonymous_6)","line":70,"loc":{"start":{"line":70,"column":28},"end":{"line":70,"column":45}}},"7":{"name":"(anonymous_7)","line":81,"loc":{"start":{"line":81,"column":31},"end":{"line":81,"column":49}}},"8":{"name":"(anonymous_8)","line":101,"loc":{"start":{"line":101,"column":29},"end":{"line":101,"column":48}}},"9":{"name":"(anonymous_9)","line":105,"loc":{"start":{"line":105,"column":24},"end":{"line":105,"column":42}}},"10":{"name":"(anonymous_10)","line":129,"loc":{"start":{"line":129,"column":40},"end":{"line":129,"column":58}}},"11":{"name":"(anonymous_11)","line":133,"loc":{"start":{"line":133,"column":23},"end":{"line":133,"column":40}}},"12":{"name":"(anonymous_12)","line":143,"loc":{"start":{"line":143,"column":30},"end":{"line":143,"column":52}}},"13":{"name":"_asStringValue","line":167,"loc":{"start":{"line":167,"column":0},"end":{"line":167,"column":31}}},"14":{"name":"(anonymous_14)","line":178,"loc":{"start":{"line":178,"column":32},"end":{"line":178,"column":59}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":13,"column":0},"end":{"line":23,"column":2}},"3":{"start":{"line":14,"column":4},"end":{"line":14,"column":32}},"4":{"start":{"line":16,"column":4},"end":{"line":20,"column":5}},"5":{"start":{"line":17,"column":8},"end":{"line":17,"column":51}},"6":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"7":{"start":{"line":22,"column":4},"end":{"line":22,"column":25}},"8":{"start":{"line":31,"column":0},"end":{"line":45,"column":2}},"9":{"start":{"line":32,"column":4},"end":{"line":36,"column":5}},"10":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"11":{"start":{"line":34,"column":12},"end":{"line":34,"column":34}},"12":{"start":{"line":38,"column":4},"end":{"line":42,"column":5}},"13":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"14":{"start":{"line":40,"column":12},"end":{"line":40,"column":32}},"15":{"start":{"line":44,"column":4},"end":{"line":44,"column":51}},"16":{"start":{"line":52,"column":0},"end":{"line":68,"column":2}},"17":{"start":{"line":53,"column":4},"end":{"line":55,"column":17}},"18":{"start":{"line":57,"column":4},"end":{"line":65,"column":5}},"19":{"start":{"line":58,"column":8},"end":{"line":58,"column":34}},"20":{"start":{"line":59,"column":8},"end":{"line":63,"column":9}},"21":{"start":{"line":60,"column":12},"end":{"line":62,"column":13}},"22":{"start":{"line":61,"column":16},"end":{"line":61,"column":48}},"23":{"start":{"line":64,"column":8},"end":{"line":64,"column":17}},"24":{"start":{"line":67,"column":4},"end":{"line":67,"column":15}},"25":{"start":{"line":70,"column":0},"end":{"line":74,"column":2}},"26":{"start":{"line":71,"column":4},"end":{"line":71,"column":31}},"27":{"start":{"line":73,"column":4},"end":{"line":73,"column":67}},"28":{"start":{"line":81,"column":0},"end":{"line":94,"column":2}},"29":{"start":{"line":82,"column":4},"end":{"line":84,"column":12}},"30":{"start":{"line":86,"column":4},"end":{"line":92,"column":5}},"31":{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},"32":{"start":{"line":88,"column":12},"end":{"line":88,"column":75}},"33":{"start":{"line":91,"column":8},"end":{"line":91,"column":49}},"34":{"start":{"line":93,"column":4},"end":{"line":93,"column":19}},"35":{"start":{"line":101,"column":0},"end":{"line":122,"column":2}},"36":{"start":{"line":102,"column":4},"end":{"line":102,"column":20}},"37":{"start":{"line":104,"column":4},"end":{"line":118,"column":5}},"38":{"start":{"line":105,"column":8},"end":{"line":109,"column":11}},"39":{"start":{"line":106,"column":12},"end":{"line":108,"column":13}},"40":{"start":{"line":107,"column":16},"end":{"line":107,"column":42}},"41":{"start":{"line":111,"column":8},"end":{"line":117,"column":9}},"42":{"start":{"line":112,"column":12},"end":{"line":112,"column":39}},"43":{"start":{"line":115,"column":12},"end":{"line":115,"column":36}},"44":{"start":{"line":116,"column":12},"end":{"line":116,"column":33}},"45":{"start":{"line":121,"column":4},"end":{"line":121,"column":18}},"46":{"start":{"line":129,"column":0},"end":{"line":141,"column":2}},"47":{"start":{"line":130,"column":4},"end":{"line":130,"column":20}},"48":{"start":{"line":132,"column":4},"end":{"line":138,"column":5}},"49":{"start":{"line":133,"column":8},"end":{"line":135,"column":11}},"50":{"start":{"line":134,"column":12},"end":{"line":134,"column":47}},"51":{"start":{"line":137,"column":8},"end":{"line":137,"column":44}},"52":{"start":{"line":140,"column":4},"end":{"line":140,"column":18}},"53":{"start":{"line":143,"column":0},"end":{"line":165,"column":2}},"54":{"start":{"line":144,"column":4},"end":{"line":144,"column":15}},"55":{"start":{"line":146,"column":4},"end":{"line":162,"column":5}},"56":{"start":{"line":147,"column":8},"end":{"line":147,"column":32}},"57":{"start":{"line":148,"column":11},"end":{"line":162,"column":5}},"58":{"start":{"line":149,"column":8},"end":{"line":149,"column":35}},"59":{"start":{"line":151,"column":8},"end":{"line":153,"column":9}},"60":{"start":{"line":152,"column":12},"end":{"line":152,"column":23}},"61":{"start":{"line":154,"column":11},"end":{"line":162,"column":5}},"62":{"start":{"line":155,"column":8},"end":{"line":155,"column":31}},"63":{"start":{"line":156,"column":11},"end":{"line":162,"column":5}},"64":{"start":{"line":157,"column":8},"end":{"line":157,"column":31}},"65":{"start":{"line":158,"column":11},"end":{"line":162,"column":5}},"66":{"start":{"line":159,"column":8},"end":{"line":159,"column":50}},"67":{"start":{"line":161,"column":8},"end":{"line":161,"column":23}},"68":{"start":{"line":164,"column":4},"end":{"line":164,"column":18}},"69":{"start":{"line":167,"column":0},"end":{"line":176,"column":1}},"70":{"start":{"line":168,"column":4},"end":{"line":168,"column":15}},"71":{"start":{"line":170,"column":4},"end":{"line":174,"column":5}},"72":{"start":{"line":171,"column":8},"end":{"line":171,"column":23}},"73":{"start":{"line":173,"column":8},"end":{"line":173,"column":31}},"74":{"start":{"line":175,"column":4},"end":{"line":175,"column":18}},"75":{"start":{"line":178,"column":0},"end":{"line":185,"column":2}},"76":{"start":{"line":179,"column":4},"end":{"line":179,"column":29}},"77":{"start":{"line":181,"column":4},"end":{"line":183,"column":5}},"78":{"start":{"line":182,"column":8},"end":{"line":182,"column":45}},"79":{"start":{"line":184,"column":4},"end":{"line":184,"column":18}}},"branchMap":{"1":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":16,"column":4}},{"start":{"line":16,"column":4},"end":{"line":16,"column":4}}]},"2":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":8},"end":{"line":16,"column":10}},{"start":{"line":16,"column":14},"end":{"line":16,"column":38}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":33,"column":8}},{"start":{"line":33,"column":8},"end":{"line":33,"column":8}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":39,"column":8}},{"start":{"line":39,"column":8},"end":{"line":39,"column":8}}]},"5":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":12},"end":{"line":60,"column":12}},{"start":{"line":60,"column":12},"end":{"line":60,"column":12}}]},"6":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":11},"end":{"line":73,"column":17}},{"start":{"line":73,"column":21},"end":{"line":73,"column":66}}]},"7":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":4},"end":{"line":86,"column":4}},{"start":{"line":86,"column":4},"end":{"line":86,"column":4}}]},"8":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":22},"end":{"line":88,"column":29}},{"start":{"line":88,"column":33},"end":{"line":88,"column":74}}]},"9":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":104,"column":4}},{"start":{"line":104,"column":4},"end":{"line":104,"column":4}}]},"10":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":12},"end":{"line":106,"column":12}},{"start":{"line":106,"column":12},"end":{"line":106,"column":12}}]},"11":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":111,"column":8}},{"start":{"line":111,"column":8},"end":{"line":111,"column":8}}]},"12":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":4},"end":{"line":132,"column":4}},{"start":{"line":132,"column":4},"end":{"line":132,"column":4}}]},"13":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":4},"end":{"line":146,"column":4}},{"start":{"line":146,"column":4},"end":{"line":146,"column":4}}]},"14":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":11},"end":{"line":148,"column":11}},{"start":{"line":148,"column":11},"end":{"line":148,"column":11}}]},"15":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":15},"end":{"line":148,"column":31}},{"start":{"line":148,"column":35},"end":{"line":148,"column":52}},{"start":{"line":148,"column":56},"end":{"line":148,"column":71}},{"start":{"line":148,"column":75},"end":{"line":148,"column":91}}]},"16":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":8},"end":{"line":151,"column":8}},{"start":{"line":151,"column":8},"end":{"line":151,"column":8}}]},"17":{"line":151,"type":"binary-expr","locations":[{"start":{"line":151,"column":12},"end":{"line":151,"column":32}},{"start":{"line":151,"column":36},"end":{"line":151,"column":46}}]},"18":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":11},"end":{"line":154,"column":11}},{"start":{"line":154,"column":11},"end":{"line":154,"column":11}}]},"19":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":11},"end":{"line":156,"column":11}},{"start":{"line":156,"column":11},"end":{"line":156,"column":11}}]},"20":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":11},"end":{"line":158,"column":11}},{"start":{"line":158,"column":11},"end":{"line":158,"column":11}}]},"21":{"line":159,"type":"cond-expr","locations":[{"start":{"line":159,"column":39},"end":{"line":159,"column":44}},{"start":{"line":159,"column":47},"end":{"line":159,"column":49}}]},"22":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":4},"end":{"line":170,"column":4}},{"start":{"line":170,"column":4},"end":{"line":170,"column":4}}]},"23":{"line":179,"type":"binary-expr","locations":[{"start":{"line":179,"column":17},"end":{"line":179,"column":22}},{"start":{"line":179,"column":26},"end":{"line":179,"column":28}}]},"24":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":4},"end":{"line":181,"column":4}},{"start":{"line":181,"column":4},"end":{"line":181,"column":4}}]},"25":{"line":181,"type":"binary-expr","locations":[{"start":{"line":181,"column":8},"end":{"line":181,"column":17}},{"start":{"line":181,"column":21},"end":{"line":181,"column":46}}]}},"code":["\"use strict\";","","var util = require(\"util\");","","/**"," * Checks the callback and if it is valid, will resolve the promise an utilize the callback to inform of results,"," * otherwise the promise is returned to the caller to chain."," *"," * @param promise The promise being invoked"," * @param cb The callback function, which is optional"," * @returns {*} The promise if there is not a valid callback, or null, if the callback is used to resolve the promise."," */","module.exports.promiseOrCallback = function (promise, cb) {","    var promiseResult = promise;","","    if (cb && typeof cb === \"function\") {","        module.exports.resolvePromise(promise, cb);","        // Do not return the promise, as the callbacks will have forced it to resolve","        promiseResult = null;","    }","","    return promiseResult;","};","","/**"," * Terminates a promise chain and invokes a callback with the results."," *"," * @param promise The promise to terminate"," * @param callback The callback function to invoke"," */","module.exports.resolvePromise = function(promise, callback) {","    function resolveValue(value) {","        if (callback) {","            callback(null, value);","        }","    }","","    function resolveError(err) {","        if (callback) {","            callback(err, null);","        }","    }","","    promise.then(resolveValue).catch(resolveError);","};","","/**"," * Combines the specified object with the properties defined in the values object, overwriting any existing values."," * @param obj The object to combine the values with"," * @param values The objects to get the properties and values from, can be many arguments"," */","module.exports.combine = function (obj, values) {","    var argIdx = 1,","        value,","        property;","","    while (argIdx < arguments.length) {","        value = arguments[argIdx];","        for (property in value) {","            if (value.hasOwnProperty(property)) {","                obj[property] = value[property];","            }","        }","        argIdx++;","    }","","    return obj;","};","","module.exports.isFunction = function(object) {","    var getClass = {}.toString;","","    return object && getClass.call(object) === '[object Function]';","};","","/**"," * Parses a JSON response checking for success on all changes."," * @param result The JSON object to parse for success messages."," * @returns {boolean} true if all changes were successful."," */","module.exports.wasSuccessful = function (result) {","    var success = true,","        idx,","        len;","","    if (util.isArray(result)) {","        for (idx = 0, len = result.length; idx < len; idx++) {","            success = success && module.exports.wasSuccessful(result[idx]);","        }","    } else {","        success = result.success !== 'undefined';","    }","    return success;","};","","/**"," * Parses a JSON response looking for the errors in the result(s) returned."," * @param results The results to look for errors in."," * @returns {Array} Of errors found."," */","module.exports.parseErrors = function (results) {","    var errors = [];","","    if (util.isArray(results)) {","        results.forEach(function (result) {","            if (result.error) {","                errors.push(result.error);","            }","        });","    } else {","        if (results.error) {","            errors.push(results.error);","        } else {","            //TODO this should not occur","            console.log(\"UNPARSED\");","            console.log(results);","        }","    }","","    //TODO actually find the error messages","    return errors;","};","","/**"," * Creates a String Value Array from the provided values."," * @param values The values to convert to a String value Array."," * @returns {Array} of strings."," */","module.exports.createStringValueArray = function (values) {","    var result = [];","","    if (Array.isArray(values)) {","        values.forEach(function (value) {","            result.push(_asStringValue(value));","        });","    } else {","        result.push(_asStringValue(values));","    }","","    return result;","};","","module.exports.valueForType = function(type, value) {","    var result;","","    if (type === \"bool\") {","        result = Boolean(value);","    } else if (type === \"uint8\" || type === \"uint16\" || type === \"int8\" || type === \"int16\") {","        result = Math.floor(value);","","        if (/^uint.*/.test(type) && result < 0) {","            result = 0;","        }","    } else if (type === \"string\") {","        result = String(value);","    } else if (type === \"float\") {","        result = Number(value);","    } else if (type === \"list\") {","        result = util.isArray(value) ? value : [];","    } else {","        result = value;","    }","","    return result;","};","","function _asStringValue(value) {","    var result;","","    if (typeof(value) === 'string') {","        result = value;","    } else {","        result = String(value);","    }","    return result;","}","","module.exports.getStringValue = function(value, maxLength) {","    var result = value || \"\";","","    if (maxLength && result.length > maxLength) {","        result = result.substr(0, maxLength);","    }","    return result;","};"],"l":{"3":1,"13":1,"14":0,"16":0,"17":0,"19":0,"22":0,"31":1,"32":1,"33":0,"34":0,"38":1,"39":0,"40":0,"44":0,"52":1,"53":0,"57":0,"58":0,"59":0,"60":0,"61":0,"64":0,"67":0,"70":1,"71":0,"73":0,"81":1,"82":0,"86":0,"87":0,"88":0,"91":0,"93":0,"101":1,"102":0,"104":0,"105":0,"106":0,"107":0,"111":0,"112":0,"115":0,"116":0,"121":0,"129":1,"130":0,"132":0,"133":0,"134":0,"137":0,"140":0,"143":1,"144":0,"146":0,"147":0,"148":0,"149":0,"151":0,"152":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"161":0,"164":0,"167":1,"168":0,"170":0,"171":0,"173":0,"175":0,"178":1,"179":0,"181":0,"182":0,"184":0}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/discovery.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/discovery.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"_processUpnpBridgeResults","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":44}}},"2":{"name":"(anonymous_2)","line":41,"loc":{"start":{"line":41,"column":24},"end":{"line":41,"column":42}}},"3":{"name":"bridgeResult","line":51,"loc":{"start":{"line":51,"column":0},"end":{"line":51,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":8,"column":19}},"2":{"start":{"line":10,"column":0},"end":{"line":19,"column":2}},"3":{"start":{"line":21,"column":0},"end":{"line":30,"column":2}},"4":{"start":{"line":32,"column":0},"end":{"line":35,"column":2}},"5":{"start":{"line":37,"column":0},"end":{"line":49,"column":1}},"6":{"start":{"line":38,"column":4},"end":{"line":38,"column":21}},"7":{"start":{"line":40,"column":4},"end":{"line":46,"column":5}},"8":{"start":{"line":41,"column":8},"end":{"line":43,"column":11}},"9":{"start":{"line":42,"column":12},"end":{"line":42,"column":47}},"10":{"start":{"line":45,"column":8},"end":{"line":45,"column":44}},"11":{"start":{"line":48,"column":4},"end":{"line":48,"column":19}},"12":{"start":{"line":51,"column":0},"end":{"line":58,"column":1}},"13":{"start":{"line":52,"column":4},"end":{"line":57,"column":6}}},"branchMap":{"1":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":40,"column":4}},{"start":{"line":40,"column":4},"end":{"line":40,"column":4}}]}},"code":["\"use strict\";","","var util = require(\"util\"),","    Trait = require(\"traits\").Trait,","    tApiMethod = require(\"./traits/tApiMethod\"),","    tDescription = require(\"./traits/tDescription\"),","    tPostProcessing = require(\"./traits/tPostProcessing\"),","    apiTraits = {};","","apiTraits.description = Trait.compose(","    tApiMethod(","        \"/description.xml\",","        \"GET\",","        \"1.0\",","        \"All\",","        \"application/xml\"","    ),","    tDescription(\"Returns an XML description of the Hue Bridge.\")",");","","apiTraits.upnpLookup = Trait.compose(","    tApiMethod(","        \"/api/nupnp\",","        \"GET\",","        \"1.0\",","        \"All\"","    ),","    tDescription(\"Obtains the known Hue Bridges on the network from www.meethue.com\"),","    tPostProcessing(_processUpnpBridgeResults)",");","","module.exports = {","    description: Trait.create(Object.prototype, apiTraits.description),","    upnpLookup: Trait.create(Object.prototype, apiTraits.upnpLookup)","};","","function _processUpnpBridgeResults(results) {","    var bridges = [];","","    if (util.isArray(results)) {","        results.forEach(function (bridge) {","            bridges.push(bridgeResult(bridge));","        });","    } else {","        bridges.push(bridgeResult(results));","    }","","    return bridges;","}","","function bridgeResult(bridge) {","    return {","        id: bridge.id,","        name: bridge.name,","        ipaddress: bridge.internalipaddress,","        mac: bridge.macaddress","    };","}",""],"l":{"3":1,"10":1,"21":1,"32":1,"37":1,"38":0,"40":0,"41":0,"42":0,"45":0,"48":0,"51":1,"52":0}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/traits/tApiMethod.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/traits/tApiMethod.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":33,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[33,32],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":33,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"extractParameters","line":6,"loc":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":17},"end":{"line":38,"column":72}}},"3":{"name":"(anonymous_3)","line":47,"loc":{"start":{"line":47,"column":28},"end":{"line":47,"column":40}}},"4":{"name":"(anonymous_4)","line":55,"loc":{"start":{"line":55,"column":21},"end":{"line":55,"column":39}}},"5":{"name":"(anonymous_5)","line":59,"loc":{"start":{"line":59,"column":43},"end":{"line":59,"column":63}}},"6":{"name":"(anonymous_6)","line":70,"loc":{"start":{"line":70,"column":22},"end":{"line":70,"column":34}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":48}},"2":{"start":{"line":6,"column":0},"end":{"line":36,"column":1}},"3":{"start":{"line":7,"column":4},"end":{"line":10,"column":16}},"4":{"start":{"line":12,"column":4},"end":{"line":33,"column":5}},"5":{"start":{"line":13,"column":8},"end":{"line":32,"column":9}},"6":{"start":{"line":14,"column":12},"end":{"line":14,"column":42}},"7":{"start":{"line":16,"column":12},"end":{"line":29,"column":13}},"8":{"start":{"line":18,"column":16},"end":{"line":18,"column":38}},"9":{"start":{"line":19,"column":19},"end":{"line":29,"column":13}},"10":{"start":{"line":21,"column":16},"end":{"line":25,"column":17}},"11":{"start":{"line":22,"column":20},"end":{"line":22,"column":54}},"12":{"start":{"line":24,"column":20},"end":{"line":24,"column":44}},"13":{"start":{"line":26,"column":19},"end":{"line":29,"column":13}},"14":{"start":{"line":28,"column":16},"end":{"line":28,"column":48}},"15":{"start":{"line":31,"column":12},"end":{"line":31,"column":21}},"16":{"start":{"line":35,"column":4},"end":{"line":35,"column":22}},"17":{"start":{"line":38,"column":0},"end":{"line":81,"column":2}},"18":{"start":{"line":39,"column":4},"end":{"line":80,"column":6}},"19":{"start":{"line":48,"column":16},"end":{"line":50,"column":17}},"20":{"start":{"line":49,"column":20},"end":{"line":49,"column":66}},"21":{"start":{"line":52,"column":16},"end":{"line":52,"column":52}},"22":{"start":{"line":56,"column":16},"end":{"line":57,"column":45}},"23":{"start":{"line":59,"column":16},"end":{"line":65,"column":19}},"24":{"start":{"line":60,"column":20},"end":{"line":62,"column":21}},"25":{"start":{"line":61,"column":24},"end":{"line":61,"column":109}},"26":{"start":{"line":64,"column":20},"end":{"line":64,"column":96}},"27":{"start":{"line":67,"column":16},"end":{"line":67,"column":36}},"28":{"start":{"line":71,"column":16},"end":{"line":75,"column":18}},"29":{"start":{"line":77,"column":16},"end":{"line":77,"column":46}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":12,"column":4}},{"start":{"line":12,"column":4},"end":{"line":12,"column":4}}]},"2":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":12},"end":{"line":16,"column":12}},{"start":{"line":16,"column":12},"end":{"line":16,"column":12}}]},"3":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":19},"end":{"line":19,"column":19}},{"start":{"line":19,"column":19},"end":{"line":19,"column":19}}]},"4":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":16},"end":{"line":21,"column":16}},{"start":{"line":21,"column":16},"end":{"line":21,"column":16}}]},"5":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":19},"end":{"line":26,"column":19}},{"start":{"line":26,"column":19},"end":{"line":26,"column":19}}]},"6":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":22},"end":{"line":45,"column":30}},{"start":{"line":45,"column":34},"end":{"line":45,"column":52}}]},"7":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":16},"end":{"line":48,"column":16}},{"start":{"line":48,"column":16},"end":{"line":48,"column":16}}]},"8":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":20},"end":{"line":60,"column":20}},{"start":{"line":60,"column":20},"end":{"line":60,"column":20}}]}},"code":["\"use strict\";","","var Trait = require(\"traits\").Trait,","    ApiError = require(\"../../errors\").ApiError;","","function extractParameters(str) {","    var parameters = [],","        currentParameter = null,","        currentChar,","        idx = 0;","","    if (str) {","        while (idx < str.length) {","            currentChar = str.charAt(idx);","","            if (currentChar === \"<\") {","                // The beginning of a parameter","                currentParameter = \"\";","            } else if (currentChar === \">\") {","                // The end of a parameter, maybe","                if (currentParameter !== null) {","                    parameters.push(currentParameter);","                    // Reset the current parameter","                    currentParameter = null;","                }","            } else if (currentParameter !== null) {","                // Append the character to the parameter name","                currentParameter += currentChar;","            }","","            idx += 1;","        }","    }","","    return parameters;","}","","module.exports = function (path, method, version, permission, response) {","    return Trait(","        {","            path: path,","            method: method,","            version: version,","            permission: permission, //TODO may not be required as this represents the <username> variable in the path","            response: response || \"application/json\",","","            pathParameters: function () {","                if (!this.path) {","                    throw new ApiError(\"The command has no path\");","                }","","                return extractParameters(this.path);","            },","","            getPath: function (values) {","                var requiredParameters = this.pathParameters(),","                    resolvedPath = this.path;","","                requiredParameters.forEach(function (reqParam) {","                    if (values[reqParam] === undefined) {","                        throw new ApiError(\"The required parameter '\" + reqParam + \"' was missing a value.\");","                    }","","                    resolvedPath = resolvedPath.replace(\"<\" + reqParam + \">\", values[reqParam]);","                });","","                return resolvedPath;","            },","","            toString: function () {","                var result = {","                    \"path\": this.path,","                    \"method\": this.method,","                    \"version\": this.version","                };","","                return JSON.stringify(result);","            }","        }","    );","};"],"l":{"3":1,"6":1,"7":0,"12":0,"13":0,"14":0,"16":0,"18":0,"19":0,"21":0,"22":0,"24":0,"26":0,"28":0,"31":0,"35":0,"38":1,"39":33,"48":0,"49":0,"52":0,"56":0,"59":0,"60":0,"61":0,"64":0,"67":0,"71":0,"77":0}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/traits/tDescription.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/traits/tDescription.js","s":{"1":1,"2":1,"3":33},"b":{},"f":{"1":33},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":17},"end":{"line":6,"column":40}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":48}},"2":{"start":{"line":6,"column":0},"end":{"line":12,"column":2}},"3":{"start":{"line":7,"column":4},"end":{"line":11,"column":6}}},"branchMap":{},"code":["\"use strict\";","","var Trait = require(\"traits\").Trait,","    ApiError = require(\"../../errors\").ApiError;","","module.exports = function (description) {","    return Trait(","        {","            commandDescription : description","        }","    );","};",""],"l":{"3":1,"6":1,"7":33}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/traits/tPostProcessing.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/traits/tPostProcessing.js","s":{"1":1,"2":1,"3":44,"4":44,"5":22,"6":22,"7":22,"8":0,"9":22,"10":44,"11":1,"12":22,"13":22,"14":0,"15":22,"16":22},"b":{"1":[22,22],"2":[0,22],"3":[0,22]},"f":{"1":44,"2":22,"3":22},"fnMap":{"1":{"name":"validateFunction","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":30}}},"2":{"name":"(anonymous_2)","line":12,"loc":{"start":{"line":12,"column":19},"end":{"line":12,"column":39}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":17},"end":{"line":25,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":6,"column":5}},"2":{"start":{"line":8,"column":0},"end":{"line":23,"column":1}},"3":{"start":{"line":9,"column":4},"end":{"line":9,"column":20}},"4":{"start":{"line":11,"column":4},"end":{"line":20,"column":5}},"5":{"start":{"line":12,"column":8},"end":{"line":14,"column":11}},"6":{"start":{"line":13,"column":12},"end":{"line":13,"column":63}},"7":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"8":{"start":{"line":17,"column":12},"end":{"line":17,"column":96}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":24}},"10":{"start":{"line":22,"column":4},"end":{"line":22,"column":18}},"11":{"start":{"line":25,"column":0},"end":{"line":37,"column":2}},"12":{"start":{"line":26,"column":4},"end":{"line":26,"column":28}},"13":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"14":{"start":{"line":29,"column":8},"end":{"line":29,"column":86}},"15":{"start":{"line":32,"column":4},"end":{"line":32,"column":82}},"16":{"start":{"line":34,"column":4},"end":{"line":36,"column":7}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":11,"column":4}},{"start":{"line":11,"column":4},"end":{"line":11,"column":4}}]},"2":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":16,"column":8}},{"start":{"line":16,"column":8},"end":{"line":16,"column":8}}]},"3":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]}},"code":["\"use strict\";","","var util = require(\"util\")","    , Trait = require(\"traits\").Trait","    , ApiError = require(\"../../errors\").ApiError","    ;","","function validateFunction(fn) {","    var result = [];","","    if (util.isArray(fn)) {","        fn.forEach(function (actualFn) {","            result = result.concat(validateFunction(actualFn));","        });","    } else {","        if (typeof fn !== \"function\") {","            throw new ApiError(\"The post processing function must be a function; \" + typeof fn);","        }","        result.push(fn);","    }","","    return result;","}","","module.exports = function (fn) {","    var processingFunctions;","","    if (arguments.length === 0) {","        throw new ApiError(\"At least one post processing functions must be provided\");","    }","","    processingFunctions = validateFunction(Array.prototype.slice.call(arguments));","","    return Trait({","        \"postProcessing\": processingFunctions","    });","};"],"l":{"3":1,"8":1,"9":44,"11":44,"12":22,"13":22,"16":22,"17":0,"19":22,"22":44,"25":1,"26":22,"28":22,"29":0,"32":22,"34":22}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/index.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":0,"15":1,"16":1,"17":0,"18":0,"19":1,"20":1,"21":0,"22":0,"23":1,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":1,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":1,"60":0,"61":0,"62":0,"63":1,"64":1,"65":0,"66":0,"67":0,"68":1,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":1,"84":0,"85":0,"86":1,"87":1,"88":0,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":1,"102":0,"103":0,"104":0,"105":1,"106":0,"107":0,"108":1,"109":1,"110":1,"111":0,"112":0,"113":1,"114":1,"115":0,"116":0,"117":1,"118":1,"119":0,"120":0,"121":1,"122":1,"123":0,"124":1,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":1,"134":1,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":1,"151":0,"152":0,"153":0,"154":0,"155":1,"156":0,"157":0,"158":0,"159":0,"160":1,"161":0,"162":0,"163":1,"164":1,"165":0,"166":1,"167":0,"168":0,"169":0,"170":0,"171":0,"172":1,"173":1,"174":0,"175":1,"176":1,"177":0,"178":0,"179":0,"180":0,"181":1,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":1,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":1,"199":1,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":1,"207":1,"208":0,"209":0,"210":0,"211":0,"212":1,"213":0,"214":0,"215":0,"216":0,"217":1,"218":0,"219":0,"220":0,"221":0,"222":1,"223":0,"224":0,"225":0,"226":0,"227":1,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":1,"244":1,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":1,"252":1,"253":1,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":1,"266":1,"267":0,"268":0,"269":1,"270":1,"271":0,"272":1,"273":0,"274":0,"275":1,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":1,"285":0,"286":0,"287":1,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":1,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":1,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":1,"332":0,"333":0,"334":0,"335":0,"336":1,"337":0,"338":0,"339":0,"340":0,"341":0,"342":1,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":1,"357":0,"358":0,"359":0,"360":0,"361":0,"362":1,"363":0,"364":0,"365":0,"366":0,"367":0,"368":1,"369":0,"370":0,"371":0,"372":0,"373":0,"374":1,"375":0,"376":0,"377":0,"378":0,"379":0,"380":1,"381":0,"382":0,"383":0,"384":0,"385":0,"386":1,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":1,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":1,"406":0,"407":0,"408":0,"409":0,"410":0,"411":1,"412":0,"413":0,"414":0,"415":1,"416":0,"417":0,"418":0,"419":1,"420":0,"421":0,"422":0,"423":1,"424":0,"425":0,"426":0,"427":1,"428":0,"429":0,"430":0,"431":1,"432":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0},"fnMap":{"1":{"name":"HueApi","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":24}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":17},"end":{"line":25,"column":58}}},"3":{"name":"(anonymous_3)","line":44,"loc":{"start":{"line":44,"column":30},"end":{"line":44,"column":44}}},"4":{"name":"(anonymous_4)","line":46,"loc":{"start":{"line":46,"column":14},"end":{"line":46,"column":30}}},"5":{"name":"(anonymous_5)","line":67,"loc":{"start":{"line":67,"column":31},"end":{"line":67,"column":45}}},"6":{"name":"(anonymous_6)","line":80,"loc":{"start":{"line":80,"column":26},"end":{"line":80,"column":40}}},"7":{"name":"(anonymous_7)","line":96,"loc":{"start":{"line":96,"column":32},"end":{"line":96,"column":46}}},"8":{"name":"(anonymous_8)","line":118,"loc":{"start":{"line":118,"column":32},"end":{"line":118,"column":71}}},"9":{"name":"(anonymous_9)","line":147,"loc":{"start":{"line":147,"column":35},"end":{"line":147,"column":49}}},"10":{"name":"(anonymous_10)","line":166,"loc":{"start":{"line":166,"column":30},"end":{"line":166,"column":54}}},"11":{"name":"(anonymous_11)","line":185,"loc":{"start":{"line":185,"column":35},"end":{"line":185,"column":49}}},"12":{"name":"processUsers","line":186,"loc":{"start":{"line":186,"column":4},"end":{"line":186,"column":34}}},"13":{"name":"(anonymous_13)","line":191,"loc":{"start":{"line":191,"column":38},"end":{"line":191,"column":53}}},"14":{"name":"(anonymous_14)","line":221,"loc":{"start":{"line":221,"column":27},"end":{"line":221,"column":41}}},"15":{"name":"(anonymous_15)","line":237,"loc":{"start":{"line":237,"column":26},"end":{"line":237,"column":40}}},"16":{"name":"(anonymous_16)","line":256,"loc":{"start":{"line":256,"column":31},"end":{"line":256,"column":49}}},"17":{"name":"(anonymous_17)","line":270,"loc":{"start":{"line":270,"column":38},"end":{"line":270,"column":55}}},"18":{"name":"(anonymous_18)","line":273,"loc":{"start":{"line":273,"column":27},"end":{"line":273,"column":43}}},"19":{"name":"(anonymous_19)","line":292,"loc":{"start":{"line":292,"column":29},"end":{"line":292,"column":43}}},"20":{"name":"(anonymous_20)","line":307,"loc":{"start":{"line":307,"column":38},"end":{"line":307,"column":52}}},"21":{"name":"(anonymous_21)","line":323,"loc":{"start":{"line":323,"column":32},"end":{"line":323,"column":56}}},"22":{"name":"(anonymous_22)","line":348,"loc":{"start":{"line":348,"column":33},"end":{"line":348,"column":64}}},"23":{"name":"(anonymous_23)","line":350,"loc":{"start":{"line":350,"column":14},"end":{"line":350,"column":33}}},"24":{"name":"(anonymous_24)","line":365,"loc":{"start":{"line":365,"column":38},"end":{"line":365,"column":69}}},"25":{"name":"(anonymous_25)","line":367,"loc":{"start":{"line":367,"column":14},"end":{"line":367,"column":33}}},"26":{"name":"(anonymous_26)","line":380,"loc":{"start":{"line":380,"column":26},"end":{"line":380,"column":40}}},"27":{"name":"(anonymous_27)","line":396,"loc":{"start":{"line":396,"column":30},"end":{"line":396,"column":44}}},"28":{"name":"(anonymous_28)","line":409,"loc":{"start":{"line":409,"column":32},"end":{"line":409,"column":46}}},"29":{"name":"(anonymous_29)","line":422,"loc":{"start":{"line":422,"column":31},"end":{"line":422,"column":45}}},"30":{"name":"(anonymous_30)","line":436,"loc":{"start":{"line":436,"column":28},"end":{"line":436,"column":46}}},"31":{"name":"processGroupResult","line":441,"loc":{"start":{"line":441,"column":4},"end":{"line":441,"column":39}}},"32":{"name":"(anonymous_32)","line":478,"loc":{"start":{"line":478,"column":31},"end":{"line":478,"column":65}}},"33":{"name":"(anonymous_33)","line":487,"loc":{"start":{"line":487,"column":23},"end":{"line":487,"column":40}}},"34":{"name":"(anonymous_34)","line":519,"loc":{"start":{"line":519,"column":31},"end":{"line":519,"column":61}}},"35":{"name":"(anonymous_35)","line":540,"loc":{"start":{"line":540,"column":31},"end":{"line":540,"column":49}}},"36":{"name":"(anonymous_36)","line":557,"loc":{"start":{"line":557,"column":29},"end":{"line":557,"column":43}}},"37":{"name":"(anonymous_37)","line":574,"loc":{"start":{"line":574,"column":31},"end":{"line":574,"column":49}}},"38":{"name":"parseResults","line":579,"loc":{"start":{"line":579,"column":4},"end":{"line":579,"column":34}}},"39":{"name":"(anonymous_39)","line":600,"loc":{"start":{"line":600,"column":33},"end":{"line":600,"column":57}}},"40":{"name":"(anonymous_40)","line":613,"loc":{"start":{"line":613,"column":34},"end":{"line":613,"column":52}}},"41":{"name":"(anonymous_41)","line":633,"loc":{"start":{"line":633,"column":34},"end":{"line":633,"column":62}}},"42":{"name":"(anonymous_42)","line":658,"loc":{"start":{"line":658,"column":26},"end":{"line":658,"column":40}}},"43":{"name":"(anonymous_43)","line":660,"loc":{"start":{"line":660,"column":14},"end":{"line":660,"column":32}}},"44":{"name":"(anonymous_44)","line":663,"loc":{"start":{"line":663,"column":40},"end":{"line":663,"column":54}}},"45":{"name":"(anonymous_45)","line":685,"loc":{"start":{"line":685,"column":25},"end":{"line":685,"column":48}}},"46":{"name":"(anonymous_46)","line":693,"loc":{"start":{"line":693,"column":14},"end":{"line":693,"column":29}}},"47":{"name":"(anonymous_47)","line":709,"loc":{"start":{"line":709,"column":31},"end":{"line":709,"column":53}}},"48":{"name":"(anonymous_48)","line":737,"loc":{"start":{"line":737,"column":31},"end":{"line":737,"column":52}}},"49":{"name":"(anonymous_49)","line":754,"loc":{"start":{"line":754,"column":36},"end":{"line":754,"column":66}}},"50":{"name":"(anonymous_50)","line":776,"loc":{"start":{"line":776,"column":39},"end":{"line":776,"column":59}}},"51":{"name":"(anonymous_51)","line":804,"loc":{"start":{"line":804,"column":31},"end":{"line":804,"column":78}}},"52":{"name":"(anonymous_52)","line":853,"loc":{"start":{"line":853,"column":38},"end":{"line":853,"column":83}}},"53":{"name":"(anonymous_53)","line":857,"loc":{"start":{"line":857,"column":14},"end":{"line":857,"column":33}}},"54":{"name":"(anonymous_54)","line":880,"loc":{"start":{"line":880,"column":33},"end":{"line":880,"column":71}}},"55":{"name":"(anonymous_55)","line":946,"loc":{"start":{"line":946,"column":32},"end":{"line":946,"column":46}}},"56":{"name":"(anonymous_56)","line":960,"loc":{"start":{"line":960,"column":30},"end":{"line":960,"column":42}}},"57":{"name":"(anonymous_57)","line":970,"loc":{"start":{"line":970,"column":35},"end":{"line":970,"column":47}}},"58":{"name":"(anonymous_58)","line":981,"loc":{"start":{"line":981,"column":33},"end":{"line":981,"column":49}}},"59":{"name":"(anonymous_59)","line":985,"loc":{"start":{"line":985,"column":14},"end":{"line":985,"column":32}}},"60":{"name":"(anonymous_60)","line":989,"loc":{"start":{"line":989,"column":31},"end":{"line":989,"column":48}}},"61":{"name":"(anonymous_61)","line":1000,"loc":{"start":{"line":1000,"column":27},"end":{"line":1000,"column":39}}},"62":{"name":"(anonymous_62)","line":1011,"loc":{"start":{"line":1011,"column":41},"end":{"line":1011,"column":60}}},"63":{"name":"(anonymous_63)","line":1019,"loc":{"start":{"line":1019,"column":16},"end":{"line":1019,"column":44}}},"64":{"name":"(anonymous_64)","line":1025,"loc":{"start":{"line":1025,"column":37},"end":{"line":1025,"column":55}}},"65":{"name":"(anonymous_65)","line":1048,"loc":{"start":{"line":1048,"column":46},"end":{"line":1048,"column":78}}},"66":{"name":"(anonymous_66)","line":1113,"loc":{"start":{"line":1113,"column":41},"end":{"line":1113,"column":73}}},"67":{"name":"(anonymous_67)","line":1134,"loc":{"start":{"line":1134,"column":22},"end":{"line":1134,"column":46}}},"68":{"name":"(anonymous_68)","line":1162,"loc":{"start":{"line":1162,"column":35},"end":{"line":1162,"column":59}}},"69":{"name":"_setDeleteUserOptions","line":1180,"loc":{"start":{"line":1180,"column":0},"end":{"line":1180,"column":50}}},"70":{"name":"_setConfigurationOptions","line":1199,"loc":{"start":{"line":1199,"column":0},"end":{"line":1199,"column":51}}},"71":{"name":"(anonymous_71)","line":1204,"loc":{"start":{"line":1204,"column":76},"end":{"line":1204,"column":93}}},"72":{"name":"getLightsModelMap","line":1232,"loc":{"start":{"line":1232,"column":0},"end":{"line":1232,"column":40}}},"73":{"name":"(anonymous_73)","line":1236,"loc":{"start":{"line":1236,"column":28},"end":{"line":1236,"column":44}}},"74":{"name":"_setLightIdOption","line":1252,"loc":{"start":{"line":1252,"column":0},"end":{"line":1252,"column":40}}},"75":{"name":"_setGroupIdOption","line":1272,"loc":{"start":{"line":1272,"column":0},"end":{"line":1272,"column":40}}},"76":{"name":"_setGroupIdOptionForModification","line":1292,"loc":{"start":{"line":1292,"column":0},"end":{"line":1292,"column":55}}},"77":{"name":"_setScheduleIdOption","line":1312,"loc":{"start":{"line":1312,"column":0},"end":{"line":1312,"column":43}}},"78":{"name":"_setScheduleOptionsForCreation","line":1332,"loc":{"start":{"line":1332,"column":0},"end":{"line":1332,"column":59}}},"79":{"name":"(anonymous_79)","line":1336,"loc":{"start":{"line":1336,"column":67},"end":{"line":1336,"column":84}}},"80":{"name":"_setScheduleOptionsForUpdate","line":1361,"loc":{"start":{"line":1361,"column":0},"end":{"line":1361,"column":57}}},"81":{"name":"(anonymous_81)","line":1366,"loc":{"start":{"line":1366,"column":74},"end":{"line":1366,"column":91}}},"82":{"name":"_setSceneIdOption","line":1389,"loc":{"start":{"line":1389,"column":0},"end":{"line":1389,"column":45}}},"83":{"name":"_errorPromise","line":1408,"loc":{"start":{"line":1408,"column":0},"end":{"line":1408,"column":32}}},"84":{"name":"_isLightIdValid","line":1421,"loc":{"start":{"line":1421,"column":0},"end":{"line":1421,"column":29}}},"85":{"name":"_isGroupIdValid","line":1437,"loc":{"start":{"line":1437,"column":0},"end":{"line":1437,"column":29}}},"86":{"name":"_isGroupIdValidForModification","line":1453,"loc":{"start":{"line":1453,"column":0},"end":{"line":1453,"column":44}}},"87":{"name":"_isScheduleIdValid","line":1467,"loc":{"start":{"line":1467,"column":0},"end":{"line":1467,"column":32}}},"88":{"name":"_isSceneIdValid","line":1476,"loc":{"start":{"line":1476,"column":0},"end":{"line":1476,"column":29}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":19,"column":5}},"2":{"start":{"line":21,"column":0},"end":{"line":23,"column":1}},"3":{"start":{"line":22,"column":4},"end":{"line":22,"column":26}},"4":{"start":{"line":25,"column":0},"end":{"line":34,"column":2}},"5":{"start":{"line":26,"column":4},"end":{"line":31,"column":6}},"6":{"start":{"line":33,"column":4},"end":{"line":33,"column":30}},"7":{"start":{"line":44,"column":0},"end":{"line":57,"column":2}},"8":{"start":{"line":45,"column":4},"end":{"line":54,"column":11}},"9":{"start":{"line":47,"column":12},"end":{"line":53,"column":14}},"10":{"start":{"line":56,"column":4},"end":{"line":56,"column":48}},"11":{"start":{"line":58,"column":0},"end":{"line":58,"column":55}},"12":{"start":{"line":67,"column":0},"end":{"line":70,"column":2}},"13":{"start":{"line":68,"column":4},"end":{"line":68,"column":69}},"14":{"start":{"line":69,"column":4},"end":{"line":69,"column":48}},"15":{"start":{"line":71,"column":0},"end":{"line":71,"column":63}},"16":{"start":{"line":80,"column":0},"end":{"line":85,"column":2}},"17":{"start":{"line":81,"column":4},"end":{"line":82,"column":74}},"18":{"start":{"line":84,"column":4},"end":{"line":84,"column":48}},"19":{"start":{"line":86,"column":0},"end":{"line":86,"column":53}},"20":{"start":{"line":96,"column":0},"end":{"line":101,"column":2}},"21":{"start":{"line":97,"column":4},"end":{"line":98,"column":70}},"22":{"start":{"line":100,"column":4},"end":{"line":100,"column":48}},"23":{"start":{"line":102,"column":0},"end":{"line":102,"column":59}},"24":{"start":{"line":118,"column":0},"end":{"line":136,"column":2}},"25":{"start":{"line":119,"column":4},"end":{"line":125,"column":9}},"26":{"start":{"line":127,"column":4},"end":{"line":132,"column":5}},"27":{"start":{"line":128,"column":8},"end":{"line":128,"column":47}},"28":{"start":{"line":129,"column":8},"end":{"line":129,"column":31}},"29":{"start":{"line":131,"column":8},"end":{"line":131,"column":67}},"30":{"start":{"line":134,"column":4},"end":{"line":134,"column":64}},"31":{"start":{"line":135,"column":4},"end":{"line":135,"column":48}},"32":{"start":{"line":137,"column":0},"end":{"line":137,"column":60}},"33":{"start":{"line":147,"column":0},"end":{"line":156,"column":2}},"34":{"start":{"line":148,"column":4},"end":{"line":149,"column":16}},"35":{"start":{"line":151,"column":4},"end":{"line":151,"column":70}},"36":{"start":{"line":152,"column":4},"end":{"line":154,"column":5}},"37":{"start":{"line":153,"column":8},"end":{"line":153,"column":77}},"38":{"start":{"line":155,"column":4},"end":{"line":155,"column":48}},"39":{"start":{"line":166,"column":0},"end":{"line":175,"column":2}},"40":{"start":{"line":167,"column":4},"end":{"line":168,"column":16}},"41":{"start":{"line":170,"column":4},"end":{"line":170,"column":55}},"42":{"start":{"line":171,"column":4},"end":{"line":173,"column":5}},"43":{"start":{"line":172,"column":8},"end":{"line":172,"column":68}},"44":{"start":{"line":174,"column":4},"end":{"line":174,"column":48}},"45":{"start":{"line":176,"column":0},"end":{"line":176,"column":62}},"46":{"start":{"line":185,"column":0},"end":{"line":211,"column":2}},"47":{"start":{"line":186,"column":4},"end":{"line":207,"column":5}},"48":{"start":{"line":187,"column":8},"end":{"line":188,"column":25}},"49":{"start":{"line":190,"column":8},"end":{"line":205,"column":9}},"50":{"start":{"line":191,"column":12},"end":{"line":204,"column":15}},"51":{"start":{"line":192,"column":16},"end":{"line":192,"column":27}},"52":{"start":{"line":193,"column":16},"end":{"line":203,"column":17}},"53":{"start":{"line":194,"column":20},"end":{"line":194,"column":39}},"54":{"start":{"line":195,"column":20},"end":{"line":202,"column":22}},"55":{"start":{"line":206,"column":8},"end":{"line":206,"column":36}},"56":{"start":{"line":209,"column":4},"end":{"line":209,"column":51}},"57":{"start":{"line":210,"column":4},"end":{"line":210,"column":48}},"58":{"start":{"line":212,"column":0},"end":{"line":212,"column":71}},"59":{"start":{"line":221,"column":0},"end":{"line":228,"column":2}},"60":{"start":{"line":222,"column":4},"end":{"line":223,"column":16}},"61":{"start":{"line":225,"column":4},"end":{"line":225,"column":61}},"62":{"start":{"line":227,"column":4},"end":{"line":227,"column":48}},"63":{"start":{"line":229,"column":0},"end":{"line":229,"column":55}},"64":{"start":{"line":237,"column":0},"end":{"line":244,"column":2}},"65":{"start":{"line":238,"column":4},"end":{"line":239,"column":14}},"66":{"start":{"line":241,"column":4},"end":{"line":241,"column":59}},"67":{"start":{"line":243,"column":4},"end":{"line":243,"column":48}},"68":{"start":{"line":245,"column":0},"end":{"line":245,"column":53}},"69":{"start":{"line":256,"column":0},"end":{"line":266,"column":2}},"70":{"start":{"line":257,"column":4},"end":{"line":258,"column":16}},"71":{"start":{"line":260,"column":4},"end":{"line":260,"column":45}},"72":{"start":{"line":262,"column":4},"end":{"line":264,"column":5}},"73":{"start":{"line":263,"column":8},"end":{"line":263,"column":77}},"74":{"start":{"line":265,"column":4},"end":{"line":265,"column":48}},"75":{"start":{"line":267,"column":0},"end":{"line":267,"column":63}},"76":{"start":{"line":270,"column":0},"end":{"line":283,"column":2}},"77":{"start":{"line":271,"column":4},"end":{"line":271,"column":39}},"78":{"start":{"line":273,"column":4},"end":{"line":280,"column":7}},"79":{"start":{"line":274,"column":8},"end":{"line":278,"column":11}},"80":{"start":{"line":279,"column":8},"end":{"line":279,"column":87}},"81":{"start":{"line":282,"column":4},"end":{"line":282,"column":48}},"82":{"start":{"line":284,"column":0},"end":{"line":284,"column":77}},"83":{"start":{"line":292,"column":0},"end":{"line":297,"column":2}},"84":{"start":{"line":293,"column":4},"end":{"line":294,"column":63}},"85":{"start":{"line":296,"column":4},"end":{"line":296,"column":48}},"86":{"start":{"line":298,"column":0},"end":{"line":298,"column":59}},"87":{"start":{"line":307,"column":0},"end":{"line":312,"column":2}},"88":{"start":{"line":308,"column":4},"end":{"line":309,"column":69}},"89":{"start":{"line":311,"column":4},"end":{"line":311,"column":48}},"90":{"start":{"line":323,"column":0},"end":{"line":337,"column":2}},"91":{"start":{"line":324,"column":4},"end":{"line":325,"column":16}},"92":{"start":{"line":327,"column":4},"end":{"line":327,"column":45}},"93":{"start":{"line":329,"column":4},"end":{"line":331,"column":6}},"94":{"start":{"line":333,"column":4},"end":{"line":335,"column":5}},"95":{"start":{"line":334,"column":8},"end":{"line":334,"column":62}},"96":{"start":{"line":336,"column":4},"end":{"line":336,"column":48}},"97":{"start":{"line":348,"column":0},"end":{"line":354,"column":2}},"98":{"start":{"line":349,"column":4},"end":{"line":352,"column":11}},"99":{"start":{"line":351,"column":12},"end":{"line":351,"column":65}},"100":{"start":{"line":353,"column":4},"end":{"line":353,"column":48}},"101":{"start":{"line":365,"column":0},"end":{"line":371,"column":2}},"102":{"start":{"line":366,"column":4},"end":{"line":369,"column":11}},"103":{"start":{"line":368,"column":12},"end":{"line":368,"column":65}},"104":{"start":{"line":370,"column":4},"end":{"line":370,"column":48}},"105":{"start":{"line":380,"column":0},"end":{"line":385,"column":2}},"106":{"start":{"line":381,"column":4},"end":{"line":382,"column":63}},"107":{"start":{"line":384,"column":4},"end":{"line":384,"column":48}},"108":{"start":{"line":386,"column":0},"end":{"line":386,"column":53}},"109":{"start":{"line":387,"column":0},"end":{"line":387,"column":56}},"110":{"start":{"line":396,"column":0},"end":{"line":399,"column":2}},"111":{"start":{"line":397,"column":4},"end":{"line":397,"column":50}},"112":{"start":{"line":398,"column":4},"end":{"line":398,"column":48}},"113":{"start":{"line":400,"column":0},"end":{"line":400,"column":61}},"114":{"start":{"line":409,"column":0},"end":{"line":412,"column":2}},"115":{"start":{"line":410,"column":4},"end":{"line":410,"column":52}},"116":{"start":{"line":411,"column":4},"end":{"line":411,"column":48}},"117":{"start":{"line":413,"column":0},"end":{"line":413,"column":65}},"118":{"start":{"line":422,"column":0},"end":{"line":425,"column":2}},"119":{"start":{"line":423,"column":4},"end":{"line":423,"column":51}},"120":{"start":{"line":424,"column":4},"end":{"line":424,"column":48}},"121":{"start":{"line":426,"column":0},"end":{"line":426,"column":63}},"122":{"start":{"line":436,"column":0},"end":{"line":463,"column":2}},"123":{"start":{"line":437,"column":4},"end":{"line":438,"column":16}},"124":{"start":{"line":441,"column":4},"end":{"line":455,"column":5}},"125":{"start":{"line":442,"column":8},"end":{"line":448,"column":10}},"126":{"start":{"line":450,"column":8},"end":{"line":452,"column":9}},"127":{"start":{"line":451,"column":12},"end":{"line":451,"column":43}},"128":{"start":{"line":454,"column":8},"end":{"line":454,"column":22}},"129":{"start":{"line":457,"column":4},"end":{"line":457,"column":45}},"130":{"start":{"line":458,"column":4},"end":{"line":460,"column":5}},"131":{"start":{"line":459,"column":8},"end":{"line":459,"column":94}},"132":{"start":{"line":462,"column":4},"end":{"line":462,"column":48}},"133":{"start":{"line":464,"column":0},"end":{"line":464,"column":51}},"134":{"start":{"line":478,"column":0},"end":{"line":508,"column":2}},"135":{"start":{"line":479,"column":4},"end":{"line":481,"column":16}},"136":{"start":{"line":483,"column":4},"end":{"line":483,"column":24}},"137":{"start":{"line":484,"column":4},"end":{"line":484,"column":60}},"138":{"start":{"line":487,"column":4},"end":{"line":497,"column":7}},"139":{"start":{"line":488,"column":8},"end":{"line":496,"column":9}},"140":{"start":{"line":489,"column":12},"end":{"line":489,"column":23}},"141":{"start":{"line":490,"column":15},"end":{"line":496,"column":9}},"142":{"start":{"line":491,"column":12},"end":{"line":491,"column":72}},"143":{"start":{"line":492,"column":15},"end":{"line":496,"column":9}},"144":{"start":{"line":495,"column":12},"end":{"line":495,"column":40}},"145":{"start":{"line":499,"column":4},"end":{"line":501,"column":5}},"146":{"start":{"line":500,"column":8},"end":{"line":500,"column":80}},"147":{"start":{"line":503,"column":4},"end":{"line":505,"column":5}},"148":{"start":{"line":504,"column":8},"end":{"line":504,"column":69}},"149":{"start":{"line":507,"column":4},"end":{"line":507,"column":48}},"150":{"start":{"line":519,"column":0},"end":{"line":530,"column":2}},"151":{"start":{"line":520,"column":4},"end":{"line":521,"column":16}},"152":{"start":{"line":523,"column":4},"end":{"line":526,"column":6}},"153":{"start":{"line":528,"column":4},"end":{"line":528,"column":58}},"154":{"start":{"line":529,"column":4},"end":{"line":529,"column":48}},"155":{"start":{"line":540,"column":0},"end":{"line":548,"column":2}},"156":{"start":{"line":541,"column":4},"end":{"line":542,"column":64}},"157":{"start":{"line":544,"column":4},"end":{"line":546,"column":5}},"158":{"start":{"line":545,"column":8},"end":{"line":545,"column":62}},"159":{"start":{"line":547,"column":4},"end":{"line":547,"column":48}},"160":{"start":{"line":557,"column":0},"end":{"line":562,"column":2}},"161":{"start":{"line":558,"column":4},"end":{"line":559,"column":69}},"162":{"start":{"line":561,"column":4},"end":{"line":561,"column":48}},"163":{"start":{"line":563,"column":0},"end":{"line":563,"column":59}},"164":{"start":{"line":574,"column":0},"end":{"line":588,"column":2}},"165":{"start":{"line":575,"column":4},"end":{"line":577,"column":7}},"166":{"start":{"line":579,"column":4},"end":{"line":582,"column":5}},"167":{"start":{"line":580,"column":8},"end":{"line":580,"column":23}},"168":{"start":{"line":581,"column":8},"end":{"line":581,"column":22}},"169":{"start":{"line":584,"column":4},"end":{"line":586,"column":5}},"170":{"start":{"line":585,"column":8},"end":{"line":585,"column":84}},"171":{"start":{"line":587,"column":4},"end":{"line":587,"column":48}},"172":{"start":{"line":589,"column":0},"end":{"line":589,"column":57}},"173":{"start":{"line":600,"column":0},"end":{"line":602,"column":2}},"174":{"start":{"line":601,"column":4},"end":{"line":601,"column":46}},"175":{"start":{"line":603,"column":0},"end":{"line":603,"column":65}},"176":{"start":{"line":613,"column":0},"end":{"line":622,"column":2}},"177":{"start":{"line":614,"column":4},"end":{"line":616,"column":7}},"178":{"start":{"line":618,"column":4},"end":{"line":620,"column":5}},"179":{"start":{"line":619,"column":8},"end":{"line":619,"column":68}},"180":{"start":{"line":621,"column":4},"end":{"line":621,"column":48}},"181":{"start":{"line":633,"column":0},"end":{"line":648,"column":2}},"182":{"start":{"line":634,"column":4},"end":{"line":636,"column":7}},"183":{"start":{"line":638,"column":4},"end":{"line":638,"column":48}},"184":{"start":{"line":639,"column":4},"end":{"line":641,"column":5}},"185":{"start":{"line":640,"column":8},"end":{"line":640,"column":66}},"186":{"start":{"line":643,"column":4},"end":{"line":645,"column":5}},"187":{"start":{"line":644,"column":8},"end":{"line":644,"column":75}},"188":{"start":{"line":647,"column":4},"end":{"line":647,"column":48}},"189":{"start":{"line":658,"column":0},"end":{"line":675,"column":2}},"190":{"start":{"line":659,"column":4},"end":{"line":672,"column":11}},"191":{"start":{"line":661,"column":12},"end":{"line":661,"column":28}},"192":{"start":{"line":663,"column":12},"end":{"line":670,"column":15}},"193":{"start":{"line":664,"column":16},"end":{"line":666,"column":19}},"194":{"start":{"line":668,"column":16},"end":{"line":668,"column":38}},"195":{"start":{"line":669,"column":16},"end":{"line":669,"column":43}},"196":{"start":{"line":671,"column":12},"end":{"line":671,"column":26}},"197":{"start":{"line":674,"column":4},"end":{"line":674,"column":48}},"198":{"start":{"line":676,"column":0},"end":{"line":676,"column":53}},"199":{"start":{"line":685,"column":0},"end":{"line":700,"column":2}},"200":{"start":{"line":686,"column":4},"end":{"line":688,"column":7}},"201":{"start":{"line":690,"column":4},"end":{"line":697,"column":5}},"202":{"start":{"line":692,"column":6},"end":{"line":696,"column":10}},"203":{"start":{"line":694,"column":10},"end":{"line":694,"column":28}},"204":{"start":{"line":695,"column":10},"end":{"line":695,"column":22}},"205":{"start":{"line":699,"column":4},"end":{"line":699,"column":48}},"206":{"start":{"line":701,"column":0},"end":{"line":701,"column":51}},"207":{"start":{"line":709,"column":0},"end":{"line":720,"column":2}},"208":{"start":{"line":710,"column":4},"end":{"line":712,"column":7}},"209":{"start":{"line":714,"column":4},"end":{"line":717,"column":5}},"210":{"start":{"line":716,"column":8},"end":{"line":716,"column":62}},"211":{"start":{"line":719,"column":4},"end":{"line":719,"column":48}},"212":{"start":{"line":737,"column":0},"end":{"line":745,"column":2}},"213":{"start":{"line":738,"column":4},"end":{"line":738,"column":20}},"214":{"start":{"line":740,"column":4},"end":{"line":744,"column":5}},"215":{"start":{"line":741,"column":8},"end":{"line":741,"column":79}},"216":{"start":{"line":743,"column":8},"end":{"line":743,"column":68}},"217":{"start":{"line":754,"column":0},"end":{"line":768,"column":2}},"218":{"start":{"line":755,"column":4},"end":{"line":758,"column":7}},"219":{"start":{"line":760,"column":4},"end":{"line":764,"column":6}},"220":{"start":{"line":766,"column":4},"end":{"line":766,"column":58}},"221":{"start":{"line":767,"column":4},"end":{"line":767,"column":48}},"222":{"start":{"line":776,"column":0},"end":{"line":788,"column":2}},"223":{"start":{"line":777,"column":4},"end":{"line":781,"column":7}},"224":{"start":{"line":784,"column":4},"end":{"line":784,"column":29}},"225":{"start":{"line":786,"column":4},"end":{"line":786,"column":58}},"226":{"start":{"line":787,"column":4},"end":{"line":787,"column":48}},"227":{"start":{"line":804,"column":0},"end":{"line":840,"column":2}},"228":{"start":{"line":805,"column":4},"end":{"line":809,"column":9}},"229":{"start":{"line":811,"column":4},"end":{"line":838,"column":5}},"230":{"start":{"line":816,"column":8},"end":{"line":819,"column":9}},"231":{"start":{"line":817,"column":12},"end":{"line":817,"column":33}},"232":{"start":{"line":818,"column":12},"end":{"line":818,"column":31}},"233":{"start":{"line":821,"column":8},"end":{"line":821,"column":28}},"234":{"start":{"line":824,"column":8},"end":{"line":826,"column":9}},"235":{"start":{"line":825,"column":12},"end":{"line":825,"column":50}},"236":{"start":{"line":828,"column":8},"end":{"line":836,"column":9}},"237":{"start":{"line":829,"column":12},"end":{"line":831,"column":13}},"238":{"start":{"line":830,"column":16},"end":{"line":830,"column":83}},"239":{"start":{"line":833,"column":12},"end":{"line":835,"column":13}},"240":{"start":{"line":834,"column":16},"end":{"line":834,"column":49}},"241":{"start":{"line":837,"column":8},"end":{"line":837,"column":62}},"242":{"start":{"line":839,"column":4},"end":{"line":839,"column":48}},"243":{"start":{"line":841,"column":0},"end":{"line":841,"column":60}},"244":{"start":{"line":853,"column":0},"end":{"line":865,"column":2}},"245":{"start":{"line":854,"column":4},"end":{"line":854,"column":16}},"246":{"start":{"line":856,"column":4},"end":{"line":863,"column":11}},"247":{"start":{"line":859,"column":12},"end":{"line":859,"column":41}},"248":{"start":{"line":860,"column":12},"end":{"line":860,"column":33}},"249":{"start":{"line":862,"column":12},"end":{"line":862,"column":68}},"250":{"start":{"line":864,"column":4},"end":{"line":864,"column":48}},"251":{"start":{"line":866,"column":0},"end":{"line":866,"column":77}},"252":{"start":{"line":867,"column":0},"end":{"line":867,"column":77}},"253":{"start":{"line":880,"column":0},"end":{"line":899,"column":2}},"254":{"start":{"line":881,"column":4},"end":{"line":881,"column":16}},"255":{"start":{"line":883,"column":4},"end":{"line":886,"column":5}},"256":{"start":{"line":884,"column":8},"end":{"line":884,"column":27}},"257":{"start":{"line":885,"column":8},"end":{"line":885,"column":29}},"258":{"start":{"line":888,"column":4},"end":{"line":895,"column":5}},"259":{"start":{"line":889,"column":8},"end":{"line":889,"column":50}},"260":{"start":{"line":890,"column":8},"end":{"line":892,"column":9}},"261":{"start":{"line":891,"column":12},"end":{"line":891,"column":30}},"262":{"start":{"line":894,"column":8},"end":{"line":894,"column":26}},"263":{"start":{"line":897,"column":4},"end":{"line":897,"column":71}},"264":{"start":{"line":898,"column":4},"end":{"line":898,"column":48}},"265":{"start":{"line":900,"column":0},"end":{"line":900,"column":62}},"266":{"start":{"line":946,"column":0},"end":{"line":952,"column":2}},"267":{"start":{"line":947,"column":4},"end":{"line":949,"column":9}},"268":{"start":{"line":951,"column":4},"end":{"line":951,"column":48}},"269":{"start":{"line":953,"column":0},"end":{"line":953,"column":59}},"270":{"start":{"line":960,"column":0},"end":{"line":962,"column":2}},"271":{"start":{"line":961,"column":4},"end":{"line":961,"column":24}},"272":{"start":{"line":970,"column":0},"end":{"line":979,"column":2}},"273":{"start":{"line":971,"column":4},"end":{"line":971,"column":35}},"274":{"start":{"line":973,"column":4},"end":{"line":978,"column":6}},"275":{"start":{"line":981,"column":0},"end":{"line":998,"column":2}},"276":{"start":{"line":982,"column":4},"end":{"line":982,"column":20}},"277":{"start":{"line":984,"column":4},"end":{"line":997,"column":11}},"278":{"start":{"line":986,"column":12},"end":{"line":986,"column":29}},"279":{"start":{"line":988,"column":12},"end":{"line":994,"column":13}},"280":{"start":{"line":989,"column":16},"end":{"line":993,"column":18}},"281":{"start":{"line":990,"column":20},"end":{"line":992,"column":21}},"282":{"start":{"line":991,"column":24},"end":{"line":991,"column":44}},"283":{"start":{"line":996,"column":12},"end":{"line":996,"column":27}},"284":{"start":{"line":1000,"column":0},"end":{"line":1003,"column":2}},"285":{"start":{"line":1001,"column":4},"end":{"line":1001,"column":41}},"286":{"start":{"line":1002,"column":4},"end":{"line":1002,"column":56}},"287":{"start":{"line":1011,"column":0},"end":{"line":1038,"column":2}},"288":{"start":{"line":1012,"column":4},"end":{"line":1012,"column":20}},"289":{"start":{"line":1014,"column":4},"end":{"line":1037,"column":11}},"290":{"start":{"line":1020,"column":12},"end":{"line":1022,"column":17}},"291":{"start":{"line":1024,"column":12},"end":{"line":1034,"column":13}},"292":{"start":{"line":1025,"column":16},"end":{"line":1033,"column":19}},"293":{"start":{"line":1026,"column":20},"end":{"line":1026,"column":52}},"294":{"start":{"line":1028,"column":20},"end":{"line":1032,"column":21}},"295":{"start":{"line":1029,"column":24},"end":{"line":1029,"column":51}},"296":{"start":{"line":1031,"column":24},"end":{"line":1031,"column":49}},"297":{"start":{"line":1036,"column":12},"end":{"line":1036,"column":23}},"298":{"start":{"line":1048,"column":0},"end":{"line":1111,"column":2}},"299":{"start":{"line":1049,"column":4},"end":{"line":1054,"column":9}},"300":{"start":{"line":1056,"column":4},"end":{"line":1056,"column":50}},"301":{"start":{"line":1058,"column":4},"end":{"line":1108,"column":5}},"302":{"start":{"line":1061,"column":8},"end":{"line":1065,"column":9}},"303":{"start":{"line":1062,"column":12},"end":{"line":1062,"column":32}},"304":{"start":{"line":1064,"column":12},"end":{"line":1064,"column":51}},"305":{"start":{"line":1067,"column":8},"end":{"line":1107,"column":9}},"306":{"start":{"line":1074,"column":12},"end":{"line":1074,"column":33}},"307":{"start":{"line":1075,"column":12},"end":{"line":1075,"column":87}},"308":{"start":{"line":1076,"column":12},"end":{"line":1076,"column":39}},"309":{"start":{"line":1102,"column":12},"end":{"line":1102,"column":45}},"310":{"start":{"line":1104,"column":12},"end":{"line":1104,"column":33}},"311":{"start":{"line":1105,"column":12},"end":{"line":1105,"column":38}},"312":{"start":{"line":1106,"column":12},"end":{"line":1106,"column":39}},"313":{"start":{"line":1110,"column":4},"end":{"line":1110,"column":19}},"314":{"start":{"line":1113,"column":0},"end":{"line":1152,"column":2}},"315":{"start":{"line":1114,"column":4},"end":{"line":1119,"column":9}},"316":{"start":{"line":1121,"column":4},"end":{"line":1121,"column":50}},"317":{"start":{"line":1123,"column":4},"end":{"line":1149,"column":5}},"318":{"start":{"line":1126,"column":8},"end":{"line":1130,"column":9}},"319":{"start":{"line":1127,"column":12},"end":{"line":1127,"column":32}},"320":{"start":{"line":1129,"column":12},"end":{"line":1129,"column":51}},"321":{"start":{"line":1132,"column":8},"end":{"line":1147,"column":9}},"322":{"start":{"line":1133,"column":12},"end":{"line":1139,"column":19}},"323":{"start":{"line":1135,"column":20},"end":{"line":1135,"column":65}},"324":{"start":{"line":1136,"column":20},"end":{"line":1136,"column":53}},"325":{"start":{"line":1138,"column":20},"end":{"line":1138,"column":35}},"326":{"start":{"line":1141,"column":12},"end":{"line":1141,"column":45}},"327":{"start":{"line":1143,"column":12},"end":{"line":1143,"column":33}},"328":{"start":{"line":1144,"column":12},"end":{"line":1144,"column":38}},"329":{"start":{"line":1146,"column":12},"end":{"line":1146,"column":39}},"330":{"start":{"line":1151,"column":4},"end":{"line":1151,"column":19}},"331":{"start":{"line":1162,"column":0},"end":{"line":1170,"column":2}},"332":{"start":{"line":1163,"column":4},"end":{"line":1164,"column":68}},"333":{"start":{"line":1166,"column":4},"end":{"line":1168,"column":5}},"334":{"start":{"line":1167,"column":8},"end":{"line":1167,"column":68}},"335":{"start":{"line":1169,"column":4},"end":{"line":1169,"column":48}},"336":{"start":{"line":1180,"column":0},"end":{"line":1190,"column":1}},"337":{"start":{"line":1181,"column":4},"end":{"line":1181,"column":28}},"338":{"start":{"line":1184,"column":4},"end":{"line":1186,"column":5}},"339":{"start":{"line":1185,"column":8},"end":{"line":1185,"column":80}},"340":{"start":{"line":1187,"column":4},"end":{"line":1187,"column":33}},"341":{"start":{"line":1189,"column":4},"end":{"line":1189,"column":24}},"342":{"start":{"line":1199,"column":0},"end":{"line":1230,"column":1}},"343":{"start":{"line":1200,"column":4},"end":{"line":1201,"column":33}},"344":{"start":{"line":1204,"column":4},"end":{"line":1219,"column":7}},"345":{"start":{"line":1205,"column":8},"end":{"line":1205,"column":79}},"346":{"start":{"line":1208,"column":8},"end":{"line":1210,"column":9}},"347":{"start":{"line":1209,"column":12},"end":{"line":1209,"column":36}},"348":{"start":{"line":1213,"column":8},"end":{"line":1218,"column":9}},"349":{"start":{"line":1215,"column":12},"end":{"line":1217,"column":13}},"350":{"start":{"line":1216,"column":16},"end":{"line":1216,"column":114}},"351":{"start":{"line":1221,"column":4},"end":{"line":1227,"column":5}},"352":{"start":{"line":1222,"column":8},"end":{"line":1226,"column":9}},"353":{"start":{"line":1223,"column":12},"end":{"line":1223,"column":106}},"354":{"start":{"line":1225,"column":12},"end":{"line":1225,"column":36}},"355":{"start":{"line":1229,"column":4},"end":{"line":1229,"column":24}},"356":{"start":{"line":1232,"column":0},"end":{"line":1242,"column":1}},"357":{"start":{"line":1233,"column":4},"end":{"line":1233,"column":17}},"358":{"start":{"line":1235,"column":4},"end":{"line":1239,"column":5}},"359":{"start":{"line":1236,"column":8},"end":{"line":1238,"column":11}},"360":{"start":{"line":1237,"column":12},"end":{"line":1237,"column":42}},"361":{"start":{"line":1241,"column":4},"end":{"line":1241,"column":15}},"362":{"start":{"line":1252,"column":0},"end":{"line":1262,"column":1}},"363":{"start":{"line":1253,"column":4},"end":{"line":1253,"column":28}},"364":{"start":{"line":1255,"column":4},"end":{"line":1259,"column":5}},"365":{"start":{"line":1256,"column":8},"end":{"line":1256,"column":100}},"366":{"start":{"line":1258,"column":8},"end":{"line":1258,"column":24}},"367":{"start":{"line":1261,"column":4},"end":{"line":1261,"column":24}},"368":{"start":{"line":1272,"column":0},"end":{"line":1282,"column":1}},"369":{"start":{"line":1273,"column":4},"end":{"line":1273,"column":28}},"370":{"start":{"line":1275,"column":4},"end":{"line":1279,"column":5}},"371":{"start":{"line":1276,"column":8},"end":{"line":1276,"column":100}},"372":{"start":{"line":1278,"column":8},"end":{"line":1278,"column":24}},"373":{"start":{"line":1281,"column":4},"end":{"line":1281,"column":24}},"374":{"start":{"line":1292,"column":0},"end":{"line":1302,"column":1}},"375":{"start":{"line":1293,"column":4},"end":{"line":1293,"column":28}},"376":{"start":{"line":1295,"column":4},"end":{"line":1299,"column":5}},"377":{"start":{"line":1296,"column":8},"end":{"line":1296,"column":105}},"378":{"start":{"line":1298,"column":8},"end":{"line":1298,"column":24}},"379":{"start":{"line":1301,"column":4},"end":{"line":1301,"column":24}},"380":{"start":{"line":1312,"column":0},"end":{"line":1322,"column":1}},"381":{"start":{"line":1313,"column":4},"end":{"line":1313,"column":28}},"382":{"start":{"line":1315,"column":4},"end":{"line":1319,"column":5}},"383":{"start":{"line":1316,"column":8},"end":{"line":1316,"column":103}},"384":{"start":{"line":1318,"column":8},"end":{"line":1318,"column":24}},"385":{"start":{"line":1321,"column":4},"end":{"line":1321,"column":24}},"386":{"start":{"line":1332,"column":0},"end":{"line":1351,"column":1}},"387":{"start":{"line":1333,"column":4},"end":{"line":1333,"column":28}},"388":{"start":{"line":1336,"column":4},"end":{"line":1344,"column":7}},"389":{"start":{"line":1337,"column":8},"end":{"line":1337,"column":70}},"390":{"start":{"line":1338,"column":8},"end":{"line":1343,"column":9}},"391":{"start":{"line":1340,"column":12},"end":{"line":1342,"column":13}},"392":{"start":{"line":1341,"column":16},"end":{"line":1341,"column":109}},"393":{"start":{"line":1346,"column":4},"end":{"line":1348,"column":5}},"394":{"start":{"line":1347,"column":8},"end":{"line":1347,"column":57}},"395":{"start":{"line":1350,"column":4},"end":{"line":1350,"column":24}},"396":{"start":{"line":1361,"column":0},"end":{"line":1379,"column":1}},"397":{"start":{"line":1362,"column":4},"end":{"line":1363,"column":33}},"398":{"start":{"line":1366,"column":4},"end":{"line":1370,"column":7}},"399":{"start":{"line":1367,"column":8},"end":{"line":1369,"column":9}},"400":{"start":{"line":1368,"column":12},"end":{"line":1368,"column":36}},"401":{"start":{"line":1372,"column":4},"end":{"line":1376,"column":5}},"402":{"start":{"line":1373,"column":8},"end":{"line":1373,"column":127}},"403":{"start":{"line":1375,"column":8},"end":{"line":1375,"column":57}},"404":{"start":{"line":1378,"column":4},"end":{"line":1378,"column":24}},"405":{"start":{"line":1389,"column":0},"end":{"line":1399,"column":1}},"406":{"start":{"line":1390,"column":4},"end":{"line":1390,"column":28}},"407":{"start":{"line":1392,"column":4},"end":{"line":1396,"column":5}},"408":{"start":{"line":1393,"column":8},"end":{"line":1393,"column":105}},"409":{"start":{"line":1395,"column":8},"end":{"line":1395,"column":29}},"410":{"start":{"line":1398,"column":4},"end":{"line":1398,"column":24}},"411":{"start":{"line":1408,"column":0},"end":{"line":1412,"column":1}},"412":{"start":{"line":1409,"column":4},"end":{"line":1409,"column":29}},"413":{"start":{"line":1410,"column":4},"end":{"line":1410,"column":43}},"414":{"start":{"line":1411,"column":4},"end":{"line":1411,"column":28}},"415":{"start":{"line":1421,"column":0},"end":{"line":1428,"column":1}},"416":{"start":{"line":1422,"column":4},"end":{"line":1427,"column":5}},"417":{"start":{"line":1424,"column":8},"end":{"line":1424,"column":20}},"418":{"start":{"line":1426,"column":8},"end":{"line":1426,"column":21}},"419":{"start":{"line":1437,"column":0},"end":{"line":1444,"column":1}},"420":{"start":{"line":1438,"column":4},"end":{"line":1443,"column":5}},"421":{"start":{"line":1440,"column":8},"end":{"line":1440,"column":24}},"422":{"start":{"line":1442,"column":8},"end":{"line":1442,"column":21}},"423":{"start":{"line":1453,"column":0},"end":{"line":1458,"column":1}},"424":{"start":{"line":1454,"column":4},"end":{"line":1456,"column":5}},"425":{"start":{"line":1455,"column":8},"end":{"line":1455,"column":36}},"426":{"start":{"line":1457,"column":4},"end":{"line":1457,"column":17}},"427":{"start":{"line":1467,"column":0},"end":{"line":1474,"column":1}},"428":{"start":{"line":1468,"column":4},"end":{"line":1473,"column":5}},"429":{"start":{"line":1470,"column":8},"end":{"line":1470,"column":25}},"430":{"start":{"line":1472,"column":8},"end":{"line":1472,"column":21}},"431":{"start":{"line":1476,"column":0},"end":{"line":1478,"column":1}},"432":{"start":{"line":1477,"column":4},"end":{"line":1477,"column":41}}},"branchMap":{"1":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":17},"end":{"line":29,"column":24}},{"start":{"line":29,"column":28},"end":{"line":29,"column":33}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":14},"end":{"line":30,"column":18}},{"start":{"line":30,"column":22},"end":{"line":30,"column":24}}]},"3":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":127,"column":4}},{"start":{"line":127,"column":4},"end":{"line":127,"column":4}}]},"4":{"line":131,"type":"binary-expr","locations":[{"start":{"line":131,"column":36},"end":{"line":131,"column":53}},{"start":{"line":131,"column":57},"end":{"line":131,"column":67}}]},"5":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":4},"end":{"line":152,"column":4}},{"start":{"line":152,"column":4},"end":{"line":152,"column":4}}]},"6":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":4},"end":{"line":171,"column":4}},{"start":{"line":171,"column":4},"end":{"line":171,"column":4}}]},"7":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":8},"end":{"line":190,"column":8}},{"start":{"line":190,"column":8},"end":{"line":190,"column":8}}]},"8":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":16},"end":{"line":193,"column":16}},{"start":{"line":193,"column":16},"end":{"line":193,"column":16}}]},"9":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":4},"end":{"line":262,"column":4}},{"start":{"line":262,"column":4},"end":{"line":262,"column":4}}]},"10":{"line":333,"type":"if","locations":[{"start":{"line":333,"column":4},"end":{"line":333,"column":4}},{"start":{"line":333,"column":4},"end":{"line":333,"column":4}}]},"11":{"line":450,"type":"if","locations":[{"start":{"line":450,"column":8},"end":{"line":450,"column":8}},{"start":{"line":450,"column":8},"end":{"line":450,"column":8}}]},"12":{"line":450,"type":"binary-expr","locations":[{"start":{"line":450,"column":12},"end":{"line":450,"column":38}},{"start":{"line":450,"column":42},"end":{"line":450,"column":55}}]},"13":{"line":458,"type":"if","locations":[{"start":{"line":458,"column":4},"end":{"line":458,"column":4}},{"start":{"line":458,"column":4},"end":{"line":458,"column":4}}]},"14":{"line":488,"type":"if","locations":[{"start":{"line":488,"column":8},"end":{"line":488,"column":8}},{"start":{"line":488,"column":8},"end":{"line":488,"column":8}}]},"15":{"line":490,"type":"if","locations":[{"start":{"line":490,"column":15},"end":{"line":490,"column":15}},{"start":{"line":490,"column":15},"end":{"line":490,"column":15}}]},"16":{"line":492,"type":"if","locations":[{"start":{"line":492,"column":15},"end":{"line":492,"column":15}},{"start":{"line":492,"column":15},"end":{"line":492,"column":15}}]},"17":{"line":492,"type":"binary-expr","locations":[{"start":{"line":492,"column":19},"end":{"line":492,"column":38}},{"start":{"line":492,"column":42},"end":{"line":492,"column":56}}]},"18":{"line":499,"type":"if","locations":[{"start":{"line":499,"column":4},"end":{"line":499,"column":4}},{"start":{"line":499,"column":4},"end":{"line":499,"column":4}}]},"19":{"line":499,"type":"binary-expr","locations":[{"start":{"line":499,"column":8},"end":{"line":499,"column":16}},{"start":{"line":499,"column":20},"end":{"line":499,"column":42}},{"start":{"line":499,"column":46},"end":{"line":499,"column":66}}]},"20":{"line":503,"type":"if","locations":[{"start":{"line":503,"column":4},"end":{"line":503,"column":4}},{"start":{"line":503,"column":4},"end":{"line":503,"column":4}}]},"21":{"line":544,"type":"if","locations":[{"start":{"line":544,"column":4},"end":{"line":544,"column":4}},{"start":{"line":544,"column":4},"end":{"line":544,"column":4}}]},"22":{"line":584,"type":"if","locations":[{"start":{"line":584,"column":4},"end":{"line":584,"column":4}},{"start":{"line":584,"column":4},"end":{"line":584,"column":4}}]},"23":{"line":618,"type":"if","locations":[{"start":{"line":618,"column":4},"end":{"line":618,"column":4}},{"start":{"line":618,"column":4},"end":{"line":618,"column":4}}]},"24":{"line":639,"type":"if","locations":[{"start":{"line":639,"column":4},"end":{"line":639,"column":4}},{"start":{"line":639,"column":4},"end":{"line":639,"column":4}}]},"25":{"line":643,"type":"if","locations":[{"start":{"line":643,"column":4},"end":{"line":643,"column":4}},{"start":{"line":643,"column":4},"end":{"line":643,"column":4}}]},"26":{"line":690,"type":"if","locations":[{"start":{"line":690,"column":4},"end":{"line":690,"column":4}},{"start":{"line":690,"column":4},"end":{"line":690,"column":4}}]},"27":{"line":714,"type":"if","locations":[{"start":{"line":714,"column":4},"end":{"line":714,"column":4}},{"start":{"line":714,"column":4},"end":{"line":714,"column":4}}]},"28":{"line":740,"type":"if","locations":[{"start":{"line":740,"column":4},"end":{"line":740,"column":4}},{"start":{"line":740,"column":4},"end":{"line":740,"column":4}}]},"29":{"line":811,"type":"if","locations":[{"start":{"line":811,"column":4},"end":{"line":811,"column":4}},{"start":{"line":811,"column":4},"end":{"line":811,"column":4}}]},"30":{"line":816,"type":"if","locations":[{"start":{"line":816,"column":8},"end":{"line":816,"column":8}},{"start":{"line":816,"column":8},"end":{"line":816,"column":8}}]},"31":{"line":824,"type":"if","locations":[{"start":{"line":824,"column":8},"end":{"line":824,"column":8}},{"start":{"line":824,"column":8},"end":{"line":824,"column":8}}]},"32":{"line":828,"type":"if","locations":[{"start":{"line":828,"column":8},"end":{"line":828,"column":8}},{"start":{"line":828,"column":8},"end":{"line":828,"column":8}}]},"33":{"line":829,"type":"if","locations":[{"start":{"line":829,"column":12},"end":{"line":829,"column":12}},{"start":{"line":829,"column":12},"end":{"line":829,"column":12}}]},"34":{"line":833,"type":"if","locations":[{"start":{"line":833,"column":12},"end":{"line":833,"column":12}},{"start":{"line":833,"column":12},"end":{"line":833,"column":12}}]},"35":{"line":883,"type":"if","locations":[{"start":{"line":883,"column":4},"end":{"line":883,"column":4}},{"start":{"line":883,"column":4},"end":{"line":883,"column":4}}]},"36":{"line":890,"type":"if","locations":[{"start":{"line":890,"column":8},"end":{"line":890,"column":8}},{"start":{"line":890,"column":8},"end":{"line":890,"column":8}}]},"37":{"line":988,"type":"if","locations":[{"start":{"line":988,"column":12},"end":{"line":988,"column":12}},{"start":{"line":988,"column":12},"end":{"line":988,"column":12}}]},"38":{"line":990,"type":"if","locations":[{"start":{"line":990,"column":20},"end":{"line":990,"column":20}},{"start":{"line":990,"column":20},"end":{"line":990,"column":20}}]},"39":{"line":1024,"type":"if","locations":[{"start":{"line":1024,"column":12},"end":{"line":1024,"column":12}},{"start":{"line":1024,"column":12},"end":{"line":1024,"column":12}}]},"40":{"line":1024,"type":"binary-expr","locations":[{"start":{"line":1024,"column":16},"end":{"line":1024,"column":21}},{"start":{"line":1024,"column":25},"end":{"line":1024,"column":37}}]},"41":{"line":1028,"type":"if","locations":[{"start":{"line":1028,"column":20},"end":{"line":1028,"column":20}},{"start":{"line":1028,"column":20},"end":{"line":1028,"column":20}}]},"42":{"line":1058,"type":"if","locations":[{"start":{"line":1058,"column":4},"end":{"line":1058,"column":4}},{"start":{"line":1058,"column":4},"end":{"line":1058,"column":4}}]},"43":{"line":1061,"type":"if","locations":[{"start":{"line":1061,"column":8},"end":{"line":1061,"column":8}},{"start":{"line":1061,"column":8},"end":{"line":1061,"column":8}}]},"44":{"line":1067,"type":"if","locations":[{"start":{"line":1067,"column":8},"end":{"line":1067,"column":8}},{"start":{"line":1067,"column":8},"end":{"line":1067,"column":8}}]},"45":{"line":1123,"type":"if","locations":[{"start":{"line":1123,"column":4},"end":{"line":1123,"column":4}},{"start":{"line":1123,"column":4},"end":{"line":1123,"column":4}}]},"46":{"line":1126,"type":"if","locations":[{"start":{"line":1126,"column":8},"end":{"line":1126,"column":8}},{"start":{"line":1126,"column":8},"end":{"line":1126,"column":8}}]},"47":{"line":1132,"type":"if","locations":[{"start":{"line":1132,"column":8},"end":{"line":1132,"column":8}},{"start":{"line":1132,"column":8},"end":{"line":1132,"column":8}}]},"48":{"line":1166,"type":"if","locations":[{"start":{"line":1166,"column":4},"end":{"line":1166,"column":4}},{"start":{"line":1166,"column":4},"end":{"line":1166,"column":4}}]},"49":{"line":1184,"type":"if","locations":[{"start":{"line":1184,"column":4},"end":{"line":1184,"column":4}},{"start":{"line":1184,"column":4},"end":{"line":1184,"column":4}}]},"50":{"line":1208,"type":"if","locations":[{"start":{"line":1208,"column":8},"end":{"line":1208,"column":8}},{"start":{"line":1208,"column":8},"end":{"line":1208,"column":8}}]},"51":{"line":1208,"type":"binary-expr","locations":[{"start":{"line":1208,"column":12},"end":{"line":1208,"column":29}},{"start":{"line":1208,"column":33},"end":{"line":1208,"column":46}}]},"52":{"line":1213,"type":"if","locations":[{"start":{"line":1213,"column":8},"end":{"line":1213,"column":8}},{"start":{"line":1213,"column":8},"end":{"line":1213,"column":8}}]},"53":{"line":1215,"type":"if","locations":[{"start":{"line":1215,"column":12},"end":{"line":1215,"column":12}},{"start":{"line":1215,"column":12},"end":{"line":1215,"column":12}}]},"54":{"line":1215,"type":"binary-expr","locations":[{"start":{"line":1215,"column":16},"end":{"line":1215,"column":29}},{"start":{"line":1215,"column":33},"end":{"line":1215,"column":47}}]},"55":{"line":1221,"type":"if","locations":[{"start":{"line":1221,"column":4},"end":{"line":1221,"column":4}},{"start":{"line":1221,"column":4},"end":{"line":1221,"column":4}}]},"56":{"line":1222,"type":"if","locations":[{"start":{"line":1222,"column":8},"end":{"line":1222,"column":8}},{"start":{"line":1222,"column":8},"end":{"line":1222,"column":8}}]},"57":{"line":1235,"type":"if","locations":[{"start":{"line":1235,"column":4},"end":{"line":1235,"column":4}},{"start":{"line":1235,"column":4},"end":{"line":1235,"column":4}}]},"58":{"line":1255,"type":"if","locations":[{"start":{"line":1255,"column":4},"end":{"line":1255,"column":4}},{"start":{"line":1255,"column":4},"end":{"line":1255,"column":4}}]},"59":{"line":1275,"type":"if","locations":[{"start":{"line":1275,"column":4},"end":{"line":1275,"column":4}},{"start":{"line":1275,"column":4},"end":{"line":1275,"column":4}}]},"60":{"line":1295,"type":"if","locations":[{"start":{"line":1295,"column":4},"end":{"line":1295,"column":4}},{"start":{"line":1295,"column":4},"end":{"line":1295,"column":4}}]},"61":{"line":1315,"type":"if","locations":[{"start":{"line":1315,"column":4},"end":{"line":1315,"column":4}},{"start":{"line":1315,"column":4},"end":{"line":1315,"column":4}}]},"62":{"line":1338,"type":"if","locations":[{"start":{"line":1338,"column":8},"end":{"line":1338,"column":8}},{"start":{"line":1338,"column":8},"end":{"line":1338,"column":8}}]},"63":{"line":1340,"type":"if","locations":[{"start":{"line":1340,"column":12},"end":{"line":1340,"column":12}},{"start":{"line":1340,"column":12},"end":{"line":1340,"column":12}}]},"64":{"line":1340,"type":"binary-expr","locations":[{"start":{"line":1340,"column":16},"end":{"line":1340,"column":29}},{"start":{"line":1340,"column":33},"end":{"line":1340,"column":49}}]},"65":{"line":1346,"type":"if","locations":[{"start":{"line":1346,"column":4},"end":{"line":1346,"column":4}},{"start":{"line":1346,"column":4},"end":{"line":1346,"column":4}}]},"66":{"line":1367,"type":"if","locations":[{"start":{"line":1367,"column":8},"end":{"line":1367,"column":8}},{"start":{"line":1367,"column":8},"end":{"line":1367,"column":8}}]},"67":{"line":1372,"type":"if","locations":[{"start":{"line":1372,"column":4},"end":{"line":1372,"column":4}},{"start":{"line":1372,"column":4},"end":{"line":1372,"column":4}}]},"68":{"line":1392,"type":"if","locations":[{"start":{"line":1392,"column":4},"end":{"line":1392,"column":4}},{"start":{"line":1392,"column":4},"end":{"line":1392,"column":4}}]},"69":{"line":1422,"type":"if","locations":[{"start":{"line":1422,"column":4},"end":{"line":1422,"column":4}},{"start":{"line":1422,"column":4},"end":{"line":1422,"column":4}}]},"70":{"line":1438,"type":"if","locations":[{"start":{"line":1438,"column":4},"end":{"line":1438,"column":4}},{"start":{"line":1438,"column":4},"end":{"line":1438,"column":4}}]},"71":{"line":1454,"type":"if","locations":[{"start":{"line":1454,"column":4},"end":{"line":1454,"column":4}},{"start":{"line":1454,"column":4},"end":{"line":1454,"column":4}}]},"72":{"line":1468,"type":"if","locations":[{"start":{"line":1468,"column":4},"end":{"line":1468,"column":4}},{"start":{"line":1468,"column":4},"end":{"line":1468,"column":4}}]},"73":{"line":1477,"type":"binary-expr","locations":[{"start":{"line":1477,"column":11},"end":{"line":1477,"column":13}},{"start":{"line":1477,"column":18},"end":{"line":1477,"column":39}}]}},"code":["\"use strict\";","","var Q = require(\"q\")","    , deepExtend = require(\"deep-extend\")","    , http = require(\"./httpPromise\")","    , ApiError = require(\"./errors\").ApiError","    , utils = require(\"./utils\")","    , lightsApi = require(\"./commands/lights-api\")","    , sensorsApi = require(\"./commands/sensors-api\")","    , groupsApi = require(\"./commands/groups-api\")","    , schedulesApi = require(\"./commands/schedules-api\")","    , scenesApi = require(\"./commands/scenes-api\")","    , configurationApi = require(\"./commands/configuration-api\")","    , infoApi = require(\"./commands/info-api\")","    , scheduledEvent = require(\"./scheduledEvent\")","    , bridgeDiscovery = require(\"./bridge-discovery\")","    , lightState = require(\"./lightstate\")","    , rgb = require(\"./rgb\")","    ;","","function HueApi(config) {","    this._config = config;","}","","module.exports = function (host, username, timeout, port) {","    var config = {","        hostname: host,","        username: username,","        timeout: timeout || 10000,","        port: port || 80","    };","","    return new HueApi(config);","};","","","/**"," * Gets the version data for the Philips Hue Bridge."," *"," * @param cb An optional callback function if you don't want to be informed via a promise."," * @returns {Q.promise} A promise will be provided that will resolve to the version data for the bridge, or {null} if a"," * callback was provided."," */","HueApi.prototype.getVersion = function (cb) {","    var promise = this.config()","        .then(function (data) {","            return {","                name: data.name,","                version: {","                    api: data.apiversion,","                    software: data.swversion","                }","            };","        });","","    return utils.promiseOrCallback(promise, cb);","};","HueApi.prototype.version = HueApi.prototype.getVersion;","","","/**"," * Loads the description for the Philips Hue."," *"," * @param cb An optional callback function if you don't want to be informed via a promise."," * @return {Q.promise} A promise that will be provided with a description object, or {null} if a callback was provided."," */","HueApi.prototype.description = function (cb) {","    var promise = bridgeDiscovery.description(this._config.hostname);","    return utils.promiseOrCallback(promise, cb);","};","HueApi.prototype.getDescription = HueApi.prototype.description;","","","/**"," * Reads the bridge configuration and returns it as a JSON object."," *"," * @param cb An optional callback function to use if you do not want to use the promise for results."," * @return {Q.promise} A promise with the result, or <null> if a callback function was provided."," */","HueApi.prototype.config = function (cb) {","    var options = this._defaultOptions(),","        promise = http.invoke(configurationApi.getConfiguration, options);","","    return utils.promiseOrCallback(promise, cb);","};","HueApi.prototype.getConfig = HueApi.prototype.config;","","","/**"," * Obtains the complete state for the Bridge. This is considered to be a very expensive operation and should not be invoked"," * frequently. The results detail all config, users, groups, schedules and lights for the system."," *"," * @param cb An optional callback function if you don't want to be informed via a promise."," * @returns {Q.promise} A promise with the result, or {null} if a callback function was provided"," */","HueApi.prototype.getFullState = function (cb) {","    var options = this._defaultOptions(),","        promise = http.invoke(configurationApi.getFullState, options);","","    return utils.promiseOrCallback(promise, cb);","};","HueApi.prototype.fullState = HueApi.prototype.getFullState;","","","/**"," * Allows a new user/device to be registered with the Philips Hue Bridge. This will return the name of the user that was"," * created by the function call."," *"," * This function does not require the HueApi to have been initialized with a host or username. It does however require"," * the end user to have pressed the link button on the bridge, before invoking this function."," *"," * @param host The hostname or IP Address of the Hue Bridge."," * @param deviceDescription The description for the user/device that is being registered. This is a human readable"," * description of the user/device. If one is not provided then a default will be set."," * @param cb An optional callback function to use if you do not want a promise returned."," * @return {Q.promise} A promise with the result, or <null> if a callback was provided."," */","HueApi.prototype.registerUser = function (host, deviceDescription, cb) {","    var options = {","            host: host,","            values: {}","        }","        , devicetype = \"Node.js API\"","        , promise","        ;","","    if (utils.isFunction(deviceDescription)) {","        options.values.devicetype = devicetype;","        cb = deviceDescription;","    } else {","        options.values.devicetype = deviceDescription || devicetype","    }","","    promise = http.invoke(configurationApi.createUser, options);","    return utils.promiseOrCallback(promise, cb);","};","HueApi.prototype.createUser = HueApi.prototype.registerUser;","","","/**"," * Presses the Link Button on the Bridge (without the user actually having to do it). If successful then {true} will be"," * returned as the result."," *"," * @param cb An optional callback function to use if you do not want to use the promise returned."," * @return {Q.promise} A promise with the result, or <null> if a callback was provided."," */","HueApi.prototype.pressLinkButton = function (cb) {","    var options = this._defaultOptions(),","        promise;","","    promise = _setConfigurationOptions(options, {\"linkbutton\": true});","    if (!promise) {","        promise = http.invoke(configurationApi.modifyConfiguration, options);","    }","    return utils.promiseOrCallback(promise, cb);","};","","","/**"," * Deletes an existing user from the Phillips Hue Bridge."," *"," * @param username The username of the user to delete."," * @param cb An optional callback function to use if you do not want to get the result via a promise chain."," * @returns {Q.promise} A promise with the result of the deletion, or <null> if a callback was provided."," */","HueApi.prototype.deleteUser = function (username, cb) {","    var options = this._defaultOptions(),","        promise;","","    promise = _setDeleteUserOptions(options, username);","    if (!promise) {","        promise = http.invoke(configurationApi.deleteUser, options);","    }","    return utils.promiseOrCallback(promise, cb);","};","HueApi.prototype.unregisterUser = HueApi.prototype.deleteUser;","","","/**"," * Obtain a list of registered \"users\" or \"devices\" that can interact with the Philips Hue."," *"," * @param cb An optional callback function if you do not want to use the promise to obtain the results."," * @return A promise that will provide the results of registered users, or <null> if a callback was provided."," */","HueApi.prototype.registeredUsers = function (cb) {","    function processUsers(result) {","        var list = result.whitelist,","            devices = [];","","        if (list) {","            Object.keys(list).forEach(function (key) {","                var device;","                if (list.hasOwnProperty(key)) {","                    device = list[key];","                    devices.push(","                        {","                            \"name\": device.name,","                            \"username\": key,","                            \"created\": device[\"create date\"],","                            \"accessed\": device[\"last use date\"]","                        }","                    );","                }","            });","        }","        return {\"devices\": devices};","    }","","    var promise = this.config().then(processUsers);","    return utils.promiseOrCallback(promise, cb);","};","HueApi.prototype.getRegisteredUsers = HueApi.prototype.registeredUsers;","","","/**"," * Obtains the details of the individual sensors that are attached to the Philips Hue."," *"," * @param cb An optional callback function to use if you do not want a promise returned."," * @return A promise that will be provided with the lights object, or {null} if a callback function was provided."," */","HueApi.prototype.sensors = function (cb) {","    var options = this._defaultOptions(),","        promise;","","    promise = http.invoke(sensorsApi.getAllSensors, options);","","    return utils.promiseOrCallback(promise, cb);","};","HueApi.prototype.getSensors = HueApi.prototype.sensors;","","/**"," * Obtains the details of the individual lights that are attached to the Philips Hue."," *"," * @param cb An optional callback function to use if you do not want a promise returned."," * @return A promise that will be provided with the lights object, or {null} if a callback function was provided."," */","HueApi.prototype.lights = function (cb) {","    var options = this._defaultOptions(),","      promise;","","    promise = http.invoke(lightsApi.getAllLights, options);","","    return utils.promiseOrCallback(promise, cb);","};","HueApi.prototype.getLights = HueApi.prototype.lights;","","","/**"," * Obtains the status of the specified light."," *"," * @param id The id of the light as an integer, this value will be parsed into an integer value so can be a {String} or"," * {Number} value."," * @param cb An optional callback function to use if you do not want a promise returned."," * @return A promise that will be provided with the light status, or {null} if a callback function was provided."," */","HueApi.prototype.lightStatus = function (id, cb) {","    var options = this._defaultOptions(),","        promise;","","    promise = _setLightIdOption(options, id);","","    if (!promise) {","        promise = http.invoke(lightsApi.getLightAttributesAndState, options);","    }","    return utils.promiseOrCallback(promise, cb);","};","HueApi.prototype.getLightStatus = HueApi.prototype.lightStatus;","","","HueApi.prototype.lightStatusWithRGB = function(id, cb) {","    var promise = this.lightStatus(id);","","    promise = promise.then(function(light) {","        var state = light.state","          , x = state.xy[0]","          , y = state.xy[1]","          , brightness = state.bri / 254","          ;","        return deepExtend({state: {rgb: rgb.convertXYtoRGB(x, y, brightness)}}, light);","    });","","    return utils.promiseOrCallback(promise, cb);","};","HueApi.prototype.getLightStatusWithRGB = HueApi.prototype.lightStatusWithRGB;","","/**"," * Obtains the new lights found by the bridge, dependant upon the last search."," *"," * @param cb An optional callback function to use if you do not want a promise returned."," * @return A promise that will be provided with the new lights search result, or {null} if a callback function was provided."," */","HueApi.prototype.newLights = function (cb) {","    var options = this._defaultOptions(),","        promise = http.invoke(lightsApi.getNewLights, options);","","    return utils.promiseOrCallback(promise, cb);","};","HueApi.prototype.getNewLights = HueApi.prototype.newLights;","","","/**"," * Starts a search for new lights."," *"," * @param cb An optional callback function to use if you do not want a promise returned."," * @return A promise that will be provided with the new lights, or {null} if a callback function was provided."," */","HueApi.prototype.searchForNewLights = function (cb) {","    var options = this._defaultOptions(),","        promise = http.invoke(lightsApi.searchForNewLights, options);","","    return utils.promiseOrCallback(promise, cb);","};","","","/**"," * Sets the name of a light on the Bridge."," *"," * @param id The ID of the light to set the name for."," * @param name The name to apply to the light."," * @param cb An optional callback function to use if you do not want a promise returned."," * @return A promise that will be provided with the results of setting the name, or {null} if a callback function was provided."," */","HueApi.prototype.setLightName = function (id, name, cb) {","    var options = this._defaultOptions(),","        promise;","","    promise = _setLightIdOption(options, id);","","    options.values = {","        \"name\": name","    };","","    if (!promise) {","        promise = http.invoke(lightsApi.renameLight, options);","    }","    return utils.promiseOrCallback(promise, cb);","};","","","/**"," * Sets the light state to the provided values."," *"," * @param id The id of the light which is an integer or a value that can be parsed into an integer value."," * @param stateValues {Object} containing the properties and values to set on the light."," * @param cb An optional callback function to use if you do not want to use a promise for the results."," * @return A promise that will set the specified state on the light, or {null} if a callback was provided."," */","HueApi.prototype.setLightState = function (id, stateValues, cb) {","    var promise = this._getLightStateOptions(id, stateValues)","        .then(function (options) {","            return http.invoke(lightsApi.setLightState, options);","        });","    return utils.promiseOrCallback(promise, cb);","};","","","/**"," * Sets the light state to the provided values for an entire group."," *"," * @param id The id of the group which is an integer or a value that can be parsed into an integer value."," * @param stateValues {Object} containing the properties and values to set on the light."," * @param cb An optional callback function to use if you do not want to use a promise for the results."," * @return {Q.promise} A promise that will set the specified state on the group, or {null} if a callback was provided."," */","HueApi.prototype.setGroupLightState = function (id, stateValues, cb) {","    var promise = this._getGroupLightStateOptions(id, stateValues)","        .then(function (options) {","            return http.invoke(groupsApi.setGroupState, options);","        });","    return utils.promiseOrCallback(promise, cb);","};","","","/**"," * Obtains all the groups from the Hue Bridge as an Array of {id: {*}, name: {*}} objects."," *"," * @param cb An optional callback function to use if you do not want to use a promise for the results."," * @return A promise that will obtain the groups, or {null} if a callback was provided."," */","HueApi.prototype.groups = function (cb) {","    var options = this._defaultOptions(),","        promise = http.invoke(groupsApi.getAllGroups, options);","","    return utils.promiseOrCallback(promise, cb);","};","HueApi.prototype.getGroups = HueApi.prototype.groups;","HueApi.prototype.getAllGroups = HueApi.prototype.groups;","","","/**"," * Obtains all the Luminaires from the Hue Bridge as an Array of {id: {*}, name: {*}} objects."," *"," * @param cb An optional callback function to use if you do not want to use a promise for the results."," * @return A promise that will obtain the luminaires, or {null} if a callback was provided."," */","HueApi.prototype.luminaires = function (cb) {","    var promise = this._filterGroups(\"Luminaire\");","    return utils.promiseOrCallback(promise, cb);","};","HueApi.prototype.getLuminaires = HueApi.prototype.luminaires;","","","/**"," * Obtains all the LightSources from the Hue Bridge as an Array of {id: {*}, name: {*}} objects."," *"," * @param cb An optional callback function to use if you do not want to use a promise for the results."," * @return A promise that will obtain the lightsources, or {null} if a callback was provided."," */","HueApi.prototype.lightSources = function (cb) {","    var promise = this._filterGroups(\"Lightsource\");","    return utils.promiseOrCallback(promise, cb);","};","HueApi.prototype.getLightSources = HueApi.prototype.lightSources;","","","/**"," * Obtains all the LightGroups from the Hue Bridge as an Array of {id: {*}, name: {*}} objects."," *"," * @param cb An optional callback function to use if you do not want to use a promise for the results."," * @return A promise that will obtain the LightGroups, or {null} if a callback was provided."," */","HueApi.prototype.lightGroups = function (cb) {","    var promise = this._filterGroups(\"LightGroup\");","    return utils.promiseOrCallback(promise, cb);","};","HueApi.prototype.getLightGroups = HueApi.prototype.lightGroups;","","","/**"," * Obtains the details for a specified group in a format of {id: {*}, name: {*}, lights: [], lastAction: {*}}."," *"," * @param id {Number} or {String} which is the id of the group to get the details for."," * @param cb An optional callback function to use if you do not want to use a promise for the results."," * @return A promise that will set the specified state on the light, or {null} if a callback was provided."," */","HueApi.prototype.getGroup = function (id, cb) {","    var options = this._defaultOptions(),","        promise;","","    //TODO find a way to make this a normal post processing action in the groups-api, the id from the call needs to be injected...","    function processGroupResult(group) {","        var result = {","            id: String(id),","            name: group.name,","            type: group.type,","            lights: group.lights,","            lastAction: group.action","        };","","        if (group.type === \"Luminaire\" && group.modelid) {","            result.modelid = group.modelid;","        }","","        return result;","    }","","    promise = _setGroupIdOption(options, id);","    if (!promise) {","        promise = http.invoke(groupsApi.getGroupAttributes, options).then(processGroupResult);","    }","","    return utils.promiseOrCallback(promise, cb);","};","HueApi.prototype.group = HueApi.prototype.getGroup;","","","/**"," * Updates a light group to the specified name and/or lights ids. The name and light ids can be specified independently or"," * together when calling this function."," *"," * @param id The id of the group to update the name and/or light ids associated with it."," * @param name {String} The name of the group"," * @param lightIds {Array} An array of light ids to be assigned to the group. If any of the ids are not present in the"," * bridge the creation will fail with an error being produced."," * @param cb An optional callback function to use if you do not want to use a promise for the results."," * @return A promise with a result of <true> if the update was successful, or null if a callback was provided."," */","HueApi.prototype.updateGroup = function (id, name, lightIds, cb) {","    var options = this._defaultOptions(),","        parameters = [].slice.call(arguments, 1),","        promise;","","    options.values = {};","    promise = _setGroupIdOptionForModification(options, id);","","    // Due to name and lightIds being \"optional\" we have to re-parse the arguments to get the right ones","    parameters.forEach(function (param) {","        if (param instanceof Function) {","            cb = param;","        } else if (Array.isArray(param)) {","            options.values.lights = utils.createStringValueArray(param);","        } else if (param === undefined || param === null) {","            // Ignore it","        } else {","            options.values.name = param;","        }","    });","","    if (!promise && !options.values.lights && !options.values.name) {","        promise = _errorPromise(\"A name or array of lightIds must be provided\");","    }","","    if (!promise) {","        promise = http.invoke(groupsApi.setGroupAttributes, options);","    }","","    return utils.promiseOrCallback(promise, cb);","};","","","/**"," * Creates a new light Group."," *"," * @param name The name of the group that we are creating, limited to 16 characters."," * @param lightIds {Array} of ids for the lights to be included in the group."," * @param cb An optional callback function to use if you do not want to use a promise for the results."," * @return {*} A promise that will return the id of the group that was created, or null if a callback was provided."," */","HueApi.prototype.createGroup = function (name, lightIds, cb) {","    var options = this._defaultOptions(),","        promise;","","    options.values = {","        name: name,","        lights: utils.createStringValueArray(lightIds)","    };","","    promise = http.invoke(groupsApi.createGroup, options);","    return utils.promiseOrCallback(promise, cb);","};","","","/**"," * Deletes a group with the specified id, returning <true> if the action was successful."," *"," * @param id The id of the group to delete."," * @param cb An optional callback function to use if you do not want to use a promise for the results."," * @return {*} A promise that will return <true> if the deletion was successful, or null if a callback was provided."," */","HueApi.prototype.deleteGroup = function (id, cb) {","    var options = this._defaultOptions(),","        promise = _setGroupIdOptionForModification(options, id);","","    if (!promise) {","        promise = http.invoke(groupsApi.deleteGroup, options);","    }","    return utils.promiseOrCallback(promise, cb);","};","","","/**"," * Gets the schedules on the Bridge, as an array of {\"id\": {String}, \"name\": {String}} objects."," *"," * @param cb An optional callback function to use if you do not want to use a promise for the results."," * @return A promise that will return the results or <null> if a callback was provided."," */","HueApi.prototype.schedules = function (cb) {","    var options = this._defaultOptions(),","        promise = http.invoke(schedulesApi.getAllSchedules, options);","","    return utils.promiseOrCallback(promise, cb);","};","HueApi.prototype.getSchedules = HueApi.prototype.schedules;","","","/**"," * Gets the specified schedule by id, which is in an identical format the the Hue API documentation, with the addition"," * of an \"id\" value for the schedule."," *"," * @param id The id of the schedule to retrieve."," * @param cb An optional callback function to use if you do not want to use a promise for the results."," * @returns A promise that will return the results or <null> if a callback was provided."," */","HueApi.prototype.getSchedule = function (id, cb) {","    var options = this._defaultOptions()","      , promise = _setScheduleIdOption(options, id)","      ;","","    function parseResults(result) {","        result.id = id;","        return result;","    }","","    if (!promise) {","        promise = http.invoke(schedulesApi.getSchedule, options).then(parseResults);","    }","    return utils.promiseOrCallback(promise, cb);","};","HueApi.prototype.schedule = HueApi.prototype.getSchedule;","","","/**"," * Creates a one time scheduled event. The results from this function is the id of the created schedule. The bridge only"," * supports 100 schedules, so once they are triggered, they are removed from the bridge."," *"," * @param schedule {ScheduledEvent}"," * @param cb An optional callback function to use if you do not want to use a promise for the results."," * @return A promise that will return the id value of the schedule that was created, or <null> if a callback was provided."," */","HueApi.prototype.scheduleEvent = function (schedule, cb) {","    return this._createSchedule(schedule, cb);","};","HueApi.prototype.createSchedule = HueApi.prototype.scheduleEvent;","","","/**"," * Deletes a schedule by id, returning {true} if the deletion was successful."," *"," * @param id of the schedule"," * @param cb An option callback function to use if you do not want to use a promise for the results."," * @return {Q.promise} A promise that will return the result of the deletion, or <null> if a callback was provided."," */","HueApi.prototype.deleteSchedule = function (id, cb) {","    var options = this._defaultOptions()","      , promise = _setScheduleIdOption(options, id)","      ;","","    if (!promise) {","        promise = http.invoke(schedulesApi.deleteSchedule, options);","    }","    return utils.promiseOrCallback(promise, cb);","};","","","/**"," * Updates an existing schedule event with the provided details."," *"," * @param id The id of the schedule being updated."," * @param schedule The object containing the details to update for the existing schedule event."," * @param cb An optional callback function to use if you do not want to deal with a promise for the results."," * @return {Q.promise} A promise that will return the result, or <null> if a callback was provided."," */","HueApi.prototype.updateSchedule = function (id, schedule, cb) {","    var options = this._defaultOptions()","      , promise","      ;","","    promise = _setScheduleIdOption(options, id);","    if (!promise) {","        promise = _setScheduleOptionsForUpdate(options, schedule);","    }","","    if (!promise) {","        promise = http.invoke(schedulesApi.setScheduleAttributes, options);","    }","","    return utils.promiseOrCallback(promise, cb);","};","","","/**"," * Gets the scenes on the Bridge, as an array of {\"id\": {String}, \"name\": {String}, \"lights\": {Array}, \"active\": {Boolean}}"," * objects."," *"," * @param cb An optional callback function to use if you do not want to use a promise for the results."," * @return A promise that will return the results or <null> if a callback was provided."," */","HueApi.prototype.scenes = function (cb) {","    var promise = this._scenes()","        .then(function (result) {","            var scenes = [];","","            Object.keys(result).forEach(function (id) {","                var scene = result[id]","                  , enrichedScene = deepExtend({}, scene)","                  ;","","                enrichedScene.id = id;","                scenes.push(enrichedScene);","            });","            return scenes;","        });","","    return utils.promiseOrCallback(promise, cb);","};","HueApi.prototype.getScenes = HueApi.prototype.scenes;","","","/**"," * Obtains a scene by a given id."," * @param sceneId {String} The id of the scene to obtain."," * @param cb An optional callback function to use if you do not want to use a promise for the results."," * @return A promise that will return the scene or <null> if a callback was provided."," */","HueApi.prototype.scene = function (sceneId, cb) {","    var options = this._defaultOptions()","      , promise = _setSceneIdOption(options, sceneId)","      ;","","    if (!promise) {","      // No errors in sceneId","      promise = http.invoke(scenesApi.getScene, options)","        .then(function(data) {","          data.id = sceneId;","          return data;","        })","    }","","    return utils.promiseOrCallback(promise, cb);","};","HueApi.prototype.getScene = HueApi.prototype.scene;","","/**"," * Deletes a Scene (that is stored inside the bridge, not in the lights)."," * @param sceneId The ID for the scene to delete"," * @param cb An optional callback function to use if you do not want to use a promise for the results."," * @returns {*} A promise that will return the result from deleting the scene or null if a callback was provided."," */","HueApi.prototype.deleteScene = function(sceneId, cb) {","    var options = this._defaultOptions()","      , promise = _setSceneIdOption(options, sceneId)","      ;","","    if (!promise) {","        // No errors in sceneId","        promise = http.invoke(scenesApi.deleteScene, options);","    }","","    return utils.promiseOrCallback(promise, cb);","};","","/**"," * Creates a new Scene."," * When the scene is created, it will store the current state of the lights and will use those \"current\" settings"," * when the scene is recalled/activated later."," *"," * There are two variants to this function, one that accepts lightIds and a name and another that takes a Scene object."," * The former is to maintain backwards compatibility with the 1.2.x version of this library."," *"," * @param lightIds {Array} of ids for the lights to be included in the scene."," * @param name {String} The name of the scene to be created. If one is not provided, then the id of the scene will become the name."," *"," * @param cb An optional callback function to use if you do not want to use a promise for the results."," * @return {*} A promise that will return the id of the scene that was created (as well as the values that make up the scene),"," * or null if a callback was provided."," */","HueApi.prototype.createScene = function (scene, cb) {","    var self = this;","","    if (Array.isArray(arguments[0])) {","        return self.createBasicScene(arguments[0], arguments[1], arguments[2]);","    } else {","        return self.createAdvancedScene(arguments[0], arguments[1]);","    }","};","","/**"," * Provides backwards compatibility for < 1.11.x versions of the Hue Bridge Firmware."," * @param lightIds"," * @param name"," * @param cb"," * @returns {*}"," */","HueApi.prototype.createBasicScene = function (lightIds, name, cb) {","    var self = this","      , options = self._defaultOptions()","      , promise","      ;","","    options.values = {","        name: name,","        lights: utils.createStringValueArray(lightIds),","        recycle: false","    };","","    promise = http.invoke(scenesApi.createScene, options);","    return utils.promiseOrCallback(promise, cb);","};","","/**"," * Provides scene creation for >= 1.11.x firmware versions of the Hue Bridge."," * @param scene The Scene object containing the details of the scene to be created."," * @param cb An optional callback function to use if you do not want to use a promise chain for the results."," * @returns {*}"," */","HueApi.prototype.createAdvancedScene = function(scene, cb) {","    var self = this","      , options = self._defaultOptions()","      , myScene = deepExtend({recycle: false}, scene)","      , promise","      ;","","    //TODO validate the options object","    options.values = myScene;","","    promise = http.invoke(scenesApi.createScene, options);","    return utils.promiseOrCallback(promise, cb);","};","","//TODO scene updates are now done as two different calls one for name and lights (and possible store current state) and a second of just setting individual light states","/**"," * Update the lights and/or name associated with a scene (or will create a new one if the"," * sceneId is not present in the bridge)."," *"," * @param sceneId {String} The id for the scene in the bridge"," * @param scene The configuration of the scene with the details to modify, which can be either a name or an array of"," * light ids."," * @param storeLightState {Boolean} flag to save the current light state of the lights in the scene."," *"," * @param cb An optional callback function to use if you do not want to use a promise for the results."," * @return {*} A promise that will return the id of the scene that was updated and the light ids that are now set,"," * or null if a callback was provided."," */","HueApi.prototype.updateScene = function (sceneId, scene, storeLightState, cb) {","    var self = this","        , options = self._defaultOptions()","        , storeState = !! storeLightState","        , promise = _setSceneIdOption(options, sceneId)","        ;","","    if (!promise) {","        // No errors in sceneId","","        //TODO validate that we have at least one parameter to modify before calling","","        if (utils.isFunction(storeLightState)) {","            cb = storeLightState;","            storeState = false;","        }","","        options.values = {};","","        // Only set the storelightstate to true, as the bridge does not accept a false value for this in version 1.11.0","        if (storeState) {","            options.values.storelightstate = true;","        }","","        if (scene) {","            if (scene.lights) {","                options.values.lights = utils.createStringValueArray(scene.lights);","            }","","            if (scene.name) {","                options.values.name = scene.name;","            }","        }","        promise = http.invoke(scenesApi.modifyScene, options);","    }","    return utils.promiseOrCallback(promise, cb);","};","HueApi.prototype.modifyScene = HueApi.prototype.updateScene;","","/**"," * Modifies the light state of one of the lights in a scene."," *"," * @param sceneId The scene id, which if it does not exist a new scene will be created."," * @param lightId integer The id of light that is having the state values set."," * @param stateValues {Object} containing the properties and values to set on the light."," *"," * @param cb An optional callback function to use if you do not want to use a promise for the results."," * @return A promise that will return the state values on the light, or {null} if a callback was provided."," */","HueApi.prototype.setSceneLightState = function (sceneId, lightId, stateValues, cb) {","    var promise;","","    promise = this._getLightStateOptions(lightId, stateValues)","        .then(function (options) {","            // Need to set id and lightId correctly, the above call treats the lightId as the id","            options.lightId = options.id;","            options.id = sceneId;","","            return http.invoke(scenesApi.modifyLightState, options);","        });","    return utils.promiseOrCallback(promise, cb);","};","HueApi.prototype.updateSceneLightState = HueApi.prototype.setSceneLightState;","HueApi.prototype.modifySceneLightState = HueApi.prototype.setSceneLightState;","","","/**"," * Helper-function that recalls a scene for a group using setGroupLightState. Reason for existence is simplicity for"," * user."," *"," * @param sceneId The id of the scene to activate, which is an integer or a value that can be parsed into an integer value."," * @param groupIdFilter An optional group filter to apply to the scene, to select a sub set of the lights in the scene. This can"," * be {null} or {undefined} to not apply a filter."," * @param cb An optional callback function to use if you do not want to use a promise for the results."," * @return A promise that will set activate the scene, or {null} if a callback was provided."," */","HueApi.prototype.activateScene = function (sceneId, groupIdFilter, cb) {","    var promise;","","    if (utils.isFunction(groupIdFilter)) {","        cb = groupIdFilter;","        groupIdFilter = null;","    }","","    try {","        groupIdFilter = Number(groupIdFilter, 10);","        if (isNaN(groupIdFilter)) {","            groupIdFilter = 0;","        }","    } catch (err) {","        groupIdFilter = 0;","    }","","    promise = this.setGroupLightState(groupIdFilter, {scene: sceneId});","    return utils.promiseOrCallback(promise, cb);","};","HueApi.prototype.recallScene = HueApi.prototype.activateScene;","","","// TODO this is flawed as the name can be in multiple scenes, all of which are active...","///**","// * Helper function that recalls a scene for a group using setGroupLightState. The id is extracted from the name, if","// * multiple ids is encountered which often is the case when a scene is edited via an ios/android app the last one is","// * used. Currently this is the scene last saved this is an assumption bases on undocumented handling.","// *","// * @param id The id of the light which is an integer or a value that can be parsed into an integer value.","// * @param stateValues {Object} containing the properties and values to set on the light.","// * @param cb An optional callback function to use if you do not want to use a promise for the results.","// * @return A promise that will set the specified state on the light, or {null} if a callback was provided.","// */","////TODO rename","//HueApi.prototype.recallSceneByName = function (groupId, sceneName, cb) {","//    var self = this","//        , deferred = Q.defer()","//        , scenes = {}","//        ;","//","//    //TODO this will not function as expected","//    self.scenes()","//        .then(function (sceneArray) {","//            sceneArray.forEach(function (scene) {","//                scenes[scene.name] = scene.id;","//            });","//","//            if (typeof scenes[sceneName] !== 'undefined') {","//                self.setGroupLightState(groupId, {scene: scenes[sceneName]})","//                    .then(function (result) {","//                        deferred.resolve(result);","//                    });","//            }","//        }).done();","//","//    return utils.promiseOrCallback(deferred.promise, cb);","//};","","","/**"," * Obtains all the allowed timezones from the bridge."," *"," * @param cb An optional callback function to use if you do not want to use a promise for the results."," * @return {*} A promise that will return the id of the scene that was created, or null if a callback was provided."," */","HueApi.prototype.getTimezones = function (cb) {","    var options = this._defaultOptions()","        , promise = http.invoke(infoApi.getAllTimezones, options)","        ;","","    return utils.promiseOrCallback(promise, cb);","};","HueApi.prototype.timezones = HueApi.prototype.getTimezones;","","","////////////////////////////////////////////////////////////////////////////////////////////////","// PRIVATE FUNCTIONS","////////////////////////////////////////////////////////////////////////////////////////////////","","HueApi.prototype._getConfig = function () {","    return this._config;","};","","/**"," * Creates a default options object for connecting with a Hue Bridge."," *"," * @returns {{host: *, username: *, timeout: *}}"," * @private"," */","HueApi.prototype._defaultOptions = function () {","    var config = this._getConfig();","","    return {","        host: config.hostname,","        username: config.username,","        timeout: config.timeout,","        port: config.port","    };","};","","HueApi.prototype._filterGroups = function (type) {","    var self = this;","","    return self.groups()","        .then(function (groups) {","            var results = [];","","            if (groups) {","                groups.forEach(function (group) {","                    if (group.type === type) {","                        results.push(group);","                    }","                })","            }","","            return results;","        });","};","","HueApi.prototype._scenes = function () {","    var options = this._defaultOptions();","    return http.invoke(scenesApi.getAllScenes, options);","};","","/**"," * Obtains the lights in a group and separates them into sub groups based on the model."," * @param groupId The id of the group."," * @returns {Object} A map of modelid to and array of lights that have that model."," * @private"," */","HueApi.prototype._getGroupLightsByType = function (groupId) {","    var self = this;","","    return Q.all(","        [","            self.getGroup(groupId),","            self.getLights()","        ])","        .spread(function (group, allLights) {","            var map = {}","                , lightMap = getLightsModelMap(allLights)","                ;","","            if (group && group.lights) {","                group.lights.forEach(function(lightId) {","                    var modelid = lightMap[lightId];","","                    if (map[modelid]) {","                        map[modelid].push(lightId);","                    } else {","                        map[modelid] = [lightId];","                    }","                });","            }","","            return map;","        });","};","","/**"," * Generates the light state options for a group"," * @param groupId The group to apply the state values to"," * @param stateValues The state of the lights to apply"," * @returns {Q.promise} That will resolve to a set of options for the group or an array of options to apply subsets of"," * lights in the group."," * @private"," */","HueApi.prototype._getGroupLightStateOptions = function (groupId, stateValues) {","    var self = this","        , options = self._defaultOptions()","        , state","        , deferred","        , promise","        ;","","    promise = _setGroupIdOption(options, groupId);","","    if (!promise) {","        // No errors in the group id","","        if (lightState.isLightState(stateValues)) {","            state = stateValues;","        } else {","            state = lightState.create(stateValues);","        }","","        if (state.hasRGB()) {","            //TODO RGB is tricky with groups, need to break the group into types and perform conversion","            // Get all lights in the group,","            // separate into types based on model","            // create multiple states per model","            // return a map of sub groups to states required","","            deferred = Q.defer();","            deferred.reject(new ApiError(\"RGB state is not supported for groups yet\"));","            promise = deferred.promise;","","            //// Separate the lights into models and apply the state to each type","            //promise = self._getGroupLightsByType(groupId)","            //    .then(function(groupLightsMap) {","            //        var models = Object.keys(groupLightsMap)","            //            , result = []","            //            ;","            //","            //        models.forEach(function(model) {","            //            var newState = state.copy();","            //            newState.applyRGB(model);","            //","            //            result.push({","            //                modelid: model,","            //                lights: groupLightsMap[model],","            //                state: newState","            //            });","            //        });","            //","            //        return result;","            //    })","            //    .then(function(subgroupsWithState) {","            //       //TODO need to create options","            //    });","        } else {","            options.values = state.payload();","","            deferred = Q.defer();","            deferred.resolve(options);","            promise = deferred.promise;","        }","    }","","    return promise;","};","","HueApi.prototype._getLightStateOptions = function (lightId, stateValues) {","    var self = this","        , options = self._defaultOptions()","        , deferred","        , state","        , promise","        ;","","    promise = _setLightIdOption(options, lightId);","","    if (!promise) {","        // We have not errored, so check if we need to convert an rgb value","","        if (lightState.isLightState(stateValues)) {","            state = stateValues;","        } else {","            state = lightState.create(stateValues);","        }","","        if (state.hasRGB()) {","            promise = self.lightStatus(lightId)","                .then(function (lightDetails) {","                    state = state.applyRGB(lightDetails.modelid);","                    options.values = state.payload();","","                    return options;","                });","        } else {","            options.values = state.payload();","","            deferred = Q.defer();","            deferred.resolve(options);","","            promise = deferred.promise;","        }","","    }","","    return promise;","};","","/**"," * Creates a new schedule in the Hue Bridge."," *"," * @param schedule The schedule object to create."," * @param cb An optional callback if you do not want to use the promise for results."," * @returns {Q.promise} A promise with the creation results, or <null> if a callback was provided."," * @private"," */","HueApi.prototype._createSchedule = function (schedule, cb) {","    var options = this._defaultOptions(),","        promise = _setScheduleOptionsForCreation(options, schedule);","","    if (!promise) {","        promise = http.invoke(schedulesApi.createSchedule, options);","    }","    return utils.promiseOrCallback(promise, cb);","};","","/**"," * Validates and then injects the username to be deleted into the options."," *"," * @param options The options to inject the value into."," * @param username The username to delete."," * @returns {Q.promise} A promise containing the error(s) if there were any, otherwise <null>."," * @private"," */","function _setDeleteUserOptions(options, username) {","    var errorPromise = null;","","    //TODO perform a lookup for the user before we attempt to delete it??","    if (!username) {","        errorPromise = _errorPromise(\"A username to delete must be specified.\");","    }","    options.username2 = username;","","    return errorPromise;","}","","/**"," * Validates and injects the configuration options to set for the Hue Bridge into the provided options."," *"," * @param options The options to inject into."," * @param values The values that we wish to modify on the bridge."," * @private"," */","function _setConfigurationOptions(options, values) {","    var errorPromise = null,","        validOptionFound = false;","","    // Use the API specification to check all required values have been provided.","    Object.keys(configurationApi.modifyConfiguration.bodyArguments).forEach(function (value) {","        var option = configurationApi.modifyConfiguration.bodyArguments[value];","","        // Check to see if we have at least one option being set","        if (!validOptionFound && values[value]) {","            validOptionFound = true;","        }","","        // Check that we have all the required options being provided","        if (!option.optional) {","            // Check that the value has been provided","            if (!errorPromise && !values[value]) {","                errorPromise = _errorPromise(\"A required configuration option '\" + value + \"' was not provided.\");","            }","        }","    });","","    if (!errorPromise) {","        if (!validOptionFound) {","            errorPromise = _errorPromise(\"No valid options for the bridge configuration were specified.\");","        } else {","            options.values = values;","        }","    }","","    return errorPromise;","}","","function getLightsModelMap(lightsArray) {","    var map = {};","","    if (Array.isArray(lightsArray)) {","        lightsArray.forEach(function(light) {","            map[light.id] = light.modelid;","        });","    }","","    return map;","}","","/**"," * Validates and then injects the 'id' into the options for a light in the bridge."," *"," * @param options The options to add the 'id' to."," * @param id The id of the light"," * @return {Q.promise} A promise that will throw the error if there was one, otherwise <null>."," * @private"," */","function _setLightIdOption(options, id) {","    var errorPromise = null;","","    if (!_isLightIdValid(id)) {","        errorPromise = _errorPromise(\"The light id '\" + id + \"' is not valid for this Hue Bridge.\");","    } else {","        options.id = id;","    }","","    return errorPromise;","}","","/**"," * Validates and then injects the 'id' into the options for a group in the bridge."," *"," * @param options The options to add the 'id' to."," * @param id The id of the group"," * @return {Q.promise} A promise that will throw an error or null if the group id was valid."," * @private"," */","function _setGroupIdOption(options, id) {","    var errorPromise = null;","","    if (!_isGroupIdValid(id)) {","        errorPromise = _errorPromise(\"The group id '\" + id + \"' is not valid for this Hue Bridge.\");","    } else {","        options.id = id;","    }","","    return errorPromise;","}","","/**"," * Validates and then injects the 'id' into the options for a group in the bridge."," *"," * @param options The options to add the 'id' to."," * @param id The id of the group"," * @return {Q.promise} A promise that will throw an error or null if the group id was valid."," * @private"," */","function _setGroupIdOptionForModification(options, id) {","    var errorPromise = null;","","    if (!_isGroupIdValidForModification(id)) {","        errorPromise = _errorPromise(\"The group id '\" + id + \"' cannot be modified on this Hue Bridge.\");","    } else {","        options.id = id;","    }","","    return errorPromise;","}","","/**"," * Validates and then injects the 'id' into the options for a group in the bridge."," *"," * @param options The options to add the 'id' to."," * @param id The id of the schedule"," * @return {Q.promise} A promise that will throw an error or null if the schedule id was valid."," * @private"," */","function _setScheduleIdOption(options, id) {","    var errorPromise = null;","","    if (!_isScheduleIdValid(id)) {","        errorPromise = _errorPromise(\"The schedule id '\" + id + \"' is not valid for this Hue Bridge.\");","    } else {","        options.id = id;","    }","","    return errorPromise;","}","","/**"," * Validates and then injects the schedule into the 'values' of the options."," *"," * @param options The options to inject into."," * @param schedule The schedule object containing the details for the schedule to create."," * @returns {Q.promise} A promise containing any errors that might have occured, or <null> if there were none."," * @private"," */","function _setScheduleOptionsForCreation(options, schedule) {","    var errorPromise = null;","","    // Use the API specification to check all required values have been provided.","    Object.keys(schedulesApi.createSchedule.bodyArguments).forEach(function (value) {","        var option = schedulesApi.createSchedule.bodyArguments[value];","        if (!option.optional) {","            // Check that the value has been provided","            if (!errorPromise && !schedule[value]) {","                errorPromise = _errorPromise(\"A required schedule option '\" + value + \"' was not provided.\");","            }","        }","    });","","    if (!errorPromise) {","        options.values = scheduledEvent.create(schedule);","    }","","    return errorPromise;","}","","/**"," * Validates and then injects the schedule into the 'values' of the options."," *"," * @param options The options to inject into."," * @param schedule The schedule object with the details of the updates to make."," * @returns {Q.promise} A promise with any errors, if there were any, otherwise <null>."," * @private"," */","function _setScheduleOptionsForUpdate(options, schedule) {","    var errorPromise = null,","        validOptionFound = false;","","    // Use the API specification to check all the required values have been provided, or we have at least one value","    Object.keys(schedulesApi.setScheduleAttributes.bodyArguments).forEach(function (value) {","        if (schedule[value]) {","            validOptionFound = true;","        }","    });","","    if (!validOptionFound) {","        errorPromise = _errorPromise(\"No valid values for updating the schedule were found in the schedule details provided.\");","    } else {","        options.values = scheduledEvent.create(schedule);","    }","","    return errorPromise;","}","","/**"," * Validates and then injects the 'id' into the options for a group in the bridge."," *"," * @param options The options to add the 'id' to."," * @param sceneId The id of the scene"," * @return {Q.promise} A promise that will throw an error or null if the scene id was valid."," * @private"," */","function _setSceneIdOption(options, sceneId) {","    var errorPromise = null;","","    if (!_isSceneIdValid(sceneId)) {","        errorPromise = _errorPromise(\"The scene id '\" + sceneId + \"' is not valid for this Hue Bridge.\");","    } else {","        options.id = sceneId;","    }","","    return errorPromise;","}","","/**"," * Creates a promise that will generate an ApiError with the provided message."," *"," * @param message The error message"," * @returns {Q.promise}"," * @private"," */","function _errorPromise(message) {","    var deferred = Q.defer();","    deferred.reject(new ApiError(message));","    return deferred.promise;","}","","/**"," * Validates that the light id is valid for this Hue Bridge."," *"," * @param id The id of the light in the Hue Bridge."," * @returns {boolean} true if the id is valid for this bridge."," * @private"," */","function _isLightIdValid(id) {","    if (parseInt(id, 10) > 0) {","        //TODO check that this is a valid light id for the system","        return true;","    } else {","        return false;","    }","}","","/**"," * Validates that the group id is valid for this Hue Bridge."," *"," * @param id The id of the group in the Hue Bridge."," * @returns {boolean} true if the id is valid for this bridge."," * @private"," */","function _isGroupIdValid(id) {","    if (parseInt(id, 10) >= 0) {","        //TODO check that this is a valid group id for the system","        return id <= 16;","    } else {","        return false;","    }","}","","/**"," * Validates that the group id is valid for modification on this Hue Bridge."," *"," * @param id The id of the group in the Hue Bridge."," * @returns {boolean} true if the id is valid for this bridge."," * @private"," */","function _isGroupIdValidForModification(id) {","    if (_isGroupIdValid(id)) {","        return parseInt(id, 10) > 0;","    }","    return false;","}","","/**"," * Validates that the schedule id is valid for this Hue Bridge."," *"," * @param id The id of the group in the Hue Bridge."," * @returns {boolean} true if the id is valid for this bridge."," * @private"," */","function _isScheduleIdValid(id) {","    if (parseInt(id, 10) >= 0) {","        //TODO check that this is a valid schedule id for the system","        return id <= 100;","    } else {","        return false;","    }","}","","function _isSceneIdValid(id) {","    return id && (String(id).length > 0);","}"],"l":{"3":1,"21":1,"22":0,"25":1,"26":0,"33":0,"44":1,"45":0,"47":0,"56":0,"58":1,"67":1,"68":0,"69":0,"71":1,"80":1,"81":0,"84":0,"86":1,"96":1,"97":0,"100":0,"102":1,"118":1,"119":0,"127":0,"128":0,"129":0,"131":0,"134":0,"135":0,"137":1,"147":1,"148":0,"151":0,"152":0,"153":0,"155":0,"166":1,"167":0,"170":0,"171":0,"172":0,"174":0,"176":1,"185":1,"186":1,"187":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"206":0,"209":0,"210":0,"212":1,"221":1,"222":0,"225":0,"227":0,"229":1,"237":1,"238":0,"241":0,"243":0,"245":1,"256":1,"257":0,"260":0,"262":0,"263":0,"265":0,"267":1,"270":1,"271":0,"273":0,"274":0,"279":0,"282":0,"284":1,"292":1,"293":0,"296":0,"298":1,"307":1,"308":0,"311":0,"323":1,"324":0,"327":0,"329":0,"333":0,"334":0,"336":0,"348":1,"349":0,"351":0,"353":0,"365":1,"366":0,"368":0,"370":0,"380":1,"381":0,"384":0,"386":1,"387":1,"396":1,"397":0,"398":0,"400":1,"409":1,"410":0,"411":0,"413":1,"422":1,"423":0,"424":0,"426":1,"436":1,"437":0,"441":1,"442":0,"450":0,"451":0,"454":0,"457":0,"458":0,"459":0,"462":0,"464":1,"478":1,"479":0,"483":0,"484":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"495":0,"499":0,"500":0,"503":0,"504":0,"507":0,"519":1,"520":0,"523":0,"528":0,"529":0,"540":1,"541":0,"544":0,"545":0,"547":0,"557":1,"558":0,"561":0,"563":1,"574":1,"575":0,"579":1,"580":0,"581":0,"584":0,"585":0,"587":0,"589":1,"600":1,"601":0,"603":1,"613":1,"614":0,"618":0,"619":0,"621":0,"633":1,"634":0,"638":0,"639":0,"640":0,"643":0,"644":0,"647":0,"658":1,"659":0,"661":0,"663":0,"664":0,"668":0,"669":0,"671":0,"674":0,"676":1,"685":1,"686":0,"690":0,"692":0,"694":0,"695":0,"699":0,"701":1,"709":1,"710":0,"714":0,"716":0,"719":0,"737":1,"738":0,"740":0,"741":0,"743":0,"754":1,"755":0,"760":0,"766":0,"767":0,"776":1,"777":0,"784":0,"786":0,"787":0,"804":1,"805":0,"811":0,"816":0,"817":0,"818":0,"821":0,"824":0,"825":0,"828":0,"829":0,"830":0,"833":0,"834":0,"837":0,"839":0,"841":1,"853":1,"854":0,"856":0,"859":0,"860":0,"862":0,"864":0,"866":1,"867":1,"880":1,"881":0,"883":0,"884":0,"885":0,"888":0,"889":0,"890":0,"891":0,"894":0,"897":0,"898":0,"900":1,"946":1,"947":0,"951":0,"953":1,"960":1,"961":0,"970":1,"971":0,"973":0,"981":1,"982":0,"984":0,"986":0,"988":0,"989":0,"990":0,"991":0,"996":0,"1000":1,"1001":0,"1002":0,"1011":1,"1012":0,"1014":0,"1020":0,"1024":0,"1025":0,"1026":0,"1028":0,"1029":0,"1031":0,"1036":0,"1048":1,"1049":0,"1056":0,"1058":0,"1061":0,"1062":0,"1064":0,"1067":0,"1074":0,"1075":0,"1076":0,"1102":0,"1104":0,"1105":0,"1106":0,"1110":0,"1113":1,"1114":0,"1121":0,"1123":0,"1126":0,"1127":0,"1129":0,"1132":0,"1133":0,"1135":0,"1136":0,"1138":0,"1141":0,"1143":0,"1144":0,"1146":0,"1151":0,"1162":1,"1163":0,"1166":0,"1167":0,"1169":0,"1180":1,"1181":0,"1184":0,"1185":0,"1187":0,"1189":0,"1199":1,"1200":0,"1204":0,"1205":0,"1208":0,"1209":0,"1213":0,"1215":0,"1216":0,"1221":0,"1222":0,"1223":0,"1225":0,"1229":0,"1232":1,"1233":0,"1235":0,"1236":0,"1237":0,"1241":0,"1252":1,"1253":0,"1255":0,"1256":0,"1258":0,"1261":0,"1272":1,"1273":0,"1275":0,"1276":0,"1278":0,"1281":0,"1292":1,"1293":0,"1295":0,"1296":0,"1298":0,"1301":0,"1312":1,"1313":0,"1315":0,"1316":0,"1318":0,"1321":0,"1332":1,"1333":0,"1336":0,"1337":0,"1338":0,"1340":0,"1341":0,"1346":0,"1347":0,"1350":0,"1361":1,"1362":0,"1366":0,"1367":0,"1368":0,"1372":0,"1373":0,"1375":0,"1378":0,"1389":1,"1390":0,"1392":0,"1393":0,"1395":0,"1398":0,"1408":1,"1409":0,"1410":0,"1411":0,"1421":1,"1422":0,"1424":0,"1426":0,"1437":1,"1438":0,"1440":0,"1442":0,"1453":1,"1454":0,"1455":0,"1457":0,"1467":1,"1468":0,"1470":0,"1472":0,"1476":1,"1477":0}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/lights-api.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/lights-api.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"buildLightsResult","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":35}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":36},"end":{"line":32,"column":50}}},"3":{"name":"processSetLightStateResult","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":44}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":22,"column":5}},"2":{"start":{"line":24,"column":0},"end":{"line":24,"column":19}},"3":{"start":{"line":28,"column":0},"end":{"line":37,"column":1}},"4":{"start":{"line":29,"column":4},"end":{"line":29,"column":20}},"5":{"start":{"line":31,"column":4},"end":{"line":35,"column":5}},"6":{"start":{"line":32,"column":8},"end":{"line":34,"column":11}},"7":{"start":{"line":33,"column":12},"end":{"line":33,"column":58}},"8":{"start":{"line":36,"column":4},"end":{"line":36,"column":30}},"9":{"start":{"line":39,"column":0},"end":{"line":44,"column":1}},"10":{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},"11":{"start":{"line":41,"column":8},"end":{"line":41,"column":65}},"12":{"start":{"line":43,"column":4},"end":{"line":43,"column":16}},"13":{"start":{"line":46,"column":0},"end":{"line":55,"column":2}},"14":{"start":{"line":57,"column":0},"end":{"line":66,"column":2}},"15":{"start":{"line":68,"column":0},"end":{"line":83,"column":2}},"16":{"start":{"line":85,"column":0},"end":{"line":93,"column":2}},"17":{"start":{"line":95,"column":0},"end":{"line":110,"column":2}},"18":{"start":{"line":112,"column":0},"end":{"line":122,"column":2}},"19":{"start":{"line":124,"column":0},"end":{"line":131,"column":2}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"2":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":40,"column":4}},{"start":{"line":40,"column":4},"end":{"line":40,"column":4}}]}},"code":["\"use strict\";","","//","// The Documented Phillips Hue Bridge API for lights http://developers.meethue.com/1_lightsapi.html","//","// This module wraps up all the functionality for the definition and basic processing of the parameters for the API","// so that it can be called from the httpPromise module.","//","// The benefits of keeping all this code here is that it is much simpler to update the keep in step with the Phillips","// Hue API documentation, than having it scatter piece meal through various other classes and functions.","//","","var Trait = require(\"traits\").Trait","    , deepExtend = require(\"deep-extend\")","    , tApiMethod = require(\"./traits/tApiMethod\")","    , tDescription = require(\"./traits/tDescription\")","    , tBodyArguments = require(\"./traits/tBodyArguments\")","    , tLightStateBody = require(\"./traits/tLightStateBody\")","    , tPostProcessing = require(\"./traits/tPostProcessing\")","    , ApiError = require(\"../errors\").ApiError","    , utils = require(\"../utils\")","    ;","","var apiTraits = {};","","","//TODO tie this into the API definition as a post processing step, then apply it via the http.invoke()","function buildLightsResult(result) {","    var lights = [];","","    if (result) {","        Object.keys(result).forEach(function (id) {","            lights.push(deepExtend({id: id}, result[id]));","        });","    }","    return {\"lights\": lights};","}","","function processSetLightStateResult(result) {","    if (!utils.wasSuccessful(result)) {","        throw new ApiError(utils.parseErrors(result).join(\", \"));","    }","    return true;","}","","apiTraits.getAllLights = Trait.compose(","    tApiMethod(","        \"/api/<username>/lights\",","        \"GET\",","        \"1.0\",","        \"Whitelist\"","    ),","    tDescription(\"Gets a list of all lights that have been discovered by the bridge.\"),","    tPostProcessing(buildLightsResult)",");","","apiTraits.getNewLights = Trait.compose(","    tApiMethod(","        \"/api/<username>/lights/new\",","        \"GET\",","        \"1.0\",","        \"Whitelist\"","    ),","    tDescription(\"Gets a list of lights that were discovered the last time a search for new lights was performed. \" +","    \"The list of new lights is always deleted when a new search is started.\")",");","","apiTraits.searchForNewLights = Trait.compose(","    tApiMethod(","        \"/api/<username>/lights\",","        \"POST\",","        \"1.0\",","        \"Whitelist\"","    ),","    tDescription(\"Starts a search for new lights. The bridge will search for 1 minute and will add a maximum of 15 new lights.\" +","    \"To add further lights, the command needs to be sent again after the search has completed.\" +","    \"If a search is already active, it will be aborted and a new search will start.\" +","    \"When the search has finished, new lights will be available using the get new lights command.\" +","    \"In addition, the new lights will now be available by calling get all lights or by calling get group \" +","    \"attributes on group 0. Group 0 is a special group that cannot be deleted and will always contain all \" +","    \"lights known by the bridge.\"),","    tPostProcessing(utils.wasSuccessful)",");","","apiTraits.getLightAttributesAndState = Trait.compose(","    tApiMethod(","        \"/api/<username>/lights/<id>\",","        \"GET\",","        \"1.0\",","        \"Whitelist\"","    ),","    tDescription(\"Gets the attributes and state of a given light.\")",");","","apiTraits.setLightAttributes = Trait.compose(","    tApiMethod(","        \"/api/<username>/lights/<id>\",","        \"PUT\",","        \"1.0\",","        \"Whitelist\"","    ),","    tDescription(\"Used to rename lights. A light can have its name changed when in any state, including when it is unreachable or off.\"),","    tBodyArguments(","        \"application/json\",","        [","            {name: \"name\", type: \"string\", maxLength: 32, optional: false}","        ]","    ),","    tPostProcessing(utils.wasSuccessful)",");","","apiTraits.setLightState = Trait.compose(","    tApiMethod(","        \"/api/<username>/lights/<id>/state\",","        \"PUT\",","        \"1.0\",","        \"Whitelist\"","    ),","    tDescription(\"Allows the user to turn the light on and off, modify the hue and effects.\"),","    tLightStateBody(true),","    tPostProcessing(processSetLightStateResult)",");","","module.exports = {","    \"getAllLights\": Trait.create(Object.prototype, apiTraits.getAllLights),","    \"getNewLights\": Trait.create(Object.prototype, apiTraits.getNewLights),","    \"searchForNewLights\": Trait.create(Object.prototype, apiTraits.searchForNewLights),","    \"getLightAttributesAndState\": Trait.create(Object.prototype, apiTraits.getLightAttributesAndState),","    \"renameLight\": Trait.create(Object.prototype, apiTraits.setLightAttributes),","    \"setLightState\": Trait.create(Object.prototype, apiTraits.setLightState)","};"],"l":{"13":1,"24":1,"28":1,"29":0,"31":0,"32":0,"33":0,"36":0,"39":1,"40":0,"41":0,"43":0,"46":1,"57":1,"68":1,"85":1,"95":1,"112":1,"124":1}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/traits/tBodyArguments.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/traits/tBodyArguments.js","s":{"1":1,"2":1,"3":111,"4":111,"5":28,"6":8,"7":28,"8":12,"9":28,"10":3,"11":111,"12":5,"13":5,"14":111,"15":13,"16":111,"17":55,"18":111,"19":1,"20":14,"21":14,"22":106,"23":14,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"b":{"1":[28,83],"2":[8,20],"3":[12,16],"4":[3,25],"5":[5,106],"6":[5,0],"7":[13,98],"8":[55,56],"9":[111,55],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":111,"2":14,"3":106,"4":0,"5":0},"fnMap":{"1":{"name":"createBodyArgumentTrait","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":42}}},"2":{"name":"(anonymous_2)","line":51,"loc":{"start":{"line":51,"column":17},"end":{"line":51,"column":47}}},"3":{"name":"(anonymous_3)","line":54,"loc":{"start":{"line":54,"column":25},"end":{"line":54,"column":40}}},"4":{"name":"(anonymous_4)","line":63,"loc":{"start":{"line":63,"column":30},"end":{"line":63,"column":48}}},"5":{"name":"(anonymous_5)","line":67,"loc":{"start":{"line":67,"column":56},"end":{"line":67,"column":75}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"2":{"start":{"line":5,"column":0},"end":{"line":43,"column":1}},"3":{"start":{"line":6,"column":4},"end":{"line":10,"column":6}},"4":{"start":{"line":14,"column":4},"end":{"line":26,"column":5}},"5":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"6":{"start":{"line":16,"column":12},"end":{"line":16,"column":62}},"7":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"8":{"start":{"line":20,"column":12},"end":{"line":20,"column":58}},"9":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"10":{"start":{"line":24,"column":12},"end":{"line":24,"column":58}},"11":{"start":{"line":28,"column":4},"end":{"line":32,"column":5}},"12":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"13":{"start":{"line":30,"column":12},"end":{"line":30,"column":114}},"14":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"15":{"start":{"line":35,"column":8},"end":{"line":35,"column":60}},"16":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"17":{"start":{"line":39,"column":8},"end":{"line":39,"column":83}},"18":{"start":{"line":42,"column":4},"end":{"line":42,"column":34}},"19":{"start":{"line":51,"column":0},"end":{"line":89,"column":2}},"20":{"start":{"line":52,"column":4},"end":{"line":52,"column":21}},"21":{"start":{"line":54,"column":4},"end":{"line":56,"column":7}},"22":{"start":{"line":55,"column":8},"end":{"line":55,"column":89}},"23":{"start":{"line":58,"column":4},"end":{"line":88,"column":6}},"24":{"start":{"line":64,"column":16},"end":{"line":65,"column":32}},"25":{"start":{"line":67,"column":16},"end":{"line":83,"column":19}},"26":{"start":{"line":68,"column":20},"end":{"line":69,"column":58}},"27":{"start":{"line":71,"column":20},"end":{"line":82,"column":21}},"28":{"start":{"line":72,"column":24},"end":{"line":80,"column":25}},"29":{"start":{"line":73,"column":28},"end":{"line":73,"column":50}},"30":{"start":{"line":76,"column":28},"end":{"line":78,"column":29}},"31":{"start":{"line":77,"column":32},"end":{"line":77,"column":110}},"32":{"start":{"line":79,"column":28},"end":{"line":79,"column":50}},"33":{"start":{"line":85,"column":16},"end":{"line":85,"column":28}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":14,"column":4}},{"start":{"line":14,"column":4},"end":{"line":14,"column":4}}]},"2":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":8}},{"start":{"line":15,"column":8},"end":{"line":15,"column":8}}]},"3":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":8}},{"start":{"line":19,"column":8},"end":{"line":19,"column":8}}]},"4":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":23,"column":8}},{"start":{"line":23,"column":8},"end":{"line":23,"column":8}}]},"5":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]},"6":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":29,"column":8}},{"start":{"line":29,"column":8},"end":{"line":29,"column":8}}]},"7":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"8":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"9":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":38}},{"start":{"line":38,"column":42},"end":{"line":38,"column":72}}]},"10":{"line":68,"type":"cond-expr","locations":[{"start":{"line":68,"column":41},"end":{"line":68,"column":56}},{"start":{"line":68,"column":59},"end":{"line":68,"column":68}}]},"11":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":20},"end":{"line":71,"column":20}},{"start":{"line":71,"column":20},"end":{"line":71,"column":20}}]},"12":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":24},"end":{"line":72,"column":24}},{"start":{"line":72,"column":24},"end":{"line":72,"column":24}}]},"13":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":28},"end":{"line":76,"column":28}},{"start":{"line":76,"column":28},"end":{"line":76,"column":28}}]}},"code":["\"use strict\";","","var Trait = require(\"traits\").Trait;","","function createBodyArgumentTrait(options) {","    var traitProperties = {","        name: options.name,","        type: options.type,","        optional: options.optional","    };","","    //TODO add more validation","","    if (options.type === \"string\") {","        if (options.validValues) {","            traitProperties.validValues = options.validValues;","        }","","        if (options.maxLength) {","            traitProperties.maxLength = options.maxLength;","        }","","        if (options.minLength) {","            traitProperties.minLength = options.minLength;","        }","    }","","    if (options.type === \"list\") {","        if (options.listType) {","            traitProperties.valueType = Trait.create(Object.prototype, createBodyArgumentTrait(options.listType));","        }","    }","","    if (options.defaultValue) {","        traitProperties.defaultValue = options.defaultValue;","    }","","    if (options.minValue !== undefined && options.maxValue !== undefined) {","        traitProperties.range = {\"min\": options.minValue, \"max\": options.maxValue};","    }","","    return Trait(traitProperties);","}","","/**"," *"," * @param type the encoding type of the options, i.e. application/json"," * @param optionsArray The array of body options."," * @returns {*}"," */","module.exports = function (type, optionsArray) {","    var options = {};","","    optionsArray.forEach(function (opt) {","        options[opt.name] = Trait.create(Object.prototype, createBodyArgumentTrait(opt));","    });","","    return Trait(","        {","            bodyType: type,","            bodyArguments: options,","","            buildRequestBody: function (values) {","                var body = {},","                    self = this;","","                Object.keys(self.bodyArguments).forEach(function (argName) {","                    var value = values ? values[argName] : undefined, // default to undefined if not set","                        arg = self.bodyArguments[argName];","","                    if (self.bodyArguments.hasOwnProperty(argName)) {","                        if (arg.optional) {","                            body[argName] = value;","                        } else {","                            // We must have a value provided","                            if (!value) {","                                throw new Error(\"The required argument '\" + argName + \"' is missing a value\");","                            }","                            body[argName] = value;","                        }","                        //TODO add checking on the ranges/limits etc...","                    }","                });","","                return body;","            }","        }","    );","};"],"l":{"3":1,"5":1,"6":111,"14":111,"15":28,"16":8,"19":28,"20":12,"23":28,"24":3,"28":111,"29":5,"30":5,"34":111,"35":13,"38":111,"39":55,"42":111,"51":1,"52":14,"54":14,"55":106,"58":14,"64":0,"67":0,"68":0,"71":0,"72":0,"73":0,"76":0,"77":0,"79":0,"85":0}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/traits/tLightStateBody.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/traits/tLightStateBody.js","s":{"1":1,"2":1,"3":5,"4":5,"5":3,"6":5,"7":1,"8":5},"b":{"1":[3,2],"2":[1,4]},"f":{"1":5},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":17},"end":{"line":6,"column":49}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":49}},"2":{"start":{"line":6,"column":0},"end":{"line":136,"column":2}},"3":{"start":{"line":7,"column":4},"end":{"line":115,"column":6}},"4":{"start":{"line":117,"column":4},"end":{"line":125,"column":5}},"5":{"start":{"line":118,"column":8},"end":{"line":124,"column":11}},"6":{"start":{"line":127,"column":4},"end":{"line":133,"column":5}},"7":{"start":{"line":128,"column":8},"end":{"line":132,"column":11}},"8":{"start":{"line":135,"column":4},"end":{"line":135,"column":54}}},"branchMap":{"1":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":4},"end":{"line":117,"column":4}},{"start":{"line":117,"column":4},"end":{"line":117,"column":4}}]},"2":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":127,"column":4}},{"start":{"line":127,"column":4},"end":{"line":127,"column":4}}]}},"code":["\"use strict\";","","var Trait = require(\"traits\").Trait,","    tBodyArguments = require(\"./tBodyArguments\");","","module.exports = function (withAlert, withScene) {","    var values = [","        {","            name: \"on\",","            type: \"bool\",","            optional: true","        },","","        {","            name: \"bri\",","            type: \"uint8\",","            minValue: 0,","            maxValue: 254,","            optional: true","        },","","        {","            name: \"hue\",","            type: \"uint16\",","            minValue: 0,","            maxValue: 65535,","            optional: true","        },","","        {","            name: \"sat\",","            type: \"uint8\",","            minValue: 0,","            maxValue: 255,","            optional: true","        },","","        {","            name: \"xy\",","            type: \"list\",","            listType: {","                name: \"xyValue\",","                type: \"float\",","                minValue: 0,","                maxValue: 1,","                optional: false","            },","            optional: true","        },","","        {","            name: \"ct\",","            type: \"uint8\",","            minValue: 153,","            maxValue: 500,","            optional: true","        },","","        {","            name: \"effect\",","            type: \"string\",","            defaultValue: \"none\",","            validValues: [\"none\", \"colorloop\"],","            optional: true","        },","","        {","            name: \"transitiontime\",","            type: \"uint16\",","            defaultValue: 4,","            minValue: 0,","            maxValue: 65535,","            optional: true","        },","","        {","            name: \"bri_inc\",","            type: \"int8\",","            minValue: -254,","            maxValue: 254,","            optional: true","        },","","        {","            name: \"sat_inc\",","            type: \"int8\",","            minValue: -254,","            maxValue: 254,","            optional: true","        },","","        {","            name: \"hue_inc\",","            type: \"int16\",","            minValue: -65534,","            maxValue: 65534,","            optional: true","        },","","        {","            name: \"ct_inc\",","            type: \"int16\",","            minValue: -65534,","            maxValue: 65534,","            optional: true","        },","","        {","            name: \"xy_inc\",","            type: \"float\",","            minValue: -0.5,","            maxValue: 0.5,","            optional: true","        }","    ];","","    if (withAlert) {","        values.push({","            name: \"alert\",","            type: \"string\",","            defaultValue: \"none\",","            validValues: [\"none\", \"select\", \"lselect\"],","            optional: true","        });","    }","","    if (withScene) {","        values.push({","            name: \"scene\",","            type: \"string\",","            optional: true","        });","    }","","    return tBodyArguments(\"application/json\", values);","};",""],"l":{"3":1,"6":1,"7":5,"117":5,"118":3,"127":5,"128":1,"135":5}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/sensors-api.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/sensors-api.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":1},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"buildSensorsResult","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":36}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":36},"end":{"line":30,"column":50}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":21,"column":5}},"2":{"start":{"line":23,"column":0},"end":{"line":23,"column":19}},"3":{"start":{"line":26,"column":0},"end":{"line":35,"column":1}},"4":{"start":{"line":27,"column":4},"end":{"line":27,"column":21}},"5":{"start":{"line":29,"column":4},"end":{"line":33,"column":5}},"6":{"start":{"line":30,"column":8},"end":{"line":32,"column":11}},"7":{"start":{"line":31,"column":12},"end":{"line":31,"column":59}},"8":{"start":{"line":34,"column":4},"end":{"line":34,"column":32}},"9":{"start":{"line":37,"column":0},"end":{"line":46,"column":2}},"10":{"start":{"line":51,"column":0},"end":{"line":53,"column":2}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]}},"code":["\"use strict\";","","//","// The Documented Phillips Hue Bridge API for lights http://developers.meethue.com/1_lightsapi.html","//","// This module wraps up all the functionality for the definition and basic processing of the parameters for the API","// so that it can be called from the httpPromise module.","//","// The benefits of keeping all this code here is that it is much simpler to update the keep in step with the Phillips","// Hue API documentation, than having it scatter piece meal through various other classes and functions.","//","","var Trait = require(\"traits\").Trait","    , deepExtend = require(\"deep-extend\")","    , tApiMethod = require(\"./traits/tApiMethod\")","    , tDescription = require(\"./traits/tDescription\")","    , tBodyArguments = require(\"./traits/tBodyArguments\")","    , tLightStateBody = require(\"./traits/tLightStateBody\")","    , tPostProcessing = require(\"./traits/tPostProcessing\")","    , utils = require(\"../utils\")","    ;","","var apiTraits = {};","","//TODO tie this into the API definition as a post processing step, then apply it via the http.invoke()","function buildSensorsResult(result) {","    var sensors = [];","","    if (result) {","        Object.keys(result).forEach(function (id) {","            sensors.push(deepExtend({id: id}, result[id]));","        });","    }","    return {\"sensors\": sensors};","}","","apiTraits.getAllSensors = Trait.compose(","    tApiMethod(","        \"/api/<username>/sensors\",","        \"GET\",","        \"1.3\",","        \"Whitelist\"","    ),","    tDescription(\"Gets a list of all sensors that have been discovered by the bridge.\"),","    tPostProcessing(buildSensorsResult)",");","","","//TODO there are many more endpoints that need to be added to this: http://www.developers.meethue.com/documentation/sensors-api","","module.exports = {","    \"getAllSensors\": Trait.create(Object.prototype, apiTraits.getAllSensors)","};"],"l":{"13":1,"23":1,"26":1,"27":0,"29":0,"30":0,"31":0,"34":0,"37":1,"51":1}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/groups-api.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/groups-api.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"processAllGroups","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":34}}},"2":{"name":"(anonymous_2)","line":41,"loc":{"start":{"line":41,"column":32},"end":{"line":41,"column":49}}},"3":{"name":"ensureSuccessful","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":34}}},"4":{"name":"processCreateGroup","line":54,"loc":{"start":{"line":54,"column":0},"end":{"line":54,"column":36}}},"5":{"name":"processSetLightStateResult","line":65,"loc":{"start":{"line":65,"column":0},"end":{"line":65,"column":44}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":23,"column":5}},"2":{"start":{"line":25,"column":0},"end":{"line":27,"column":5}},"3":{"start":{"line":35,"column":0},"end":{"line":45,"column":1}},"4":{"start":{"line":36,"column":4},"end":{"line":36,"column":24}},"5":{"start":{"line":39,"column":4},"end":{"line":39,"column":74}},"6":{"start":{"line":41,"column":4},"end":{"line":43,"column":7}},"7":{"start":{"line":42,"column":8},"end":{"line":42,"column":64}},"8":{"start":{"line":44,"column":4},"end":{"line":44,"column":22}},"9":{"start":{"line":47,"column":0},"end":{"line":52,"column":1}},"10":{"start":{"line":48,"column":4},"end":{"line":50,"column":5}},"11":{"start":{"line":49,"column":8},"end":{"line":49,"column":65}},"12":{"start":{"line":51,"column":4},"end":{"line":51,"column":16}},"13":{"start":{"line":54,"column":0},"end":{"line":63,"column":1}},"14":{"start":{"line":55,"column":4},"end":{"line":55,"column":17}},"15":{"start":{"line":57,"column":4},"end":{"line":57,"column":29}},"16":{"start":{"line":59,"column":4},"end":{"line":59,"column":36}},"17":{"start":{"line":60,"column":4},"end":{"line":60,"column":62}},"18":{"start":{"line":62,"column":4},"end":{"line":62,"column":26}},"19":{"start":{"line":65,"column":0},"end":{"line":70,"column":1}},"20":{"start":{"line":66,"column":4},"end":{"line":68,"column":5}},"21":{"start":{"line":67,"column":8},"end":{"line":67,"column":65}},"22":{"start":{"line":69,"column":4},"end":{"line":69,"column":16}},"23":{"start":{"line":72,"column":0},"end":{"line":81,"column":2}},"24":{"start":{"line":83,"column":0},"end":{"line":92,"column":2}},"25":{"start":{"line":94,"column":0},"end":{"line":110,"column":2}},"26":{"start":{"line":112,"column":0},"end":{"line":122,"column":2}},"27":{"start":{"line":124,"column":0},"end":{"line":142,"column":2}},"28":{"start":{"line":144,"column":0},"end":{"line":154,"column":2}},"29":{"start":{"line":157,"column":0},"end":{"line":164,"column":2}}},"branchMap":{"1":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"2":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":66,"column":4}},{"start":{"line":66,"column":4},"end":{"line":66,"column":4}}]}},"code":["\"use strict\";","","//","// The Documented Phillips Hue Bridge API for groups http://www.developers.meethue.com/documentation/groups-api","//","// This module wraps up all the functionality for the definition and basic processing of the parameters for the API","// so that it can be called from the httpPromise module.","//","// The benefits of keeping all this code here is that it is much simpler to update the keep in step with the Phillips","// Hue API documentation, than having it scatter piece meal through various other classes and functions.","//","","var Trait = require(\"traits\").Trait","    , deepExtend = require(\"deep-extend\")","    , tApiMethod = require(\"./traits/tApiMethod\")","    , tDescription = require(\"./traits/tDescription\")","    , tBodyArguments = require(\"./traits/tBodyArguments\")","    , tLightStateBody = require(\"./traits/tLightStateBody\")","    , tPostProcessing = require(\"./traits/tPostProcessing\")","    , tErrorHandling = require(\"./traits/tErrorHandling\")","    , ApiError = require(\"../errors\").ApiError","    , utils = require(\"../utils\")","    ;","","var ALL_LIGHTS_NAME = \"Lightset 0\"","    , apiTraits = {}","    ;","","/**"," * Parses the results from the All Groups request into a more useful format."," * @param result The result from the Hue Bridge."," * @returns {Array} An array of groups {\"id\": {*}, name: {*}} known to the bridge."," * @private"," */","function processAllGroups(result) {","    var groupArray = [];","","    // There is an implicit all lights group that is not returned in the results of the lookup, so explicitly add it","    groupArray.push({id: \"0\", name: ALL_LIGHTS_NAME, type: \"LightGroup\"});","","    Object.keys(result).forEach(function (value) {","        groupArray.push(deepExtend({id: value}, result[value]));","    });","    return groupArray;","}","","function ensureSuccessful(result) {","    if (!utils.wasSuccessful(result)) {","        throw new ApiError(utils.parseErrors(result).join(\", \"));","    }","    return true;","}","","function processCreateGroup(result) {","    var idString;","","    ensureSuccessful(result);","","    idString = result[0].success.id;","    idString = idString.substr(idString.lastIndexOf(\"/\") + 1);","","    return {id: idString};","}","","function processSetLightStateResult(result) {","    if (!utils.wasSuccessful(result)) {","        throw new ApiError(utils.parseErrors(result).join(\", \"));","    }","    return true;","}","","apiTraits.getAllGroups = Trait.compose(","    tApiMethod(","        \"/api/<username>/groups\",","        \"GET\",","        \"1.0\",","        \"Whitelist\"","    ),","    tDescription(\"Gets a list of all groups that have been added to the bridge. A group is a list of lights that can be created, modified and deleted by a user. The maximum numbers of groups is 16. N.B. For the first bridge firmware release, bridge software version 01003542 only, a limited number of these APIs are supported in the firmware so only control of groups/0 is supported.\"),","    tPostProcessing(processAllGroups)",");","","apiTraits.getGroupAttributes = Trait.compose(","    tApiMethod(","        \"/api/<username>/groups/<id>\",","        \"GET\",","        \"1.0\",","        \"Whitelist\"","    ),","    tDescription(\"Gets the name, light membership and last command for a given group.\")","//    tPostProcessing(_processGroupResult) // Cannot use this as we need to inject the id we were called with",");","","apiTraits.setGroupAttributes = Trait.compose(","    tApiMethod(","        \"/api/<username>/groups/<id>\",","        \"PUT\",","        \"1.0\",","        \"Whitelist\"","    ),","    tDescription(\"Allows the user to modify the name and light membership of a group.\"),","    tBodyArguments(","        \"application/json\",","        [","            {name: \"name\", type: \"string\", maxLength: 32, optional: true},","            {name: \"lights\", type: \"list int\", optional: true}","        ]","    ),","    tPostProcessing(ensureSuccessful)",");","","apiTraits.setGroupState = Trait.compose(","    tApiMethod(","        \"/api/<username>/groups/<id>/action\",","        \"PUT\",","        \"1.0\",","        \"Whitelist\"","    ),","    tDescription(\"Modifies the state of all lights in a group\"),","    tLightStateBody(true, true),","    tPostProcessing(processSetLightStateResult)",");","","apiTraits.createGroup = Trait.compose(","    tApiMethod(","        \"/api/<username>/groups\",","        \"POST\",","        \"1.0\",","        \"Whitelist\"","    ),","    tDescription(\"Creates a new group containing the lights specified and optional name. A new group \"","    + \"is created in the bridge with the next available id. Note: For bridges < 1.4 lights must be on, otherwise \"","    + \"they won't be saved in the group. For 1.4 there is no such restriction.\"),","    tBodyArguments(","        \"application/json\",","        [","            {name: \"name\", type: \"string\", maxLength: 32, optional: true},","            {name: \"lights\", type: \"list int\", optional: false}","        ]","    ),","    tPostProcessing(processCreateGroup)",");","","apiTraits.deleteGroup = Trait.compose(","    tApiMethod(","        \"/api/<username>/groups/<id>\",","        \"DELETE\",","        \"1.0\",","        \"Whitelist\"","    ),","    tDescription(\"Deletes the specified group from the bridge.\"),","    tPostProcessing(ensureSuccessful),","    tErrorHandling({305: \"It is not allowed to update or delete group of this type\"})",");","","","module.exports = {","    getAllGroups: Trait.create(Object.prototype, apiTraits.getAllGroups),","    getGroupAttributes: Trait.create(Object.prototype, apiTraits.getGroupAttributes),","    setGroupAttributes: Trait.create(Object.prototype, apiTraits.setGroupAttributes),","    setGroupState: Trait.create(Object.prototype, apiTraits.setGroupState),","    createGroup: Trait.create(Object.prototype, apiTraits.createGroup),","    deleteGroup: Trait.create(Object.prototype, apiTraits.deleteGroup)","};"],"l":{"13":1,"25":1,"35":1,"36":0,"39":0,"41":0,"42":0,"44":0,"47":1,"48":0,"49":0,"51":0,"54":1,"55":0,"57":0,"59":0,"60":0,"62":0,"65":1,"66":0,"67":0,"69":0,"72":1,"83":1,"94":1,"112":1,"124":1,"144":1,"157":1}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/traits/tErrorHandling.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/traits/tErrorHandling.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1},"b":{"1":[0,1]},"f":{"1":1},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":17},"end":{"line":8,"column":36}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":6,"column":5}},"2":{"start":{"line":8,"column":0},"end":{"line":16,"column":2}},"3":{"start":{"line":9,"column":4},"end":{"line":11,"column":5}},"4":{"start":{"line":10,"column":8},"end":{"line":10,"column":86}},"5":{"start":{"line":13,"column":4},"end":{"line":15,"column":7}}},"branchMap":{"1":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":9,"column":4}},{"start":{"line":9,"column":4},"end":{"line":9,"column":4}}]}},"code":["\"use strict\";","","var util = require(\"util\")","    , Trait = require(\"traits\").Trait","    , ApiError = require(\"../../errors\").ApiError","    ;","","module.exports = function (codeMap) {","    if (!codeMap) {","        throw new ApiError(\"A status code to error messages object must be provided\");","    }","","    return Trait({","        statusCodeMap: codeMap","    });","};",""],"l":{"3":1,"8":1,"9":1,"10":0,"13":1}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/schedules-api.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/schedules-api.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"processAllSchedules","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":37}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":32},"end":{"line":26,"column":49}}},"3":{"name":"processScheduleResult","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":39}}},"4":{"name":"processDeletion","line":41,"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":33}}},"5":{"name":"validateUpdateResults","line":49,"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":39}}},"6":{"name":"(anonymous_6)","line":56,"loc":{"start":{"line":56,"column":19},"end":{"line":56,"column":36}}},"7":{"name":"(anonymous_7)","line":57,"loc":{"start":{"line":57,"column":43},"end":{"line":57,"column":63}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":21,"column":19}},"2":{"start":{"line":23,"column":0},"end":{"line":31,"column":1}},"3":{"start":{"line":24,"column":4},"end":{"line":24,"column":20}},"4":{"start":{"line":26,"column":4},"end":{"line":28,"column":7}},"5":{"start":{"line":27,"column":8},"end":{"line":27,"column":60}},"6":{"start":{"line":30,"column":4},"end":{"line":30,"column":18}},"7":{"start":{"line":33,"column":0},"end":{"line":39,"column":1}},"8":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"9":{"start":{"line":35,"column":8},"end":{"line":35,"column":65}},"10":{"start":{"line":38,"column":4},"end":{"line":38,"column":38}},"11":{"start":{"line":41,"column":0},"end":{"line":47,"column":1}},"12":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"13":{"start":{"line":43,"column":8},"end":{"line":43,"column":65}},"14":{"start":{"line":46,"column":4},"end":{"line":46,"column":16}},"15":{"start":{"line":49,"column":0},"end":{"line":74,"column":1}},"16":{"start":{"line":50,"column":4},"end":{"line":50,"column":25}},"17":{"start":{"line":52,"column":4},"end":{"line":54,"column":5}},"18":{"start":{"line":53,"column":8},"end":{"line":53,"column":65}},"19":{"start":{"line":56,"column":4},"end":{"line":72,"column":7}},"20":{"start":{"line":57,"column":8},"end":{"line":71,"column":11}},"21":{"start":{"line":69,"column":12},"end":{"line":69,"column":87}},"22":{"start":{"line":70,"column":12},"end":{"line":70,"column":37}},"23":{"start":{"line":73,"column":4},"end":{"line":73,"column":23}},"24":{"start":{"line":76,"column":0},"end":{"line":85,"column":2}},"25":{"start":{"line":87,"column":0},"end":{"line":97,"column":2}},"26":{"start":{"line":99,"column":0},"end":{"line":107,"column":2}},"27":{"start":{"line":109,"column":0},"end":{"line":119,"column":2}},"28":{"start":{"line":121,"column":0},"end":{"line":130,"column":2}},"29":{"start":{"line":133,"column":0},"end":{"line":139,"column":2}}},"branchMap":{"1":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"2":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"3":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]}},"code":["\"use strict\";","","//","// The Documented Phillips Hue Bridge API for schedules http://developers.meethue.com/3_schedulesapi.html","//","// This module wraps up all the functionality for the definition and basic processing of the parameters for the API","// so that it can be called from the httpPromise module.","//","// The benefits of keeping all this code here is that it is much simpler to update the keep in step with the Phillips","// Hue API documentation, than having it scatter piece meal through various other classes and functions.","//","","var Trait = require(\"traits\").Trait,","    deepExtend = require(\"deep-extend\"),","    tApiMethod = require(\"./traits/tApiMethod\"),","    tDescription = require(\"./traits/tDescription\"),","    tScheduleBody = require(\"./traits/tScheduleBody\"),","    tPostProcessing = require(\"./traits/tPostProcessing\"),","    ApiError = require(\"../errors\").ApiError,","    utils = require(\"../utils\"),","    apiTraits = {};","","function processAllSchedules(result) {","    var values = [];","","    Object.keys(result).forEach(function (value) {","        values.push(deepExtend({id: value}, result[value]));","    });","","    return values;","}","","function processScheduleResult(result) {","    if (!utils.wasSuccessful(result)) {","        throw new ApiError(utils.parseErrors(result).join(\", \"));","    }","","    return {id: result[0].success.id};","}","","function processDeletion(result) {","    if (!utils.wasSuccessful(result)) {","        throw new ApiError(utils.parseErrors(result).join(\", \"));","    }","","    return true;","}","","function validateUpdateResults(result) {","    var returnValue = {};","","    if (!utils.wasSuccessful(result)) {","        throw new ApiError(utils.parseErrors(result).join(\", \"));","    }","","    result.forEach(function (value) {","        Object.keys(value.success).forEach(function (keyValue) {","            // The time values being returned do not appear to be correct from the Bridge, it is almost like","            // they are in a transition state when the function returns the value, as such time values are not","            // going to be returned from this function for now.","            //","            // Name and description values appear to be correctly represented in the results, but commands are","            // typically cut short to just \"Updated\" so to cater for this variability I am just going to return","            // true for each value that was modified, and leave it up to the user to request the value it was","            // set to by re-querying the schedule.","            //","            // I have to trust that the Hue Bridge API will have set the values correctly when it reports","            // success otherwise they have some serious issues...","            var data = keyValue.substr(keyValue.lastIndexOf(\"/\") + 1, keyValue.length);","            returnValue[data] = true;","        });","    });","    return returnValue;","}","","apiTraits.getAllSchedules = Trait.compose(","    tApiMethod(","        \"/api/<username>/schedules\",","        \"GET\",","        \"1.0\",","        \"Whitelist\"","    ),","    tDescription(\"Gets a list of all schedules that have been added to the bridge.\"),","    tPostProcessing(processAllSchedules)",");","","apiTraits.createSchedule = Trait.compose(","    tApiMethod(","        \"/api/<username>/schedules\",","        \"POST\",","        \"1.0\",","        \"Whitelist\"","    ),","    tDescription(\"Allows the user to create new schedules. The bridge can store up to 100 schedules.\"),","    tScheduleBody(false),","    tPostProcessing(processScheduleResult)",");","","apiTraits.getSchedule = Trait.compose(","    tApiMethod(","        \"/api/<username>/schedules/<id>\",","        \"GET\",","        \"1.0\",","        \"Whitelist\"","    ),","    tDescription(\"Allows the user to change attributes of a schedule.\")",");","","apiTraits.setScheduleAttributes = Trait.compose(","    tApiMethod(","        \"/api/<username>/schedules/<id>\",","        \"PUT\",","        \"1.0\",","        \"Whitelist\"","    ),","    tDescription(\"Sets attributes for a schedule.\"),","    tScheduleBody(true),","    tPostProcessing(validateUpdateResults)",");","","apiTraits.deleteSchedule = Trait.compose(","    tApiMethod(","        \"/api/<username>/schedules/<id>\",","        \"DELETE\",","        \"1.0\",","        \"Whitelist\"","    ),","    tDescription(\"Deletes a schedule from the bridge.\"),","    tPostProcessing(processDeletion)",");","","","module.exports = {","    \"getAllSchedules\": Trait.create(Object.prototype, apiTraits.getAllSchedules),","    \"createSchedule\": Trait.create(Object.prototype, apiTraits.createSchedule),","    \"getSchedule\": Trait.create(Object.prototype, apiTraits.getSchedule),","    \"setScheduleAttributes\": Trait.create(Object.prototype, apiTraits.setScheduleAttributes),","    \"deleteSchedule\": Trait.create(Object.prototype, apiTraits.deleteSchedule)","};"],"l":{"13":1,"23":1,"24":0,"26":0,"27":0,"30":0,"33":1,"34":0,"35":0,"38":0,"41":1,"42":0,"43":0,"46":0,"49":1,"50":0,"52":0,"53":0,"56":0,"57":0,"69":0,"70":0,"73":0,"76":1,"87":1,"99":1,"109":1,"121":1,"133":1}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/traits/tScheduleBody.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/traits/tScheduleBody.js","s":{"1":1,"2":1,"3":2},"b":{"1":[1,1],"2":[1,1]},"f":{"1":2},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":17},"end":{"line":5,"column":40}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":49}},"2":{"start":{"line":5,"column":0},"end":{"line":17,"column":2}},"3":{"start":{"line":6,"column":4},"end":{"line":16,"column":6}}},"branchMap":{"1":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":85},"end":{"line":11,"column":89}},{"start":{"line":11,"column":92},"end":{"line":11,"column":97}}]},"2":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":74}},{"start":{"line":12,"column":77},"end":{"line":12,"column":82}}]}},"code":["\"use strict\";","","var tBodyArguments = require(\"./tBodyArguments\");","","module.exports = function (allOptional) {","    return tBodyArguments(","        \"application/json\",","        [","            {name: \"name\", type: \"string\", maxLength: 32, optional: true},","            {name: \"description\", type: \"string\", maxLength: 64, optional: true},","            {name: \"command\", type: \"string\", maxLength: 90, optional: allOptional ? true : false},","            {name: \"localtime\", type: \"time\", optional: allOptional ? true : false},","            {name: \"status\", type: \"string\", minLength: 5, maxlength: 16, optional: true},","            {name: \"autodelete\", type: \"boolean\", optional: true}","        ]","    );","};"],"l":{"3":1,"5":1,"6":2}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/scenes-api.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/scenes-api.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"processSceneResult","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":36}}},"2":{"name":"processResultObject","line":32,"loc":{"start":{"line":32,"column":2},"end":{"line":32,"column":44}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":29},"end":{"line":37,"column":44}}},"4":{"name":"validateUpdateResults","line":60,"loc":{"start":{"line":60,"column":0},"end":{"line":60,"column":39}}},"5":{"name":"(anonymous_5)","line":67,"loc":{"start":{"line":67,"column":17},"end":{"line":67,"column":34}}},"6":{"name":"(anonymous_6)","line":68,"loc":{"start":{"line":68,"column":39},"end":{"line":68,"column":59}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":22,"column":3}},"2":{"start":{"line":24,"column":0},"end":{"line":58,"column":1}},"3":{"start":{"line":25,"column":2},"end":{"line":26,"column":5}},"4":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"5":{"start":{"line":29,"column":4},"end":{"line":29,"column":61}},"6":{"start":{"line":32,"column":2},"end":{"line":49,"column":3}},"7":{"start":{"line":33,"column":4},"end":{"line":35,"column":7}},"8":{"start":{"line":37,"column":4},"end":{"line":44,"column":7}},"9":{"start":{"line":38,"column":6},"end":{"line":38,"column":52}},"10":{"start":{"line":39,"column":6},"end":{"line":39,"column":30}},"11":{"start":{"line":41,"column":6},"end":{"line":43,"column":7}},"12":{"start":{"line":42,"column":8},"end":{"line":42,"column":45}},"13":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"14":{"start":{"line":47,"column":6},"end":{"line":47,"column":31}},"15":{"start":{"line":51,"column":2},"end":{"line":55,"column":3}},"16":{"start":{"line":52,"column":4},"end":{"line":52,"column":40}},"17":{"start":{"line":54,"column":4},"end":{"line":54,"column":32}},"18":{"start":{"line":57,"column":2},"end":{"line":57,"column":18}},"19":{"start":{"line":60,"column":0},"end":{"line":74,"column":1}},"20":{"start":{"line":61,"column":2},"end":{"line":61,"column":23}},"21":{"start":{"line":63,"column":2},"end":{"line":65,"column":3}},"22":{"start":{"line":64,"column":4},"end":{"line":64,"column":61}},"23":{"start":{"line":67,"column":2},"end":{"line":72,"column":5}},"24":{"start":{"line":68,"column":4},"end":{"line":71,"column":7}},"25":{"start":{"line":69,"column":6},"end":{"line":69,"column":81}},"26":{"start":{"line":70,"column":6},"end":{"line":70,"column":31}},"27":{"start":{"line":73,"column":2},"end":{"line":73,"column":21}},"28":{"start":{"line":76,"column":0},"end":{"line":84,"column":2}},"29":{"start":{"line":86,"column":0},"end":{"line":106,"column":2}},"30":{"start":{"line":108,"column":0},"end":{"line":116,"column":2}},"31":{"start":{"line":118,"column":0},"end":{"line":126,"column":2}},"32":{"start":{"line":128,"column":0},"end":{"line":138,"column":2}},"33":{"start":{"line":141,"column":0},"end":{"line":151,"column":2}},"34":{"start":{"line":153,"column":0},"end":{"line":170,"column":2}},"35":{"start":{"line":172,"column":0},"end":{"line":179,"column":2}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"2":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":6},"end":{"line":41,"column":6}},{"start":{"line":41,"column":6},"end":{"line":41,"column":6}}]},"3":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"4":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":8},"end":{"line":46,"column":20}},{"start":{"line":46,"column":24},"end":{"line":46,"column":31}}]},"5":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]},"6":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]}},"code":["\"use strict\";","","//","// The Documented Phillips Hue Bridge API for scenes http://www.developers.meethue.com/documentation/scenes-api","//","// This module wraps up all the functionality for the definition and basic processing of the parameters for the API","// so that it can be called from the httpPromise module.","//","// The benefits of keeping all this code here is that it is much simpler to update the keep in step with the Phillips","// Hue API documentation, than having it scatter piece meal through various other classes and functions.","//","","var Trait = require(\"traits\").Trait","  , tApiMethod = require(\"./traits/tApiMethod\")","  , tDescription = require(\"./traits/tDescription\")","  , tPostProcessing = require(\"./traits/tPostProcessing\")","  , tLightStateBody = require(\"./traits/tLightStateBody\")","  , tBodyArguments = require(\"./traits/tBodyArguments\")","  , ApiError = require(\"../errors\").ApiError","  , utils = require(\"../utils\")","  , apiTraits = {}","  ;","","function processSceneResult(result) {","  var response = {}","    ;","","  if (!utils.wasSuccessful(result)) {","    throw new ApiError(utils.parseErrors(result).join(\", \"));","  }","","  function processResultObject(resultEntry) {","    var obj = resultEntry.success","      , idMatch = null","      ;","","    Object.keys(obj).forEach(function (key) {","      var id = key.substr(key.lastIndexOf(\"/\") + 1);","      response[id] = obj[key];","","      if (!idMatch) {","        idMatch = /scenes\\/(.*)\\//.exec(key);","      }","    });","","    if (!response.id && idMatch) {","      response.id = idMatch[1];","    }","  }","","  if (Array.isArray(result)) {","    result.forEach(processResultObject);","  } else {","    processResultObject(result);","  }","","  return response;","}","","function validateUpdateResults(result) {","  var returnValue = {};","","  if (!utils.wasSuccessful(result)) {","    throw new ApiError(utils.parseErrors(result).join(\", \"));","  }","","  result.forEach(function (value) {","    Object.keys(value.success).forEach(function (keyValue) {","      var data = keyValue.substr(keyValue.lastIndexOf(\"/\") + 1, keyValue.length);","      returnValue[data] = true;","    });","  });","  return returnValue;","}","","apiTraits.getAllScenes = Trait.compose(","  tApiMethod(","    \"/api/<username>/scenes\",","    \"GET\",","    \"1.1\",","    \"Whitelist\"","  ),","  tDescription(\"Gets a list of all scenes currently stored in the bridge. Scenes are represented by a scene id, a name and a list of lights which are part of the scene.\")",");","","apiTraits.createScene = Trait.compose(","  tApiMethod(","    \"/api/<username>/scenes\",","    \"POST\",","    \"1.11\",","    \"Whitelist\"","  ),","  tDescription(\"Creates the given scene with all lights in the provided lights resource. For a given scene the current light settings of the given lights resources are stored. If the scene id is recalled in the future, these light settings will be reproduced on these lamps. If an existing name is used then the settings for this scene will be overwritten and the light states resaved.\"),","  tBodyArguments(","    \"application/json\",","    [","      {name: \"name\", type: \"string\", optional: true},","      {name: \"lights\", type: \"list int\", optional: false},","      {name: \"transitiontime\", type: \"int\", optional: true},","      {name: \"recycle\", type: \"boolean\", optional: true},","      {name: \"appdata\", type: \"object\", optional: true},","      {name: \"picture\", type: \"hex\", optional: true}","    ]","  ),","  tPostProcessing(processSceneResult)",");","","apiTraits.getScene = Trait.compose(","  tApiMethod(","    \"/api/<username>/scenes/<id>\",","    \"GET\",","    \"1.11\",","    \"Whitelist\"","  ),","  tDescription(\"Gets the attributes of a given scene. Note that lightstates are displayed when an individual scene is retrieved (but not for all scenes).\")",");","","apiTraits.deleteScene = Trait.compose(","  tApiMethod(","    \"/api/<username>/scenes/<id>\",","    \"DELETE\",","    \"1.11\",","    \"Whitelist\"","  ),","  tDescription(\"Deletes a scene from the bridge. In bridge versions earlier than 1.11 scenes cannot be deleted from the bridge.\")",");","","apiTraits.modifyLightState = Trait.compose(","  tApiMethod(","    \"/api/<username>/scenes/<id>/lightstates/<lightId>\",","    \"PUT\",","    \"1.11\",","    \"Whitelist\"","  ),","  tDescription(\"Modifies or creates a new scene. Note that these states are not visible via any API calls, but stored in the lights themselves.\"),","  tLightStateBody(),","  tPostProcessing(validateUpdateResults)",");","","//TODO this is deprecated in 1.11.x","apiTraits.oldModifyLightState = Trait.compose(","  tApiMethod(","    \"/api/<username>/scenes/<id>/lights/<lightId>/state\",","    \"PUT\",","    \"1.1.1\",","    \"Whitelist\"","  ),","  tDescription(\"Modifies or creates a new scene. Note that these states are not visible via any API calls, but stored in the lights themselves.\"),","  tLightStateBody(),","  tPostProcessing(validateUpdateResults)",");","","apiTraits.modifyScene = Trait.compose(","  tApiMethod(","    \"/api/<username>/scenes/<id>\",","    \"PUT\",","    \"1.1.0\",","    \"Whitelist\"","  ),","  tDescription(\"Modifies or creates a new scene. Note that these states are not visible via any API calls, but stored in the lights themselves.\"),","  tBodyArguments(","    \"application/json\",","    [","      {name: \"name\", type: \"string\", optional: true},","      {name: \"lights\", type: \"list int\", optional: true},","      {name: \"storelightstate\", type: \"boolean\", optional: true}","    ]","  ),","  tPostProcessing(validateUpdateResults)",");","","module.exports = {","  getAllScenes: Trait.create(Object.prototype, apiTraits.getAllScenes),","  createScene: Trait.create(Object.prototype, apiTraits.createScene),","  modifyLightState: Trait.create(Object.prototype, apiTraits.modifyLightState),","  modifyScene: Trait.create(Object.prototype, apiTraits.modifyScene),","  getScene: Trait.create(Object.prototype, apiTraits.getScene),","  deleteScene: Trait.create(Object.prototype, apiTraits.deleteScene)","};"],"l":{"13":1,"24":1,"25":0,"28":0,"29":0,"32":1,"33":0,"37":0,"38":0,"39":0,"41":0,"42":0,"46":0,"47":0,"51":0,"52":0,"54":0,"57":0,"60":1,"61":0,"63":0,"64":0,"67":0,"68":0,"69":0,"70":0,"73":0,"76":1,"86":1,"108":1,"118":1,"128":1,"141":1,"153":1,"172":1}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/configuration-api.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/configuration-api.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"processUserCreation","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":37}}},"2":{"name":"processDeletionResults","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":40}}},"3":{"name":"processModificationResults","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":44}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":20,"column":19}},"2":{"start":{"line":23,"column":0},"end":{"line":25,"column":1}},"3":{"start":{"line":24,"column":4},"end":{"line":24,"column":38}},"4":{"start":{"line":27,"column":0},"end":{"line":32,"column":1}},"5":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"6":{"start":{"line":29,"column":8},"end":{"line":29,"column":65}},"7":{"start":{"line":31,"column":4},"end":{"line":31,"column":16}},"8":{"start":{"line":34,"column":0},"end":{"line":39,"column":1}},"9":{"start":{"line":35,"column":4},"end":{"line":37,"column":5}},"10":{"start":{"line":36,"column":8},"end":{"line":36,"column":65}},"11":{"start":{"line":38,"column":4},"end":{"line":38,"column":16}},"12":{"start":{"line":41,"column":0},"end":{"line":56,"column":2}},"13":{"start":{"line":58,"column":0},"end":{"line":66,"column":2}},"14":{"start":{"line":68,"column":0},"end":{"line":92,"column":2}},"15":{"start":{"line":94,"column":0},"end":{"line":103,"column":2}},"16":{"start":{"line":105,"column":0},"end":{"line":115,"column":2}},"17":{"start":{"line":117,"column":0},"end":{"line":123,"column":2}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]},"2":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":4}},{"start":{"line":35,"column":4},"end":{"line":35,"column":4}}]}},"code":["\"use strict\";","","//","// The Documented Phillips Hue Bridge API for configuration http://developers.meethue.com/4_configurationapi.html","//","// This module wraps up all the functionality for the definition and basic processing of the parameters for the API","// so that it can be called from the httpPromise module.","//","// The benefits of keeping all this code here is that it is much simpler to update the keep in step with the Phillips","// Hue API documentation, than having it scatter piece meal through various other classes and functions.","//","","var Trait = require(\"traits\").Trait,","    tApiMethod = require(\"./traits/tApiMethod\"),","    tDescription = require(\"./traits/tDescription\"),","    tBodyArguments = require(\"./traits/tBodyArguments\"),","    tPostProcessing = require(\"./traits/tPostProcessing\"),","    ApiError = require(\"../errors\").ApiError,","    utils = require(\"../utils\"),","    apiTraits = {};","","","function processUserCreation(result) {","    return result[0].success.username;","}","","function processDeletionResults(result) {","    if (!utils.wasSuccessful(result)) {","        throw new ApiError(utils.parseErrors(result).join(\", \"));","    }","    return true;","}","","function processModificationResults(result) {","    if (!utils.wasSuccessful(result)) {","        throw new ApiError(utils.parseErrors(result).join(\", \"));","    }","    return true;","}","","apiTraits.createUser = Trait.compose(","    tApiMethod(","        \"/api\",","        \"POST\",","        \"1.0\",","        \"All\"","    ),","    tDescription(\"Creates a new user. The link button on the bridge must be pressed and this command executed within 30 seconds.\"),","    tBodyArguments(","        \"application/json\",","        [","            {name: \"devicetype\", type: \"string\", maxLength: 40, optional: false}","        ]","    ),","    tPostProcessing(processUserCreation)",");","","apiTraits.getConfiguration = Trait.compose(","    tApiMethod(","        \"/api/<username>/config\",","        \"GET\",","        \"1.0\",","        \"Whitelist\"","    ),","    tDescription(\"Returns list of all configuration elements in the bridge. Note all times are stored in UTC.\")",");","","apiTraits.modifyConfiguration = Trait.compose(","    tApiMethod(","        \"/api/<username>/config\",","        \"PUT\",","        \"1.0\",","        \"Whitelist\"","    ),","    tDescription(\"Allows the user to set some configuration values.\"),","    tBodyArguments(","        \"application/json\",","        [","            {name: \"proxyport\", type: \"uint16\", optional: true},","            {name: \"name\", type: \"string\", minLength: 4, maxLength: 16, optional: true},","            {name: \"swupdate\", type: \"object\", optional: true},","            {name: \"proxyaddress\", type: \"string\", maxLength: 40, optional: true},","            {name: \"linkbutton\", type: \"boolean\", optional: true},","            {name: \"ipaddress\", type: \"string\", optional: true},","            {name: \"netmask\", type: \"string\", optional: true},","            {name: \"gateway\", type: \"string\", optional: true},","            {name: \"dhcp\", type: \"boolean\", optional: true},","            {name: \"portalservices\", type: \"boolean\", optional: true}","        ]","    ),","    tPostProcessing(processModificationResults)",");","","apiTraits.deleteUser = Trait.compose(","    tApiMethod(","        \"/api/<username>/config/whitelist/<username2>\",","        \"DELETE\",","        \"1.0\",","        \"Whitelist\"","    ),","    tDescription(\"Deletes the specified user <username2>, from the whitelist.\"),","    tPostProcessing(processDeletionResults)",");","","apiTraits.getFullState = Trait.compose(","    tApiMethod(","        \"/api/<username>\",","        \"GET\",","        \"1.0\",","        \"Whitelist\"","    ),","    tDescription(\"This command is used to fetch the entire datastore from the device, including settings and state \" +","    \"information for lights, groups, schedules and configuration. It should only be used sparingly as \" +","    \"it is resource intensive for the bridge, but is supplied e.g. for synchronization purposes.\")",");","","module.exports = {","    \"createUser\": Trait.create(Object.prototype, apiTraits.createUser),","    \"getConfiguration\": Trait.create(Object.prototype, apiTraits.getConfiguration),","    \"getFullState\": Trait.create(Object.prototype, apiTraits.getFullState),","    \"modifyConfiguration\": Trait.create(Object.prototype, apiTraits.modifyConfiguration),","    \"deleteUser\": Trait.create(Object.prototype, apiTraits.deleteUser)","};"],"l":{"13":1,"23":1,"24":0,"27":1,"28":0,"29":0,"31":0,"34":1,"35":0,"36":0,"38":0,"41":1,"58":1,"68":1,"94":1,"105":1,"117":1}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/info-api.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/commands/info-api.js","s":{"1":1,"2":1,"3":1,"4":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":16,"column":5}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":19}},"3":{"start":{"line":20,"column":0},"end":{"line":28,"column":2}},"4":{"start":{"line":30,"column":0},"end":{"line":32,"column":2}}},"branchMap":{},"code":["\"use strict\";","","//","// The Documented Phillips Hue Bridge API for groups http://www.developers.meethue.com/documentation/info-api","//","// This module wraps up all the functionality for the definition and basic processing of the parameters for the API","// so that it can be called from the httpPromise module.","//","// The benefits of keeping all this code here is that it is much simpler to update the keep in step with the Phillips","// Hue API documentation, than having it scatter piece meal through various other classes and functions.","//","","var Trait = require(\"traits\").Trait","    , tApiMethod = require(\"./traits/tApiMethod\")","    , tDescription = require(\"./traits/tDescription\")","    ;","","var apiTraits = {};","","apiTraits.getAllTimezones = Trait.compose(","    tApiMethod(","        \"/api/<username>/info/timezones\",","        \"GET\",","        \"1.2.1\",","        \"Whitelist\"","    ),","    tDescription(\"Allows the user to list all supported bridge timezones.\")",");","","module.exports = {","    getAllTimezones: Trait.create(Object.prototype, apiTraits.getAllTimezones)","};"],"l":{"13":1,"18":1,"20":1,"30":1}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/scheduledEvent.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/scheduledEvent.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":1,"27":0,"28":0,"29":1,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":1,"90":0,"91":0,"92":0,"93":0,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":1,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"fnMap":{"1":{"name":"(anonymous_1)","line":25,"loc":{"start":{"line":25,"column":15},"end":{"line":25,"column":27}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":24},"end":{"line":28,"column":36}}},"3":{"name":"(anonymous_3)","line":67,"loc":{"start":{"line":67,"column":24},"end":{"line":67,"column":40}}},"4":{"name":"(anonymous_4)","line":72,"loc":{"start":{"line":72,"column":24},"end":{"line":72,"column":40}}},"5":{"name":"(anonymous_5)","line":77,"loc":{"start":{"line":77,"column":26},"end":{"line":77,"column":42}}},"6":{"name":"(anonymous_6)","line":82,"loc":{"start":{"line":82,"column":38},"end":{"line":82,"column":53}}},"7":{"name":"(anonymous_7)","line":90,"loc":{"start":{"line":90,"column":37},"end":{"line":90,"column":53}}},"8":{"name":"(anonymous_8)","line":98,"loc":{"start":{"line":98,"column":47},"end":{"line":98,"column":62}}},"9":{"name":"(anonymous_9)","line":106,"loc":{"start":{"line":106,"column":30},"end":{"line":106,"column":46}}},"10":{"name":"(anonymous_10)","line":114,"loc":{"start":{"line":114,"column":37},"end":{"line":114,"column":60}}},"11":{"name":"(anonymous_11)","line":120,"loc":{"start":{"line":120,"column":33},"end":{"line":120,"column":52}}},"12":{"name":"(anonymous_12)","line":138,"loc":{"start":{"line":138,"column":38},"end":{"line":138,"column":57}}},"13":{"name":"_getTimeValue","line":152,"loc":{"start":{"line":152,"column":0},"end":{"line":152,"column":29}}},"14":{"name":"(anonymous_14)","line":160,"loc":{"start":{"line":160,"column":44},"end":{"line":160,"column":61}}},"15":{"name":"_convertNumberToHueTime","line":186,"loc":{"start":{"line":186,"column":0},"end":{"line":186,"column":41}}},"16":{"name":"_convertDateToHueTime","line":195,"loc":{"start":{"line":195,"column":0},"end":{"line":195,"column":37}}},"17":{"name":"_convertToDate","line":208,"loc":{"start":{"line":208,"column":0},"end":{"line":208,"column":29}}},"18":{"name":"_validateCommand","line":226,"loc":{"start":{"line":226,"column":0},"end":{"line":226,"column":41}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":6,"column":3}},"2":{"start":{"line":8,"column":0},"end":{"line":23,"column":4}},"3":{"start":{"line":25,"column":0},"end":{"line":26,"column":2}},"4":{"start":{"line":28,"column":0},"end":{"line":65,"column":2}},"5":{"start":{"line":29,"column":2},"end":{"line":30,"column":8}},"6":{"start":{"line":32,"column":2},"end":{"line":62,"column":3}},"7":{"start":{"line":33,"column":4},"end":{"line":33,"column":30}},"8":{"start":{"line":35,"column":4},"end":{"line":35,"column":23}},"9":{"start":{"line":36,"column":4},"end":{"line":61,"column":5}},"10":{"start":{"line":37,"column":6},"end":{"line":37,"column":21}},"11":{"start":{"line":39,"column":6},"end":{"line":39,"column":32}},"12":{"start":{"line":42,"column":6},"end":{"line":44,"column":7}},"13":{"start":{"line":43,"column":8},"end":{"line":43,"column":36}},"14":{"start":{"line":46,"column":6},"end":{"line":48,"column":7}},"15":{"start":{"line":47,"column":8},"end":{"line":47,"column":50}},"16":{"start":{"line":50,"column":6},"end":{"line":52,"column":7}},"17":{"start":{"line":51,"column":8},"end":{"line":51,"column":47}},"18":{"start":{"line":54,"column":6},"end":{"line":56,"column":7}},"19":{"start":{"line":55,"column":8},"end":{"line":55,"column":42}},"20":{"start":{"line":58,"column":6},"end":{"line":60,"column":7}},"21":{"start":{"line":59,"column":8},"end":{"line":59,"column":46}},"22":{"start":{"line":64,"column":2},"end":{"line":64,"column":18}},"23":{"start":{"line":67,"column":0},"end":{"line":70,"column":2}},"24":{"start":{"line":68,"column":2},"end":{"line":68,"column":43}},"25":{"start":{"line":69,"column":2},"end":{"line":69,"column":14}},"26":{"start":{"line":72,"column":0},"end":{"line":75,"column":2}},"27":{"start":{"line":73,"column":2},"end":{"line":73,"column":43}},"28":{"start":{"line":74,"column":2},"end":{"line":74,"column":14}},"29":{"start":{"line":77,"column":0},"end":{"line":80,"column":2}},"30":{"start":{"line":78,"column":2},"end":{"line":78,"column":43}},"31":{"start":{"line":79,"column":2},"end":{"line":79,"column":14}},"32":{"start":{"line":82,"column":0},"end":{"line":88,"column":2}},"33":{"start":{"line":83,"column":2},"end":{"line":87,"column":3}},"34":{"start":{"line":84,"column":4},"end":{"line":84,"column":43}},"35":{"start":{"line":86,"column":4},"end":{"line":86,"column":97}},"36":{"start":{"line":90,"column":0},"end":{"line":96,"column":2}},"37":{"start":{"line":91,"column":2},"end":{"line":95,"column":3}},"38":{"start":{"line":92,"column":4},"end":{"line":92,"column":43}},"39":{"start":{"line":94,"column":4},"end":{"line":94,"column":96}},"40":{"start":{"line":98,"column":0},"end":{"line":104,"column":2}},"41":{"start":{"line":99,"column":2},"end":{"line":103,"column":3}},"42":{"start":{"line":100,"column":4},"end":{"line":100,"column":43}},"43":{"start":{"line":102,"column":4},"end":{"line":102,"column":107}},"44":{"start":{"line":106,"column":0},"end":{"line":112,"column":2}},"45":{"start":{"line":108,"column":2},"end":{"line":108,"column":23}},"46":{"start":{"line":110,"column":2},"end":{"line":110,"column":73}},"47":{"start":{"line":111,"column":2},"end":{"line":111,"column":14}},"48":{"start":{"line":114,"column":0},"end":{"line":118,"column":2}},"49":{"start":{"line":116,"column":2},"end":{"line":116,"column":78}},"50":{"start":{"line":117,"column":2},"end":{"line":117,"column":14}},"51":{"start":{"line":120,"column":0},"end":{"line":136,"column":2}},"52":{"start":{"line":121,"column":2},"end":{"line":122,"column":25}},"53":{"start":{"line":126,"column":2},"end":{"line":130,"column":3}},"54":{"start":{"line":127,"column":4},"end":{"line":127,"column":40}},"55":{"start":{"line":129,"column":4},"end":{"line":129,"column":28}},"56":{"start":{"line":132,"column":2},"end":{"line":132,"column":34}},"57":{"start":{"line":134,"column":2},"end":{"line":134,"column":50}},"58":{"start":{"line":135,"column":2},"end":{"line":135,"column":14}},"59":{"start":{"line":138,"column":0},"end":{"line":150,"column":2}},"60":{"start":{"line":139,"column":2},"end":{"line":139,"column":12}},"61":{"start":{"line":141,"column":2},"end":{"line":147,"column":3}},"62":{"start":{"line":142,"column":4},"end":{"line":142,"column":22}},"63":{"start":{"line":143,"column":9},"end":{"line":147,"column":3}},"64":{"start":{"line":144,"column":4},"end":{"line":144,"column":23}},"65":{"start":{"line":146,"column":4},"end":{"line":146,"column":45}},"66":{"start":{"line":149,"column":2},"end":{"line":149,"column":39}},"67":{"start":{"line":152,"column":0},"end":{"line":184,"column":1}},"68":{"start":{"line":153,"column":2},"end":{"line":156,"column":5}},"69":{"start":{"line":158,"column":2},"end":{"line":176,"column":3}},"70":{"start":{"line":160,"column":4},"end":{"line":164,"column":7}},"71":{"start":{"line":161,"column":6},"end":{"line":163,"column":7}},"72":{"start":{"line":162,"column":8},"end":{"line":162,"column":25}},"73":{"start":{"line":166,"column":4},"end":{"line":169,"column":5}},"74":{"start":{"line":168,"column":6},"end":{"line":168,"column":39}},"75":{"start":{"line":170,"column":9},"end":{"line":176,"column":3}},"76":{"start":{"line":171,"column":4},"end":{"line":171,"column":46}},"77":{"start":{"line":172,"column":9},"end":{"line":176,"column":3}},"78":{"start":{"line":173,"column":4},"end":{"line":175,"column":5}},"79":{"start":{"line":174,"column":6},"end":{"line":174,"column":57}},"80":{"start":{"line":178,"column":2},"end":{"line":180,"column":3}},"81":{"start":{"line":179,"column":4},"end":{"line":179,"column":68}},"82":{"start":{"line":182,"column":2},"end":{"line":182,"column":31}},"83":{"start":{"line":183,"column":2},"end":{"line":183,"column":16}},"84":{"start":{"line":186,"column":0},"end":{"line":193,"column":1}},"85":{"start":{"line":187,"column":2},"end":{"line":187,"column":20}},"86":{"start":{"line":189,"column":2},"end":{"line":191,"column":3}},"87":{"start":{"line":190,"column":4},"end":{"line":190,"column":53}},"88":{"start":{"line":192,"column":2},"end":{"line":192,"column":16}},"89":{"start":{"line":195,"column":0},"end":{"line":206,"column":1}},"90":{"start":{"line":196,"column":2},"end":{"line":198,"column":5}},"91":{"start":{"line":200,"column":2},"end":{"line":203,"column":3}},"92":{"start":{"line":201,"column":4},"end":{"line":201,"column":24}},"93":{"start":{"line":202,"column":4},"end":{"line":202,"column":51}},"94":{"start":{"line":205,"column":2},"end":{"line":205,"column":16}},"95":{"start":{"line":208,"column":0},"end":{"line":218,"column":1}},"96":{"start":{"line":209,"column":2},"end":{"line":211,"column":5}},"97":{"start":{"line":213,"column":2},"end":{"line":215,"column":3}},"98":{"start":{"line":214,"column":4},"end":{"line":214,"column":43}},"99":{"start":{"line":217,"column":2},"end":{"line":217,"column":16}},"100":{"start":{"line":226,"column":0},"end":{"line":256,"column":1}},"101":{"start":{"line":227,"column":2},"end":{"line":229,"column":9}},"102":{"start":{"line":231,"column":2},"end":{"line":255,"column":3}},"103":{"start":{"line":232,"column":4},"end":{"line":232,"column":36}},"104":{"start":{"line":233,"column":4},"end":{"line":241,"column":5}},"105":{"start":{"line":235,"column":6},"end":{"line":235,"column":46}},"106":{"start":{"line":236,"column":6},"end":{"line":238,"column":7}},"107":{"start":{"line":237,"column":8},"end":{"line":237,"column":106}},"108":{"start":{"line":240,"column":6},"end":{"line":240,"column":77}},"109":{"start":{"line":244,"column":4},"end":{"line":244,"column":34}},"110":{"start":{"line":245,"column":4},"end":{"line":247,"column":5}},"111":{"start":{"line":246,"column":6},"end":{"line":246,"column":67}},"112":{"start":{"line":249,"column":4},"end":{"line":249,"column":30}},"113":{"start":{"line":250,"column":4},"end":{"line":252,"column":5}},"114":{"start":{"line":251,"column":6},"end":{"line":251,"column":74}},"115":{"start":{"line":254,"column":4},"end":{"line":254,"column":56}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"2":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":4}},{"start":{"line":36,"column":4},"end":{"line":36,"column":4}}]},"3":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":6},"end":{"line":42,"column":6}},{"start":{"line":42,"column":6},"end":{"line":42,"column":6}}]},"4":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":6},"end":{"line":46,"column":6}},{"start":{"line":46,"column":6},"end":{"line":46,"column":6}}]},"5":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":6},"end":{"line":50,"column":6}},{"start":{"line":50,"column":6},"end":{"line":50,"column":6}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":10},"end":{"line":50,"column":18}},{"start":{"line":50,"column":22},"end":{"line":50,"column":35}}]},"7":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":20},"end":{"line":51,"column":28}},{"start":{"line":51,"column":32},"end":{"line":51,"column":45}}]},"8":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":6},"end":{"line":54,"column":6}},{"start":{"line":54,"column":6},"end":{"line":54,"column":6}}]},"9":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":6},"end":{"line":58,"column":6}},{"start":{"line":58,"column":6},"end":{"line":58,"column":6}}]},"10":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":2},"end":{"line":83,"column":2}},{"start":{"line":83,"column":2},"end":{"line":83,"column":2}}]},"11":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":2},"end":{"line":91,"column":2}},{"start":{"line":91,"column":2},"end":{"line":91,"column":2}}]},"12":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":2},"end":{"line":99,"column":2}},{"start":{"line":99,"column":2},"end":{"line":99,"column":2}}]},"13":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":2},"end":{"line":126,"column":2}},{"start":{"line":126,"column":2},"end":{"line":126,"column":2}}]},"14":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":2},"end":{"line":141,"column":2}},{"start":{"line":141,"column":2},"end":{"line":141,"column":2}}]},"15":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":9},"end":{"line":143,"column":9}},{"start":{"line":143,"column":9},"end":{"line":143,"column":9}}]},"16":{"line":146,"type":"cond-expr","locations":[{"start":{"line":146,"column":22},"end":{"line":146,"column":31}},{"start":{"line":146,"column":34},"end":{"line":146,"column":44}}]},"17":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":2},"end":{"line":158,"column":2}},{"start":{"line":158,"column":2},"end":{"line":158,"column":2}}]},"18":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":6},"end":{"line":161,"column":6}},{"start":{"line":161,"column":6},"end":{"line":161,"column":6}}]},"19":{"line":161,"type":"binary-expr","locations":[{"start":{"line":161,"column":10},"end":{"line":161,"column":20}},{"start":{"line":161,"column":24},"end":{"line":161,"column":60}}]},"20":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":4},"end":{"line":166,"column":4}},{"start":{"line":166,"column":4},"end":{"line":166,"column":4}}]},"21":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":9},"end":{"line":170,"column":9}},{"start":{"line":170,"column":9},"end":{"line":170,"column":9}}]},"22":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":9},"end":{"line":172,"column":9}},{"start":{"line":172,"column":9},"end":{"line":172,"column":9}}]},"23":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":173,"column":4}},{"start":{"line":173,"column":4},"end":{"line":173,"column":4}}]},"24":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":2},"end":{"line":178,"column":2}},{"start":{"line":178,"column":2},"end":{"line":178,"column":2}}]},"25":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":2},"end":{"line":189,"column":2}},{"start":{"line":189,"column":2},"end":{"line":189,"column":2}}]},"26":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":2},"end":{"line":200,"column":2}},{"start":{"line":200,"column":2},"end":{"line":200,"column":2}}]},"27":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":2},"end":{"line":213,"column":2}},{"start":{"line":213,"column":2},"end":{"line":213,"column":2}}]},"28":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":2},"end":{"line":231,"column":2}},{"start":{"line":231,"column":2},"end":{"line":231,"column":2}}]},"29":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":4},"end":{"line":233,"column":4}},{"start":{"line":233,"column":4},"end":{"line":233,"column":4}}]},"30":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":6},"end":{"line":236,"column":6}},{"start":{"line":236,"column":6},"end":{"line":236,"column":6}}]},"31":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":4},"end":{"line":245,"column":4}},{"start":{"line":245,"column":4},"end":{"line":245,"column":4}}]},"32":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":4},"end":{"line":250,"column":4}},{"start":{"line":250,"column":4},"end":{"line":250,"column":4}}]}},"code":["\"use strict\";","","var util = require(\"util\")","  , utils = require(\"./utils\")","  , errors = require(\"./errors\")","  ;","","var patterns = {","    time: \"\\\\d{2}:\\\\d{2}:\\\\d{2}\",","    weekday: \"W[0-9]{1,3}\",","    date: \"\\\\d{4}-\\\\d{2}-\\\\d{2}\"","  },","  regularExpressions = {","    absolute: new RegExp(util.format(\"%sT%s\", patterns.date, patterns.time)),","    randomized: new RegExp(util.format(\"%sT%sA%s\", patterns.date, patterns.time, patterns.time)),","    recurring: new RegExp(util.format(\"%s\\/T%s\", patterns.weekday, patterns.time)),","    recurringRandomized: new RegExp(util.format(\"%s\\/T%sA%s\", patterns.weekday, patterns.time, patterns.time)),","    timer: new RegExp(util.format(\"PT%s\", patterns.time)),","    timerRandom: new RegExp(util.format(\"PT%sA%s\", patterns.time, patterns.time)),","    timerRecurringCount: new RegExp(util.format(\"R\\\\d{2}\\/PT%s\", patterns.time)),","    timerRecurring: new RegExp(util.format(\"R\\/PT%s\", patterns.time)),","    timerRecurringCountRandom: new RegExp(util.format(\"R\\\\d{2}\\/PT%sA%s\", patterns.time, patterns.time))","  };","","var Schedule = function () {","};","","module.exports.create = function () {","  var schedule,","    arg;","","  if (arguments.length == 0) {","    schedule = new Schedule();","  } else {","    arg = arguments[0];","    if (arg instanceof Schedule) {","      schedule = arg;","    } else {","      schedule = new Schedule();","","      // try to populate the new schedule using any values that match schedule properties","      if (arg.name) {","        schedule.withName(arg.name);","      }","","      if (arg.description) {","        schedule.withDescription(arg.description);","      }","","      if (arg.time || arg.localtime) {","        schedule.at(arg.time || arg.localtime);","      }","","      if (arg.command) {","        schedule.withCommand(arg.command);","      }","","      if (arg.status) {","        schedule.withEnabledState(arg.status);","      }","    }","  }","","  return schedule;","};","","Schedule.prototype.at = function (time) {","  utils.combine(this, _getTimeValue(time));","  return this;","};","","Schedule.prototype.on = function (time) {","  utils.combine(this, _getTimeValue(time));","  return this;","};","","Schedule.prototype.when = function (time) {","  utils.combine(this, _getTimeValue(time));","  return this;","};","","Schedule.prototype.atRandomizedTime = function(time) {","  if (regularExpressions.randomized.test(time)) {","    utils.combine(this, {localtime: time});","  } else {","    throw new errors.ApiError(util.format(\"Time '%s' is not correct for randomized time\", time));","  }","};","","Schedule.prototype.atRecurringTime = function (time) {","  if (regularExpressions.recurring.test(time)) {","    utils.combine(this, {localtime: time});","  } else {","    throw new errors.ApiError(util.format(\"Time '%s' is not correct for recurring time\", time));","  }","};","","Schedule.prototype.atRecurringRandomizedTime = function(time) {","  if (regularExpressions.recurringRandomized.test(time)) {","    utils.combine(this, {localtime: time});","  } else {","    throw new errors.ApiError(util.format(\"Time '%s' is not correct for recurring randomized time\", time));","  }","};","","Schedule.prototype.withName = function (name) {","  // The 1.0 API only accepts up to 32 characters for the name","  var nameCharMax = 32;","","  utils.combine(this, {\"name\": utils.getStringValue(name, nameCharMax)});","  return this;","};","","Schedule.prototype.withDescription = function (description) {","  // The 1.0 API only accepts up to 64 characters for the description","  utils.combine(this, {\"description\": utils.getStringValue(description, 64)});","  return this;","};","","Schedule.prototype.withCommand = function (command) {","  var type = typeof(command),","    commandObject = null;","","  // The command is limited to 90 characters, so if a string is passed, convert it to an object and back into JSON.","","  if (type === \"string\") {","    commandObject = JSON.parse(command);","  } else {","    commandObject = command;","  }","","  _validateCommand(commandObject);","","  utils.combine(this, {\"command\": commandObject});","  return this;","};","","Schedule.prototype.withEnabledState = function (enabled) {","  var state;","","  if (enabled === \"enabled\") {","    state = \"enabled\";","  } else if (enabled === \"disabled\") {","    state = \"disabled\";","  } else {","    state = enabled ? \"enabled\" : \"disabled\";","  }","","  utils.combine(this, {status: state});","};","","function _getTimeValue(time) {","  var result = {}","    , type = typeof time","    , timeValue = null","    ;","","  if (type === 'string') {","    // Check the string against all known patterns","    Object.keys(regularExpressions).forEach(function (regex) {","      if (!timeValue && regularExpressions[regex].test(time)) {","        timeValue = time;","      }","    });","","    if (!timeValue) {","      // We don't have a match, but it may still be a valid time, so attempt to parse it","      timeValue = _convertToDate(time);","    }","  } else if (type === 'number') {","    timeValue = _convertNumberToHueTime(time);","  } else if (type === 'object') {","    if (time instanceof Date) {","      timeValue = _convertNumberToHueTime(time.getTime())","    }","  }","","  if (timeValue === null) {","    throw new errors.ApiError(\"Invalid time value, '\" + time + \"'\");","  }","","  result.localtime = timeValue;","  return result;","}","","function _convertNumberToHueTime(number) {","  var result = null;","","  if (!isNaN(number)) {","    result = _convertDateToHueTime(new Date(number));","  }","  return result;","}","","function _convertDateToHueTime(date) {","  var result = null","    , str","    ;","","  if (date) {","    str = date.toJSON();","    result = str.substring(0, str.lastIndexOf(\".\"))","  }","","  return result;","}","","function _convertToDate(str) {","  var result = null","    , time = Date.parse(str)","    ;","","  if (!isNaN(time)) {","    result = _convertNumberToHueTime(time);","  }","","  return result;","}","","/**"," * Perform validation on a command object to verify it can be considered valid."," * @param commandObject the object representing the command to be validated."," * @throws {ApiError} if a problem is encountered with the command"," * @private"," */","function _validateCommand(commandObject) {","  var address,","    method,","    body;","","  if (commandObject) {","    address = commandObject.address;","    if (address) {","      //TODO expand the regex to match proper end points valid for schedules","      var addressPattern = /^\\/api\\/\\.*\\/\\.*/;","      if (addressPattern.test(address)) {","        throw new errors.ApiError(\"The 'address' property must begin with '/api' to be a valid endpoint\");","      }","    } else {","      throw new errors.ApiError(\"The 'address' property must be specified.\");","    }","","    //TODO link this with the valid endpoints in the address","    method = commandObject.method;","    if (!commandObject.method) {","      throw new errors.ApiError(\"The 'method' must be specified.\");","    }","","    body = commandObject.body;","    if (!commandObject.body) {","      throw new errors.ApiError(\"The 'body' property must be specified.\");","    }","  } else {","    throw new errors.ApiError(\"Command is not defined\");","  }","}"],"l":{"3":1,"8":1,"25":1,"28":1,"29":0,"32":0,"33":0,"35":0,"36":0,"37":0,"39":0,"42":0,"43":0,"46":0,"47":0,"50":0,"51":0,"54":0,"55":0,"58":0,"59":0,"64":0,"67":1,"68":0,"69":0,"72":1,"73":0,"74":0,"77":1,"78":0,"79":0,"82":1,"83":0,"84":0,"86":0,"90":1,"91":0,"92":0,"94":0,"98":1,"99":0,"100":0,"102":0,"106":1,"108":0,"110":0,"111":0,"114":1,"116":0,"117":0,"120":1,"121":0,"126":0,"127":0,"129":0,"132":0,"134":0,"135":0,"138":1,"139":0,"141":0,"142":0,"143":0,"144":0,"146":0,"149":0,"152":1,"153":0,"158":0,"160":0,"161":0,"162":0,"166":0,"168":0,"170":0,"171":0,"172":0,"173":0,"174":0,"178":0,"179":0,"182":0,"183":0,"186":1,"187":0,"189":0,"190":0,"192":0,"195":1,"196":0,"200":0,"201":0,"202":0,"205":0,"208":1,"209":0,"213":0,"214":0,"217":0,"226":1,"227":0,"231":0,"232":0,"233":0,"235":0,"236":0,"237":0,"240":0,"244":0,"245":0,"246":0,"249":0,"250":0,"251":0,"254":0}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/lightstate.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/lightstate.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":1,"17":0,"18":1,"19":0,"20":0,"21":1,"22":1,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":1,"30":0,"31":1,"32":0,"33":0,"34":1,"35":0,"36":0,"37":1,"38":0,"39":0,"40":1,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":1,"53":0,"54":0,"55":1,"56":0,"57":0,"58":1,"59":0,"60":0,"61":1,"62":0,"63":0,"64":1,"65":0,"66":0,"67":1,"68":0,"69":0,"70":1,"71":0,"72":0,"73":1,"74":0,"75":0,"76":1,"77":0,"78":0,"79":1,"80":1,"81":0,"82":0,"83":1,"84":1,"85":0,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":0,"99":1,"100":1,"101":0,"102":1,"103":1,"104":0,"105":1,"106":1,"107":1,"108":0,"109":1,"110":1,"111":1,"112":0,"113":1,"114":0,"115":1,"116":0,"117":1,"118":0,"119":1,"120":0,"121":0,"122":1,"123":0,"124":0,"125":1,"126":0,"127":1,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":1,"135":0,"136":1,"137":0,"138":1,"139":1,"140":1,"141":1,"142":0,"143":0,"144":0,"145":0,"146":0,"147":1,"148":0,"149":0,"150":0,"151":1,"152":0,"153":0,"154":0,"155":1,"156":0,"157":0,"158":0,"159":1,"160":0,"161":1,"162":0,"163":1,"164":0,"165":1,"166":0,"167":1,"168":0,"169":1,"170":0,"171":1,"172":0,"173":1,"174":0,"175":1,"176":0,"177":1,"178":0,"179":1,"180":0,"181":1,"182":0,"183":1,"184":0,"185":1,"186":0,"187":0,"188":0,"189":0,"190":1,"191":0,"192":1,"193":0,"194":1,"195":0,"196":0,"197":0,"198":0,"199":1,"200":0,"201":0,"202":1,"203":0,"204":0,"205":1,"206":0,"207":0,"208":1,"209":0,"210":0,"211":1,"212":0,"213":0,"214":1,"215":0,"216":0,"217":1,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":1,"225":0,"226":1,"227":0,"228":1,"229":0,"230":0,"231":0,"232":0,"233":1,"234":0,"235":0,"236":1,"237":0,"238":0,"239":1,"240":0,"241":0,"242":1,"243":0,"244":0,"245":1,"246":0,"247":0,"248":1,"249":0,"250":0,"251":1,"252":0,"253":0,"254":1,"255":0,"256":0,"257":0,"258":0,"259":0,"260":1,"261":0,"262":0,"263":0,"264":0,"265":1,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":1,"274":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0],"18":[0,0],"19":[0,0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":14},"end":{"line":10,"column":26}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":24},"end":{"line":22,"column":42}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":36},"end":{"line":27,"column":53}}},"4":{"name":"(anonymous_4)","line":43,"loc":{"start":{"line":43,"column":30},"end":{"line":43,"column":45}}},"5":{"name":"(anonymous_5)","line":47,"loc":{"start":{"line":47,"column":26},"end":{"line":47,"column":38}}},"6":{"name":"(anonymous_6)","line":55,"loc":{"start":{"line":55,"column":24},"end":{"line":55,"column":36}}},"7":{"name":"(anonymous_7)","line":65,"loc":{"start":{"line":65,"column":23},"end":{"line":65,"column":35}}},"8":{"name":"(anonymous_8)","line":76,"loc":{"start":{"line":76,"column":25},"end":{"line":76,"column":43}}},"9":{"name":"(anonymous_9)","line":81,"loc":{"start":{"line":81,"column":27},"end":{"line":81,"column":39}}},"10":{"name":"(anonymous_10)","line":90,"loc":{"start":{"line":90,"column":21},"end":{"line":90,"column":35}}},"11":{"name":"(anonymous_11)","line":100,"loc":{"start":{"line":100,"column":22},"end":{"line":100,"column":39}}},"12":{"name":"(anonymous_12)","line":110,"loc":{"start":{"line":110,"column":22},"end":{"line":110,"column":37}}},"13":{"name":"(anonymous_13)","line":120,"loc":{"start":{"line":120,"column":22},"end":{"line":120,"column":44}}},"14":{"name":"(anonymous_14)","line":131,"loc":{"start":{"line":131,"column":21},"end":{"line":131,"column":37}}},"15":{"name":"(anonymous_15)","line":147,"loc":{"start":{"line":147,"column":21},"end":{"line":147,"column":42}}},"16":{"name":"(anonymous_16)","line":157,"loc":{"start":{"line":157,"column":24},"end":{"line":157,"column":41}}},"17":{"name":"(anonymous_17)","line":167,"loc":{"start":{"line":167,"column":25},"end":{"line":167,"column":42}}},"18":{"name":"(anonymous_18)","line":177,"loc":{"start":{"line":177,"column":33},"end":{"line":177,"column":50}}},"19":{"name":"(anonymous_19)","line":187,"loc":{"start":{"line":187,"column":26},"end":{"line":187,"column":43}}},"20":{"name":"(anonymous_20)","line":197,"loc":{"start":{"line":197,"column":26},"end":{"line":197,"column":43}}},"21":{"name":"(anonymous_21)","line":207,"loc":{"start":{"line":207,"column":26},"end":{"line":207,"column":43}}},"22":{"name":"(anonymous_22)","line":217,"loc":{"start":{"line":217,"column":25},"end":{"line":217,"column":42}}},"23":{"name":"(anonymous_23)","line":227,"loc":{"start":{"line":227,"column":25},"end":{"line":227,"column":42}}},"24":{"name":"(anonymous_24)","line":232,"loc":{"start":{"line":232,"column":24},"end":{"line":232,"column":41}}},"25":{"name":"(anonymous_25)","line":243,"loc":{"start":{"line":243,"column":22},"end":{"line":243,"column":34}}},"26":{"name":"(anonymous_26)","line":254,"loc":{"start":{"line":254,"column":29},"end":{"line":254,"column":51}}},"27":{"name":"(anonymous_27)","line":274,"loc":{"start":{"line":274,"column":29},"end":{"line":274,"column":51}}},"28":{"name":"(anonymous_28)","line":280,"loc":{"start":{"line":280,"column":29},"end":{"line":280,"column":41}}},"29":{"name":"(anonymous_29)","line":285,"loc":{"start":{"line":285,"column":28},"end":{"line":285,"column":40}}},"30":{"name":"(anonymous_30)","line":296,"loc":{"start":{"line":296,"column":29},"end":{"line":296,"column":53}}},"31":{"name":"(anonymous_31)","line":302,"loc":{"start":{"line":302,"column":33},"end":{"line":302,"column":45}}},"32":{"name":"(anonymous_32)","line":306,"loc":{"start":{"line":306,"column":33},"end":{"line":306,"column":45}}},"33":{"name":"(anonymous_33)","line":310,"loc":{"start":{"line":310,"column":36},"end":{"line":310,"column":48}}},"34":{"name":"(anonymous_34)","line":314,"loc":{"start":{"line":314,"column":36},"end":{"line":314,"column":48}}},"35":{"name":"(anonymous_35)","line":324,"loc":{"start":{"line":324,"column":24},"end":{"line":324,"column":63}}},"36":{"name":"(anonymous_36)","line":336,"loc":{"start":{"line":336,"column":22},"end":{"line":336,"column":61}}},"37":{"name":"(anonymous_37)","line":356,"loc":{"start":{"line":356,"column":22},"end":{"line":356,"column":61}}},"38":{"name":"(anonymous_38)","line":373,"loc":{"start":{"line":373,"column":22},"end":{"line":373,"column":41}}},"39":{"name":"(anonymous_39)","line":395,"loc":{"start":{"line":395,"column":25},"end":{"line":395,"column":37}}},"40":{"name":"(anonymous_40)","line":399,"loc":{"start":{"line":399,"column":28},"end":{"line":399,"column":40}}},"41":{"name":"(anonymous_41)","line":414,"loc":{"start":{"line":414,"column":27},"end":{"line":414,"column":46}}},"42":{"name":"(anonymous_42)","line":427,"loc":{"start":{"line":427,"column":29},"end":{"line":427,"column":41}}},"43":{"name":"(anonymous_43)","line":430,"loc":{"start":{"line":430,"column":51},"end":{"line":430,"column":73}}},"44":{"name":"(anonymous_44)","line":435,"loc":{"start":{"line":435,"column":32},"end":{"line":435,"column":44}}},"45":{"name":"(anonymous_45)","line":438,"loc":{"start":{"line":438,"column":51},"end":{"line":438,"column":66}}},"46":{"name":"_getOnState","line":447,"loc":{"start":{"line":447,"column":0},"end":{"line":447,"column":28}}},"47":{"name":"_getBriState","line":457,"loc":{"start":{"line":457,"column":0},"end":{"line":457,"column":29}}},"48":{"name":"_getHueState","line":463,"loc":{"start":{"line":463,"column":0},"end":{"line":463,"column":29}}},"49":{"name":"_getSatState","line":469,"loc":{"start":{"line":469,"column":0},"end":{"line":469,"column":29}}},"50":{"name":"_getXYState","line":475,"loc":{"start":{"line":475,"column":0},"end":{"line":475,"column":27}}},"51":{"name":"_getCtState","line":481,"loc":{"start":{"line":481,"column":0},"end":{"line":481,"column":28}}},"52":{"name":"_getAlertState","line":487,"loc":{"start":{"line":487,"column":0},"end":{"line":487,"column":31}}},"53":{"name":"_getEffectState","line":493,"loc":{"start":{"line":493,"column":0},"end":{"line":493,"column":32}}},"54":{"name":"_getTransitionState","line":499,"loc":{"start":{"line":499,"column":0},"end":{"line":499,"column":36}}},"55":{"name":"_getBrightnessIncrementState","line":505,"loc":{"start":{"line":505,"column":0},"end":{"line":505,"column":45}}},"56":{"name":"_getSaturationIncrementState","line":511,"loc":{"start":{"line":511,"column":0},"end":{"line":511,"column":45}}},"57":{"name":"_getHueIncrementState","line":517,"loc":{"start":{"line":517,"column":0},"end":{"line":517,"column":38}}},"58":{"name":"_getCtIncrementState","line":523,"loc":{"start":{"line":523,"column":0},"end":{"line":523,"column":37}}},"59":{"name":"_getXYIncrementState","line":529,"loc":{"start":{"line":529,"column":0},"end":{"line":529,"column":37}}},"60":{"name":"_getSceneId","line":535,"loc":{"start":{"line":535,"column":0},"end":{"line":535,"column":28}}},"61":{"name":"_getWhiteState","line":544,"loc":{"start":{"line":544,"column":0},"end":{"line":544,"column":47}}},"62":{"name":"_convertHueToHueValue","line":554,"loc":{"start":{"line":554,"column":0},"end":{"line":554,"column":36}}},"63":{"name":"_convertMilliSecondsToTransitionTime","line":558,"loc":{"start":{"line":558,"column":0},"end":{"line":558,"column":53}}},"64":{"name":"_getTransitionTimeValue","line":569,"loc":{"start":{"line":569,"column":0},"end":{"line":569,"column":40}}},"65":{"name":"_getBrightnessIncrementValue","line":574,"loc":{"start":{"line":574,"column":0},"end":{"line":574,"column":45}}},"66":{"name":"_getSaturationIncrementValue","line":579,"loc":{"start":{"line":579,"column":0},"end":{"line":579,"column":45}}},"67":{"name":"_getHueIncrementValue","line":584,"loc":{"start":{"line":584,"column":0},"end":{"line":584,"column":38}}},"68":{"name":"_getCtIncrementValue","line":589,"loc":{"start":{"line":589,"column":0},"end":{"line":589,"column":37}}},"69":{"name":"_getXYIncrementValue","line":594,"loc":{"start":{"line":594,"column":0},"end":{"line":594,"column":37}}},"70":{"name":"convertPercentToValue","line":599,"loc":{"start":{"line":599,"column":0},"end":{"line":599,"column":52}}},"71":{"name":"_convertSaturationPercentToHueValue","line":615,"loc":{"start":{"line":615,"column":0},"end":{"line":615,"column":52}}},"72":{"name":"_convertBrightPercentToHueValue","line":619,"loc":{"start":{"line":619,"column":0},"end":{"line":619,"column":48}}},"73":{"name":"_getXYValue","line":629,"loc":{"start":{"line":629,"column":0},"end":{"line":629,"column":27}}},"74":{"name":"(anonymous_74)","line":631,"loc":{"start":{"line":631,"column":28},"end":{"line":631,"column":45}}},"75":{"name":"_getSaturationValue","line":642,"loc":{"start":{"line":642,"column":0},"end":{"line":642,"column":36}}},"76":{"name":"_getHueValue","line":647,"loc":{"start":{"line":647,"column":0},"end":{"line":647,"column":29}}},"77":{"name":"_getCtValue","line":657,"loc":{"start":{"line":657,"column":0},"end":{"line":657,"column":28}}},"78":{"name":"_getBrightnessValue","line":667,"loc":{"start":{"line":667,"column":0},"end":{"line":667,"column":36}}},"79":{"name":"_getAlertValue","line":672,"loc":{"start":{"line":672,"column":0},"end":{"line":672,"column":31}}},"80":{"name":"_getOnValue","line":677,"loc":{"start":{"line":677,"column":0},"end":{"line":677,"column":28}}},"81":{"name":"_getEffectValue","line":682,"loc":{"start":{"line":682,"column":0},"end":{"line":682,"column":32}}},"82":{"name":"_getOptionValue","line":687,"loc":{"start":{"line":687,"column":0},"end":{"line":687,"column":44}}},"83":{"name":"(anonymous_83)","line":692,"loc":{"start":{"line":692,"column":24},"end":{"line":692,"column":46}}},"84":{"name":"_getRangeValue","line":701,"loc":{"start":{"line":701,"column":0},"end":{"line":701,"column":43}}},"85":{"name":"_getBoundedValue","line":718,"loc":{"start":{"line":718,"column":0},"end":{"line":718,"column":43}}},"86":{"name":"valueForType","line":732,"loc":{"start":{"line":732,"column":0},"end":{"line":732,"column":41}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":7,"column":5}},"2":{"start":{"line":9,"column":0},"end":{"line":12,"column":6}},"3":{"start":{"line":11,"column":8},"end":{"line":11,"column":21}},"4":{"start":{"line":22,"column":0},"end":{"line":41,"column":2}},"5":{"start":{"line":23,"column":4},"end":{"line":23,"column":28}},"6":{"start":{"line":26,"column":4},"end":{"line":38,"column":5}},"7":{"start":{"line":27,"column":8},"end":{"line":37,"column":11}},"8":{"start":{"line":28,"column":12},"end":{"line":28,"column":19}},"9":{"start":{"line":30,"column":12},"end":{"line":36,"column":13}},"10":{"start":{"line":31,"column":16},"end":{"line":31,"column":34}},"11":{"start":{"line":33,"column":16},"end":{"line":35,"column":17}},"12":{"start":{"line":34,"column":20},"end":{"line":34,"column":53}},"13":{"start":{"line":40,"column":4},"end":{"line":40,"column":17}},"14":{"start":{"line":43,"column":0},"end":{"line":45,"column":2}},"15":{"start":{"line":44,"column":4},"end":{"line":44,"column":39}},"16":{"start":{"line":47,"column":0},"end":{"line":49,"column":2}},"17":{"start":{"line":48,"column":4},"end":{"line":48,"column":52}},"18":{"start":{"line":55,"column":0},"end":{"line":58,"column":2}},"19":{"start":{"line":56,"column":4},"end":{"line":56,"column":22}},"20":{"start":{"line":57,"column":4},"end":{"line":57,"column":16}},"21":{"start":{"line":59,"column":0},"end":{"line":59,"column":46}},"22":{"start":{"line":65,"column":0},"end":{"line":69,"column":2}},"23":{"start":{"line":66,"column":4},"end":{"line":66,"column":27}},"24":{"start":{"line":67,"column":4},"end":{"line":67,"column":34}},"25":{"start":{"line":68,"column":4},"end":{"line":68,"column":16}},"26":{"start":{"line":76,"column":0},"end":{"line":79,"column":2}},"27":{"start":{"line":77,"column":4},"end":{"line":77,"column":35}},"28":{"start":{"line":78,"column":4},"end":{"line":78,"column":16}},"29":{"start":{"line":81,"column":0},"end":{"line":83,"column":2}},"30":{"start":{"line":82,"column":4},"end":{"line":82,"column":24}},"31":{"start":{"line":90,"column":0},"end":{"line":93,"column":2}},"32":{"start":{"line":91,"column":4},"end":{"line":91,"column":37}},"33":{"start":{"line":92,"column":4},"end":{"line":92,"column":16}},"34":{"start":{"line":100,"column":0},"end":{"line":103,"column":2}},"35":{"start":{"line":101,"column":4},"end":{"line":101,"column":41}},"36":{"start":{"line":102,"column":4},"end":{"line":102,"column":16}},"37":{"start":{"line":110,"column":0},"end":{"line":113,"column":2}},"38":{"start":{"line":111,"column":4},"end":{"line":111,"column":39}},"39":{"start":{"line":112,"column":4},"end":{"line":112,"column":16}},"40":{"start":{"line":120,"column":0},"end":{"line":123,"column":2}},"41":{"start":{"line":121,"column":4},"end":{"line":121,"column":46}},"42":{"start":{"line":122,"column":4},"end":{"line":122,"column":16}},"43":{"start":{"line":131,"column":0},"end":{"line":140,"column":2}},"44":{"start":{"line":133,"column":4},"end":{"line":136,"column":5}},"45":{"start":{"line":134,"column":8},"end":{"line":134,"column":28}},"46":{"start":{"line":135,"column":8},"end":{"line":135,"column":28}},"47":{"start":{"line":138,"column":4},"end":{"line":138,"column":39}},"48":{"start":{"line":139,"column":4},"end":{"line":139,"column":16}},"49":{"start":{"line":147,"column":0},"end":{"line":150,"column":2}},"50":{"start":{"line":148,"column":4},"end":{"line":148,"column":44}},"51":{"start":{"line":149,"column":4},"end":{"line":149,"column":16}},"52":{"start":{"line":157,"column":0},"end":{"line":160,"column":2}},"53":{"start":{"line":158,"column":4},"end":{"line":158,"column":43}},"54":{"start":{"line":159,"column":4},"end":{"line":159,"column":16}},"55":{"start":{"line":167,"column":0},"end":{"line":170,"column":2}},"56":{"start":{"line":168,"column":4},"end":{"line":168,"column":44}},"57":{"start":{"line":169,"column":4},"end":{"line":169,"column":16}},"58":{"start":{"line":177,"column":0},"end":{"line":180,"column":2}},"59":{"start":{"line":178,"column":4},"end":{"line":178,"column":48}},"60":{"start":{"line":179,"column":4},"end":{"line":179,"column":16}},"61":{"start":{"line":187,"column":0},"end":{"line":190,"column":2}},"62":{"start":{"line":188,"column":4},"end":{"line":188,"column":57}},"63":{"start":{"line":189,"column":4},"end":{"line":189,"column":16}},"64":{"start":{"line":197,"column":0},"end":{"line":200,"column":2}},"65":{"start":{"line":198,"column":4},"end":{"line":198,"column":57}},"66":{"start":{"line":199,"column":4},"end":{"line":199,"column":16}},"67":{"start":{"line":207,"column":0},"end":{"line":210,"column":2}},"68":{"start":{"line":208,"column":4},"end":{"line":208,"column":50}},"69":{"start":{"line":209,"column":4},"end":{"line":209,"column":16}},"70":{"start":{"line":217,"column":0},"end":{"line":220,"column":2}},"71":{"start":{"line":218,"column":4},"end":{"line":218,"column":49}},"72":{"start":{"line":219,"column":4},"end":{"line":219,"column":16}},"73":{"start":{"line":227,"column":0},"end":{"line":230,"column":2}},"74":{"start":{"line":228,"column":4},"end":{"line":228,"column":49}},"75":{"start":{"line":229,"column":4},"end":{"line":229,"column":16}},"76":{"start":{"line":232,"column":0},"end":{"line":235,"column":2}},"77":{"start":{"line":233,"column":4},"end":{"line":233,"column":40}},"78":{"start":{"line":234,"column":4},"end":{"line":234,"column":16}},"79":{"start":{"line":241,"column":0},"end":{"line":241,"column":44}},"80":{"start":{"line":243,"column":0},"end":{"line":246,"column":2}},"81":{"start":{"line":244,"column":4},"end":{"line":244,"column":40}},"82":{"start":{"line":245,"column":4},"end":{"line":245,"column":16}},"83":{"start":{"line":247,"column":0},"end":{"line":247,"column":46}},"84":{"start":{"line":254,"column":0},"end":{"line":256,"column":2}},"85":{"start":{"line":255,"column":4},"end":{"line":255,"column":65}},"86":{"start":{"line":258,"column":0},"end":{"line":258,"column":62}},"87":{"start":{"line":260,"column":0},"end":{"line":260,"column":54}},"88":{"start":{"line":261,"column":0},"end":{"line":261,"column":55}},"89":{"start":{"line":262,"column":0},"end":{"line":262,"column":47}},"90":{"start":{"line":263,"column":0},"end":{"line":263,"column":48}},"91":{"start":{"line":265,"column":0},"end":{"line":265,"column":60}},"92":{"start":{"line":266,"column":0},"end":{"line":266,"column":67}},"93":{"start":{"line":267,"column":0},"end":{"line":267,"column":61}},"94":{"start":{"line":268,"column":0},"end":{"line":268,"column":68}},"95":{"start":{"line":270,"column":0},"end":{"line":270,"column":55}},"96":{"start":{"line":272,"column":0},"end":{"line":272,"column":53}},"97":{"start":{"line":274,"column":0},"end":{"line":276,"column":2}},"98":{"start":{"line":275,"column":4},"end":{"line":275,"column":69}},"99":{"start":{"line":278,"column":0},"end":{"line":278,"column":62}},"100":{"start":{"line":280,"column":0},"end":{"line":282,"column":2}},"101":{"start":{"line":281,"column":4},"end":{"line":281,"column":32}},"102":{"start":{"line":283,"column":0},"end":{"line":283,"column":56}},"103":{"start":{"line":285,"column":0},"end":{"line":287,"column":2}},"104":{"start":{"line":286,"column":4},"end":{"line":286,"column":33}},"105":{"start":{"line":288,"column":0},"end":{"line":288,"column":54}},"106":{"start":{"line":290,"column":0},"end":{"line":290,"column":64}},"107":{"start":{"line":296,"column":0},"end":{"line":298,"column":2}},"108":{"start":{"line":297,"column":4},"end":{"line":297,"column":83}},"109":{"start":{"line":299,"column":0},"end":{"line":299,"column":73}},"110":{"start":{"line":300,"column":0},"end":{"line":300,"column":73}},"111":{"start":{"line":302,"column":0},"end":{"line":304,"column":2}},"112":{"start":{"line":303,"column":4},"end":{"line":303,"column":34}},"113":{"start":{"line":306,"column":0},"end":{"line":308,"column":2}},"114":{"start":{"line":307,"column":4},"end":{"line":307,"column":34}},"115":{"start":{"line":310,"column":0},"end":{"line":312,"column":2}},"116":{"start":{"line":311,"column":4},"end":{"line":311,"column":34}},"117":{"start":{"line":314,"column":0},"end":{"line":316,"column":2}},"118":{"start":{"line":315,"column":4},"end":{"line":315,"column":34}},"119":{"start":{"line":324,"column":0},"end":{"line":327,"column":2}},"120":{"start":{"line":325,"column":4},"end":{"line":325,"column":65}},"121":{"start":{"line":326,"column":4},"end":{"line":326,"column":16}},"122":{"start":{"line":336,"column":0},"end":{"line":347,"column":2}},"123":{"start":{"line":337,"column":4},"end":{"line":340,"column":9}},"124":{"start":{"line":342,"column":4},"end":{"line":346,"column":9}},"125":{"start":{"line":356,"column":0},"end":{"line":362,"column":2}},"126":{"start":{"line":357,"column":4},"end":{"line":361,"column":9}},"127":{"start":{"line":373,"column":0},"end":{"line":393,"column":2}},"128":{"start":{"line":379,"column":4},"end":{"line":383,"column":5}},"129":{"start":{"line":380,"column":8},"end":{"line":380,"column":28}},"130":{"start":{"line":381,"column":8},"end":{"line":381,"column":28}},"131":{"start":{"line":382,"column":8},"end":{"line":382,"column":28}},"132":{"start":{"line":385,"column":4},"end":{"line":391,"column":7}},"133":{"start":{"line":392,"column":4},"end":{"line":392,"column":16}},"134":{"start":{"line":395,"column":0},"end":{"line":397,"column":2}},"135":{"start":{"line":396,"column":4},"end":{"line":396,"column":30}},"136":{"start":{"line":399,"column":0},"end":{"line":401,"column":2}},"137":{"start":{"line":400,"column":4},"end":{"line":400,"column":36}},"138":{"start":{"line":402,"column":0},"end":{"line":402,"column":55}},"139":{"start":{"line":403,"column":0},"end":{"line":403,"column":60}},"140":{"start":{"line":404,"column":0},"end":{"line":404,"column":61}},"141":{"start":{"line":414,"column":0},"end":{"line":423,"column":2}},"142":{"start":{"line":415,"column":4},"end":{"line":415,"column":22}},"143":{"start":{"line":417,"column":4},"end":{"line":420,"column":5}},"144":{"start":{"line":418,"column":8},"end":{"line":418,"column":29}},"145":{"start":{"line":419,"column":8},"end":{"line":419,"column":65}},"146":{"start":{"line":422,"column":4},"end":{"line":422,"column":18}},"147":{"start":{"line":427,"column":0},"end":{"line":433,"column":2}},"148":{"start":{"line":428,"column":4},"end":{"line":428,"column":29}},"149":{"start":{"line":430,"column":4},"end":{"line":432,"column":7}},"150":{"start":{"line":431,"column":8},"end":{"line":431,"column":41}},"151":{"start":{"line":435,"column":0},"end":{"line":441,"column":2}},"152":{"start":{"line":436,"column":4},"end":{"line":436,"column":29}},"153":{"start":{"line":438,"column":4},"end":{"line":440,"column":7}},"154":{"start":{"line":439,"column":8},"end":{"line":439,"column":26}},"155":{"start":{"line":447,"column":0},"end":{"line":455,"column":1}},"156":{"start":{"line":448,"column":4},"end":{"line":450,"column":5}},"157":{"start":{"line":449,"column":8},"end":{"line":449,"column":21}},"158":{"start":{"line":452,"column":4},"end":{"line":454,"column":6}},"159":{"start":{"line":457,"column":0},"end":{"line":461,"column":1}},"160":{"start":{"line":458,"column":4},"end":{"line":460,"column":6}},"161":{"start":{"line":463,"column":0},"end":{"line":467,"column":1}},"162":{"start":{"line":464,"column":4},"end":{"line":466,"column":6}},"163":{"start":{"line":469,"column":0},"end":{"line":473,"column":1}},"164":{"start":{"line":470,"column":4},"end":{"line":472,"column":6}},"165":{"start":{"line":475,"column":0},"end":{"line":479,"column":1}},"166":{"start":{"line":476,"column":4},"end":{"line":478,"column":6}},"167":{"start":{"line":481,"column":0},"end":{"line":485,"column":1}},"168":{"start":{"line":482,"column":4},"end":{"line":484,"column":6}},"169":{"start":{"line":487,"column":0},"end":{"line":491,"column":1}},"170":{"start":{"line":488,"column":4},"end":{"line":490,"column":6}},"171":{"start":{"line":493,"column":0},"end":{"line":497,"column":1}},"172":{"start":{"line":494,"column":4},"end":{"line":496,"column":6}},"173":{"start":{"line":499,"column":0},"end":{"line":503,"column":1}},"174":{"start":{"line":500,"column":4},"end":{"line":502,"column":6}},"175":{"start":{"line":505,"column":0},"end":{"line":509,"column":1}},"176":{"start":{"line":506,"column":4},"end":{"line":508,"column":5}},"177":{"start":{"line":511,"column":0},"end":{"line":515,"column":1}},"178":{"start":{"line":512,"column":4},"end":{"line":514,"column":5}},"179":{"start":{"line":517,"column":0},"end":{"line":521,"column":1}},"180":{"start":{"line":518,"column":4},"end":{"line":520,"column":5}},"181":{"start":{"line":523,"column":0},"end":{"line":527,"column":1}},"182":{"start":{"line":524,"column":4},"end":{"line":526,"column":5}},"183":{"start":{"line":529,"column":0},"end":{"line":533,"column":1}},"184":{"start":{"line":530,"column":4},"end":{"line":532,"column":5}},"185":{"start":{"line":535,"column":0},"end":{"line":542,"column":1}},"186":{"start":{"line":536,"column":4},"end":{"line":536,"column":20}},"187":{"start":{"line":538,"column":4},"end":{"line":540,"column":5}},"188":{"start":{"line":539,"column":8},"end":{"line":539,"column":29}},"189":{"start":{"line":541,"column":4},"end":{"line":541,"column":18}},"190":{"start":{"line":544,"column":0},"end":{"line":549,"column":1}},"191":{"start":{"line":545,"column":4},"end":{"line":548,"column":6}},"192":{"start":{"line":554,"column":0},"end":{"line":556,"column":1}},"193":{"start":{"line":555,"column":4},"end":{"line":555,"column":51}},"194":{"start":{"line":558,"column":0},"end":{"line":567,"column":1}},"195":{"start":{"line":559,"column":4},"end":{"line":559,"column":19}},"196":{"start":{"line":562,"column":4},"end":{"line":564,"column":5}},"197":{"start":{"line":563,"column":8},"end":{"line":563,"column":41}},"198":{"start":{"line":566,"column":4},"end":{"line":566,"column":18}},"199":{"start":{"line":569,"column":0},"end":{"line":572,"column":1}},"200":{"start":{"line":570,"column":4},"end":{"line":570,"column":53}},"201":{"start":{"line":571,"column":4},"end":{"line":571,"column":71}},"202":{"start":{"line":574,"column":0},"end":{"line":577,"column":1}},"203":{"start":{"line":575,"column":4},"end":{"line":575,"column":43}},"204":{"start":{"line":576,"column":4},"end":{"line":576,"column":65}},"205":{"start":{"line":579,"column":0},"end":{"line":582,"column":1}},"206":{"start":{"line":580,"column":4},"end":{"line":580,"column":43}},"207":{"start":{"line":581,"column":4},"end":{"line":581,"column":65}},"208":{"start":{"line":584,"column":0},"end":{"line":587,"column":1}},"209":{"start":{"line":585,"column":4},"end":{"line":585,"column":43}},"210":{"start":{"line":586,"column":4},"end":{"line":586,"column":65}},"211":{"start":{"line":589,"column":0},"end":{"line":592,"column":1}},"212":{"start":{"line":590,"column":4},"end":{"line":590,"column":41}},"213":{"start":{"line":591,"column":4},"end":{"line":591,"column":63}},"214":{"start":{"line":594,"column":0},"end":{"line":597,"column":1}},"215":{"start":{"line":595,"column":4},"end":{"line":595,"column":41}},"216":{"start":{"line":596,"column":4},"end":{"line":596,"column":63}},"217":{"start":{"line":599,"column":0},"end":{"line":613,"column":1}},"218":{"start":{"line":600,"column":4},"end":{"line":604,"column":9}},"219":{"start":{"line":606,"column":4},"end":{"line":612,"column":5}},"220":{"start":{"line":607,"column":8},"end":{"line":607,"column":19}},"221":{"start":{"line":608,"column":11},"end":{"line":612,"column":5}},"222":{"start":{"line":609,"column":8},"end":{"line":609,"column":19}},"223":{"start":{"line":611,"column":8},"end":{"line":611,"column":45}},"224":{"start":{"line":615,"column":0},"end":{"line":617,"column":1}},"225":{"start":{"line":616,"column":4},"end":{"line":616,"column":83}},"226":{"start":{"line":619,"column":0},"end":{"line":621,"column":1}},"227":{"start":{"line":620,"column":4},"end":{"line":620,"column":83}},"228":{"start":{"line":629,"column":0},"end":{"line":640,"column":1}},"229":{"start":{"line":630,"column":4},"end":{"line":637,"column":9}},"230":{"start":{"line":632,"column":12},"end":{"line":634,"column":17}},"231":{"start":{"line":635,"column":12},"end":{"line":635,"column":55}},"232":{"start":{"line":639,"column":4},"end":{"line":639,"column":70}},"233":{"start":{"line":642,"column":0},"end":{"line":645,"column":1}},"234":{"start":{"line":643,"column":4},"end":{"line":643,"column":35}},"235":{"start":{"line":644,"column":4},"end":{"line":644,"column":57}},"236":{"start":{"line":647,"column":0},"end":{"line":650,"column":1}},"237":{"start":{"line":648,"column":4},"end":{"line":648,"column":35}},"238":{"start":{"line":649,"column":4},"end":{"line":649,"column":57}},"239":{"start":{"line":657,"column":0},"end":{"line":660,"column":1}},"240":{"start":{"line":658,"column":4},"end":{"line":658,"column":33}},"241":{"start":{"line":659,"column":4},"end":{"line":659,"column":55}},"242":{"start":{"line":667,"column":0},"end":{"line":670,"column":1}},"243":{"start":{"line":668,"column":4},"end":{"line":668,"column":35}},"244":{"start":{"line":669,"column":4},"end":{"line":669,"column":57}},"245":{"start":{"line":672,"column":0},"end":{"line":675,"column":1}},"246":{"start":{"line":673,"column":4},"end":{"line":673,"column":39}},"247":{"start":{"line":674,"column":4},"end":{"line":674,"column":62}},"248":{"start":{"line":677,"column":0},"end":{"line":680,"column":1}},"249":{"start":{"line":678,"column":4},"end":{"line":678,"column":33}},"250":{"start":{"line":679,"column":4},"end":{"line":679,"column":35}},"251":{"start":{"line":682,"column":0},"end":{"line":685,"column":1}},"252":{"start":{"line":683,"column":4},"end":{"line":683,"column":41}},"253":{"start":{"line":684,"column":4},"end":{"line":684,"column":64}},"254":{"start":{"line":687,"column":0},"end":{"line":699,"column":1}},"255":{"start":{"line":688,"column":4},"end":{"line":690,"column":9}},"256":{"start":{"line":692,"column":4},"end":{"line":696,"column":7}},"257":{"start":{"line":693,"column":8},"end":{"line":695,"column":9}},"258":{"start":{"line":694,"column":12},"end":{"line":694,"column":29}},"259":{"start":{"line":698,"column":4},"end":{"line":698,"column":65}},"260":{"start":{"line":701,"column":0},"end":{"line":709,"column":1}},"261":{"start":{"line":702,"column":4},"end":{"line":702,"column":33}},"262":{"start":{"line":704,"column":4},"end":{"line":706,"column":5}},"263":{"start":{"line":705,"column":8},"end":{"line":705,"column":40}},"264":{"start":{"line":708,"column":4},"end":{"line":708,"column":56}},"265":{"start":{"line":718,"column":0},"end":{"line":730,"column":1}},"266":{"start":{"line":719,"column":4},"end":{"line":721,"column":5}},"267":{"start":{"line":720,"column":8},"end":{"line":720,"column":20}},"268":{"start":{"line":723,"column":4},"end":{"line":729,"column":5}},"269":{"start":{"line":724,"column":8},"end":{"line":724,"column":19}},"270":{"start":{"line":725,"column":11},"end":{"line":729,"column":5}},"271":{"start":{"line":726,"column":8},"end":{"line":726,"column":19}},"272":{"start":{"line":728,"column":8},"end":{"line":728,"column":21}},"273":{"start":{"line":732,"column":0},"end":{"line":734,"column":1}},"274":{"start":{"line":733,"column":4},"end":{"line":733,"column":54}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"2":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":12},"end":{"line":30,"column":12}},{"start":{"line":30,"column":12},"end":{"line":30,"column":12}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":16},"end":{"line":33,"column":16}},{"start":{"line":33,"column":16},"end":{"line":33,"column":16}}]},"4":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":11},"end":{"line":44,"column":14}},{"start":{"line":44,"column":18},"end":{"line":44,"column":38}}]},"5":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":4},"end":{"line":133,"column":4}},{"start":{"line":133,"column":4},"end":{"line":133,"column":4}}]},"6":{"line":337,"type":"cond-expr","locations":[{"start":{"line":337,"column":47},"end":{"line":337,"column":57}},{"start":{"line":337,"column":60},"end":{"line":337,"column":76}}]},"7":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":4},"end":{"line":379,"column":4}},{"start":{"line":379,"column":4},"end":{"line":379,"column":4}}]},"8":{"line":417,"type":"if","locations":[{"start":{"line":417,"column":4},"end":{"line":417,"column":4}},{"start":{"line":417,"column":4},"end":{"line":417,"column":4}}]},"9":{"line":448,"type":"if","locations":[{"start":{"line":448,"column":4},"end":{"line":448,"column":4}},{"start":{"line":448,"column":4},"end":{"line":448,"column":4}}]},"10":{"line":448,"type":"binary-expr","locations":[{"start":{"line":448,"column":8},"end":{"line":448,"column":21}},{"start":{"line":448,"column":25},"end":{"line":448,"column":44}}]},"11":{"line":538,"type":"if","locations":[{"start":{"line":538,"column":4},"end":{"line":538,"column":4}},{"start":{"line":538,"column":4},"end":{"line":538,"column":4}}]},"12":{"line":562,"type":"if","locations":[{"start":{"line":562,"column":4},"end":{"line":562,"column":4}},{"start":{"line":562,"column":4},"end":{"line":562,"column":4}}]},"13":{"line":606,"type":"if","locations":[{"start":{"line":606,"column":4},"end":{"line":606,"column":4}},{"start":{"line":606,"column":4},"end":{"line":606,"column":4}}]},"14":{"line":608,"type":"if","locations":[{"start":{"line":608,"column":11},"end":{"line":608,"column":11}},{"start":{"line":608,"column":11},"end":{"line":608,"column":11}}]},"15":{"line":693,"type":"if","locations":[{"start":{"line":693,"column":8},"end":{"line":693,"column":8}},{"start":{"line":693,"column":8},"end":{"line":693,"column":8}}]},"16":{"line":693,"type":"binary-expr","locations":[{"start":{"line":693,"column":12},"end":{"line":693,"column":21}},{"start":{"line":693,"column":25},"end":{"line":693,"column":45}}]},"17":{"line":698,"type":"binary-expr","locations":[{"start":{"line":698,"column":11},"end":{"line":698,"column":19}},{"start":{"line":698,"column":23},"end":{"line":698,"column":46}},{"start":{"line":698,"column":50},"end":{"line":698,"column":64}}]},"18":{"line":704,"type":"if","locations":[{"start":{"line":704,"column":4},"end":{"line":704,"column":4}},{"start":{"line":704,"column":4},"end":{"line":704,"column":4}}]},"19":{"line":704,"type":"binary-expr","locations":[{"start":{"line":704,"column":8},"end":{"line":704,"column":27}},{"start":{"line":704,"column":31},"end":{"line":704,"column":45}},{"start":{"line":704,"column":49},"end":{"line":704,"column":72}}]},"20":{"line":719,"type":"if","locations":[{"start":{"line":719,"column":4},"end":{"line":719,"column":4}},{"start":{"line":719,"column":4},"end":{"line":719,"column":4}}]},"21":{"line":723,"type":"if","locations":[{"start":{"line":723,"column":4},"end":{"line":723,"column":4}},{"start":{"line":723,"column":4},"end":{"line":723,"column":4}}]},"22":{"line":725,"type":"if","locations":[{"start":{"line":725,"column":11},"end":{"line":725,"column":11}},{"start":{"line":725,"column":11},"end":{"line":725,"column":11}}]}},"code":["\"use strict\";","","var util = require(\"util\")","    , utils = require(\"./utils\")","    , rgb = require(\"./rgb\")","    , lightStateTrait = require(\"./commands/traits/tLightStateBody\")","    ;","","var stateDefinitions = lightStateTrait(true).bodyArguments.value","    , State = function () {","        this.reset();","    };","","/**"," * Creates a new state object to pass to a Philips Hue Light."," *"," * @param values An optional object that contains state properties and values that are to be loaded into the created"," * state object. Any properties that are not 'valid' properties of the Light State are not loaded."," *"," * @return {State}"," */","module.exports.create = function (values) {","    var state = new State();","","    // If values are provided then load the ones that have values to match our functions","    if (values) {","        Object.keys(values).forEach(function (value) {","            var fn;","","            if (values.hasOwnProperty(value)) {","                fn = state[value];","","                if (utils.isFunction(fn)) {","                    fn.apply(state, [values[value]]);","                }","            }","        });","    }","","    return state;","};","","module.exports.isLightState = function (obj) {","    return obj && obj instanceof State;","};","","State.prototype.payload = function () {","    return JSON.parse(JSON.stringify(this._values));","};","","/**"," * Resets/Clears the properties that have been set in the light state object."," * @returns {State}"," */","State.prototype.reset = function () {","    this._values = {};","    return this;","};","State.prototype.clear = State.prototype.reset;","","/**"," * Creates a copy of the state object"," * @returns {State}"," */","State.prototype.copy = function () {","    var copy = new State();","    copy._addValues(this._values);","    return copy;","};","","/**"," * Sets the strict state for setting parameters for the light state."," * @param strict"," * @returns {State}"," */","State.prototype.strict = function (strict) {","    this._strict = Boolean(strict);","    return this;","};","","State.prototype.isStrict = function () {","    return this._strict;","};","","/**"," * Sets the on state"," * @param on The state (true for on, false for off). If this parameter is not specified, it is assumed to be true."," * @returns {State}"," */","State.prototype.on = function (on) {","    this._addValues(_getOnState(on));","    return this;","};","","/**"," * Adds the bri state"," * @param value The hue bri value, 0 to 254."," * @return {State}"," */","State.prototype.bri = function (value) {","    this._addValues(_getBriState(value));","    return this;","};","","/**"," * Adds the hue for the color desired."," * @param hue The hue value is a wrapping value between 0 and 65535. Both 0 and 65535 are red, 25500 is green and 46920 is blue."," * @returns {State}"," */","State.prototype.hue = function (hue) {","    this._addValues(_getHueState(hue));","    return this;","};","","/**"," * The saturation of the color for the bulb, 0 being the least saturated i.e. white."," * @param saturation The saturation value 0 to 255"," * @returns {State}"," */","State.prototype.sat = function (saturation) {","    this._addValues(_getSatState(saturation));","    return this;","};","","/**"," * Adds the xy values"," * @param x The x value ranged from 0 to 1, or an Array of [x, y] values"," * @param y The y value ranged from 0 to 1"," * @return {State}"," */","State.prototype.xy = function (x, y) {","    // Cater for the first argument being an array","    if (Array.isArray(arguments[0])) {","        x = arguments[0][0];","        y = arguments[0][1];","    }","","    this._addValues(_getXYState(x, y));","    return this;","};","","/**"," * Adds the Mired Color Temperature"," * @param colorTemp The Color Temperature between 153 to 500 inclusive."," * @returns {State}"," */","State.prototype.ct = function (colorTemp) {","    this._addValues(_getCtState(colorTemp));","    return this;","};","","/**"," * Adds the alert state"," * @param value A String value representing the alert state, \"none\", \"select\", \"lselect\"."," * @return {State}"," */","State.prototype.alert = function (value) {","    this._addValues(_getAlertState(value));","    return this;","};","","/**"," * Adds an effect for the bulb."," * @param value The type of effect, currently supports \"none\" and \"colorloop\"."," * @returns {State}"," */","State.prototype.effect = function (value) {","    this._addValues(_getEffectState(value));","    return this;","};","","/**"," * Adds a transition to the desired state."," * @param value This is given as a multiple of 100ms and defaults to 4 (400ms)."," * @return {State}"," */","State.prototype.transitiontime = function (value) {","    this._addValues(_getTransitionState(value));","    return this;","};","","/**"," * Increments/Decrements the brightness value for the lights."," * @param value An amount to change the current brightness by, -254 to 254."," * @returns {State}"," */","State.prototype.bri_inc = function (value) {","    this._addValues(_getBrightnessIncrementState(value));","    return this;","};","","/**"," * Increments/Decrements the saturation value for the lights."," * @param value An amount to change the current saturation by, -254 to 254."," * @returns {State}"," */","State.prototype.sat_inc = function (value) {","    this._addValues(_getSaturationIncrementState(value));","    return this;","};","","/**"," * Increments/Decrements the Hue value for the lights."," * @param value An amount to change the current hue by, -65534 to 65534."," * @returns {State}"," */","State.prototype.hue_inc = function (value) {","    this._addValues(_getHueIncrementState(value));","    return this;","};","","/**"," * Increments/Decrements the color temperature value for the lights."," * @param value An amount to change the current color temperature by, -65534 to 65534."," * @returns {State}"," */","State.prototype.ct_inc = function (value) {","    this._addValues(_getCtIncrementState(value));","    return this;","};","","/**"," * Increments/Decrements the XY value for the lights."," * @param value An amount to change the current XY by, -0.5 to 0.5."," * @returns {State}"," */","State.prototype.xy_inc = function (value) {","    this._addValues(_getXYIncrementState(value));","    return this;","};","","State.prototype.scene = function (value) {","    this._addValues(_getSceneId(value));","    return this;","};","","","///////////////////////////////////////////////////////////////////////","// Convenience functions","","State.prototype.turnOn = State.prototype.on;","","State.prototype.off = function () {","    this._addValues(_getOnState(false));","    return this;","};","State.prototype.turnOff = State.prototype.off;","","/**"," * Set the brightness as a percent value"," * @param percentage The brightness percentage value between 0 and 100."," * @returns {State}"," */","State.prototype.brightness = function (percentage) {","    return this.bri(_convertBrightPercentToHueValue(percentage));","};","","State.prototype.incrementBrightness = State.prototype.bri_inc;","","State.prototype.colorTemperature = State.prototype.ct;","State.prototype.colourTemperature = State.prototype.ct;","State.prototype.colorTemp = State.prototype.ct;","State.prototype.colourTemp = State.prototype.ct;","","State.prototype.incrementColorTemp = State.prototype.ct_inc;","State.prototype.incrementColorTemperature = State.prototype.ct_inc;","State.prototype.incrementColourTemp = State.prototype.ct_inc;","State.prototype.incrementColourTemperature = State.prototype.ct_inc;","","State.prototype.incrementHue = State.prototype.hue_inc;","","State.prototype.incrementXY = State.prototype.xy_inc;","","State.prototype.saturation = function (percentage) {","    return this.sat(_convertSaturationPercentToHueValue(percentage));","};","","State.prototype.incrementSaturation = State.prototype.sat_inc;","","State.prototype.shortAlert = function () {","    return this.alert(\"select\");","};","State.prototype.alertShort = State.prototype.shortAlert;","","State.prototype.longAlert = function () {","    return this.alert(\"lselect\");","};","State.prototype.alertLong = State.prototype.longAlert;","","State.prototype.transitionTime = State.prototype.transitiontime;","/**"," * Sets the transition time in milliseconds."," * @param milliseconds The number of milliseconds for the transition"," * @returns {State}"," */","State.prototype.transition = function (milliseconds) {","    return this.transitionTime(_convertMilliSecondsToTransitionTime(milliseconds));","};","State.prototype.transitiontime_milliseconds = State.prototype.transition;","State.prototype.transitionTime_milliseconds = State.prototype.transition;","","State.prototype.transitionSlow = function () {","    return this.transitionTime(8);","};","","State.prototype.transitionFast = function () {","    return this.transitionTime(2);","};","","State.prototype.transitionInstant = function () {","    return this.transitionTime(0);","};","","State.prototype.transitionDefault = function () {","    return this.transitionTime(4);//TODO should load this from the definition","};","","/**"," * Builds the White state for a lamp"," * @param colorTemp The temperature, a value of 153-500"," * @param brightPercentage The percentage of brightness 0-100"," * @return {State}"," */","State.prototype.white = function (colorTemp, brightPercentage) {","    this._addValues(_getWhiteState(colorTemp, brightPercentage));","    return this;","};","","/**"," * Adds the HSL values"," * @param hue The hue value in degrees 0-360"," * @param saturation The saturation percentage 0-100"," * @param luminosity The luminosity percentage 0-100"," * @return {State}"," */","State.prototype.hsl = function (hue, saturation, luminosity) {","    var temp = saturation * (luminosity < 50 ? luminosity : 100 - luminosity) / 100","        , satValue = Math.round(200 * temp / (luminosity + temp)) | 0","        , luminosityValue = Math.round(temp + luminosity)","        ;","","    return this","        .brightness(luminosityValue)","        .hue(_convertHueToHueValue(hue))","        .sat(_convertSaturationPercentToHueValue(satValue))","        ;","};","","/**"," * Adds the HSB values"," * @param hue The hue value in degrees 0-360"," * @param saturation The saturation percentage 0-100"," * @param brightness The brightness percentage 0-100"," * @return {State}"," */","State.prototype.hsb = function (hue, saturation, brightness) {","    return this","        .brightness(brightness)","        .hue(_convertHueToHueValue(hue))","        .sat(_convertSaturationPercentToHueValue(saturation))","        ;","};","","/**"," * Adds the rgb color to the state. This requires knowledge of the light type to be able to convert it into"," * an actual color that the map can display."," *"," * @param r The amount of Red 0-255, or an {Array} or r, g, b values."," * @param g The amount of Green 0-255"," * @param b The amount of Blue 0-255"," * @return {State}"," */","State.prototype.rgb = function (r, g, b) {","    // The conversion to rgb is now done in the xy space, but to do so requires knowledge of the limits of the light's","    // color gamut.","    // To cater for this, we store the rgb value requested, and convert it to xy when the user applies it.","","    // We may have an array passed in, cater for that","    if (Array.isArray(arguments[0])) {","        r = arguments[0][0];","        g = arguments[0][1];","        b = arguments[0][2];","    }","","    this._addValues({","        rgb: [","            _getBoundedValue(r, 0, 255),","            _getBoundedValue(g, 0, 255),","            _getBoundedValue(b, 0, 255)","        ]","    });","    return this;","};","","State.prototype.hasRGB = function () {","    return !!this._values.rgb;","};","","State.prototype.colorLoop = function () {","    return this.effect(\"colorloop\");","};","State.prototype.colourLoop = State.prototype.colorLoop;","State.prototype.effectColorLoop = State.prototype.colorLoop;","State.prototype.effectColourLoop = State.prototype.colorLoop;","","/**"," * Creates a copy of the State if there is an RGB value set."," *"," * @param modelid The model ID of the light(s) to convert the rgb value for."," *"," * @returns {State} If there is an RGB value set, then a copy of the state, with the rgb value applied based on the"," * lamp model provided. If there is no RGB value set, then {null} will be returned."," */","State.prototype.applyRGB = function (modelid) {","    var result = null;","","    if (this.hasRGB()) {","        result = this.copy();","        result.xy(rgb.convertRGBtoXY(this._values.rgb, modelid));","    }","","    return result;","};","","///////////////////////////////////////////////////////////////////////","","State.prototype._addValues = function () {","    var state = this._values;","","    Array.prototype.slice.apply(arguments).forEach(function (stateValue) {","        utils.combine(state, stateValue);","    });","};","","State.prototype._removeValues = function () {","    var state = this._values;","","    Array.prototype.slice.apply(arguments).forEach(function (key) {","        delete state[key];","    });","};","","","/////////////////////////////////","// State objects","","function _getOnState(value) {","    if (value == null || value === undefined) {","        value = true;","    }","","    return {","        on: _getOnValue(value)","    };","}","","function _getBriState(value) {","    return {","        bri: _getBrightnessValue(value)","    };","}","","function _getHueState(value) {","    return {","        hue: _getHueValue(value)","    };","}","","function _getSatState(value) {","    return {","        sat: _getSaturationValue(value)","    };","}","","function _getXYState(x, y) {","    return {","        xy: _getXYValue(x, y)","    };","}","","function _getCtState(value) {","    return {","        ct: _getCtValue(value)","    };","}","","function _getAlertState(value) {","    return {","        alert: _getAlertValue(value)","    };","}","","function _getEffectState(value) {","    return {","        effect: _getEffectValue(value)","    };","}","","function _getTransitionState(value) {","    return {","        transitiontime: _getTransitionTimeValue(value)","    };","}","","function _getBrightnessIncrementState(value) {","    return {","        bri_inc: _getBrightnessIncrementValue(value)","    }","}","","function _getSaturationIncrementState(value) {","    return {","        sat_inc: _getSaturationIncrementValue(value)","    }","}","","function _getHueIncrementState(value) {","    return {","        hue_inc: _getHueIncrementValue(value)","    }","}","","function _getCtIncrementState(value) {","    return {","        ct_inc: _getCtIncrementValue(value)","    }","}","","function _getXYIncrementState(value) {","    return {","        xy_inc: _getXYIncrementValue(value)","    }","}","","function _getSceneId(value) {","    var result = {};","","    if (value) {","        result.scene = value;","    }","    return result;","}","","function _getWhiteState(colorTemp, brightness) {","    return utils.combine(","        _getCtState(colorTemp),","        _getBriState(_convertBrightPercentToHueValue(brightness))","    );","}","","/////////////////////////////////","// Value Functions","","function _convertHueToHueValue(hue) {","    return _getBoundedValue(hue, 0, 360) * 182.5487","}","","function _convertMilliSecondsToTransitionTime(value) {","    var result = 0;","","    // The transition time is in multiples of 100ms, e.g. 100ms = 1","    if (value > 0) {","        result = Math.round(value / 100);","    }","","    return result;","}","","function _getTransitionTimeValue(value) {","    var transition = stateDefinitions.transitiontime;","    return valueForType(transition, _getRangeValue(transition, value));","}","","function _getBrightnessIncrementValue(value) {","    var bri_inc = stateDefinitions.bri_inc;","    return valueForType(bri_inc, _getRangeValue(bri_inc, value));","}","","function _getSaturationIncrementValue(value) {","    var sat_inc = stateDefinitions.sat_inc;","    return valueForType(sat_inc, _getRangeValue(sat_inc, value));","}","","function _getHueIncrementValue(value) {","    var hue_inc = stateDefinitions.hue_inc;","    return valueForType(hue_inc, _getRangeValue(hue_inc, value));","}","","function _getCtIncrementValue(value) {","    var ct_inc = stateDefinitions.ct_inc;","    return valueForType(ct_inc, _getRangeValue(ct_inc, value));","}","","function _getXYIncrementValue(value) {","    var xy_inc = stateDefinitions.xy_inc;","    return valueForType(xy_inc, _getRangeValue(xy_inc, value));","}","","function convertPercentToValue(definition, percent) {","    var range = definition.range","        , min = range.min","        , max = range.max","        , normalizedValue = _getBoundedValue(percent, 0, 100)","        ;","","    if (normalizedValue === 0) {","        return min;","    } else if (normalizedValue === 100) {","        return max;","    } else {","        return normalizedValue * (max / 100);","    }","}","","function _convertSaturationPercentToHueValue(value) {","    return _getSaturationValue(convertPercentToValue(stateDefinitions.sat, value));","}","","function _convertBrightPercentToHueValue(value) {","    return _getBrightnessValue(convertPercentToValue(stateDefinitions.bri, value));","}","","/**"," * Obtains the XY color values that the Hue Lights can understand"," * @param x The X value"," * @param y The Y value"," * @return {Array} The converted xy values."," */","function _getXYValue(x, y) {","    var xy = stateDefinitions.xy","        , validateValueFn = function (value) {","            var valueType = xy.valueType","                , normalized = _getRangeValue(valueType, value)","                ;","            return valueForType(valueType, normalized);","        }","        ;","","    return valueForType(xy, [validateValueFn(x), validateValueFn(y)]);","}","","function _getSaturationValue(value) {","    var sat = stateDefinitions.sat;","    return valueForType(sat, _getRangeValue(sat, value));","}","","function _getHueValue(value) {","    var hue = stateDefinitions.hue;","    return valueForType(hue, _getRangeValue(hue, value));","}","","/**"," * Color Temperature values are limited to the range of 153 - 500, cold to warm."," * @param value The value to set as a {String} or {Integer}"," * @return {Number} The color temperature to use."," */","function _getCtValue(value) {","    var ct = stateDefinitions.ct;","    return valueForType(ct, _getRangeValue(ct, value));","}","","/**"," * Brightness values are limited to the range of 0 - 254."," * @param value The value to set as a {String} or {Integer}"," * @return {Number} The brightness value to use."," */","function _getBrightnessValue(value) {","    var bri = stateDefinitions.bri;","    return valueForType(bri, _getRangeValue(bri, value));","}","","function _getAlertValue(value) {","    var alert = stateDefinitions.alert;","    return valueForType(alert, _getOptionValue(alert, value));","}","","function _getOnValue(value) {","    var on = stateDefinitions.on;","    return valueForType(on, value);","}","","function _getEffectValue(value) {","    var effect = stateDefinitions.effect;","    return valueForType(effect, _getOptionValue(effect, value));","}","","function _getOptionValue(definition, value) {","    var validValues = definition.validValues","        , resolved","        ;","","    validValues.forEach(function (validValue) {","        if (!resolved && validValue === value) {","            resolved = value;","        }","    });","","    return resolved || definition.defaultValue || validValues[0];","}","","function _getRangeValue(definition, value) {","    var range = definition.range;","","    if (value === undefined || value === null && definition.defaultValue) {","        value = definition.defaultValue;","    }","","    return _getBoundedValue(value, range.min, range.max)","}","","/**"," * Obtains a value that falls within the specified range"," * @param value The value to check"," * @param min The minimum allowed value"," * @param max The maximum allowed value"," * @return {*} The value that sits within the specified range"," */","function _getBoundedValue(value, min, max) {","    if (isNaN(value)) {","        value = min;","    }","","    if (value < min) {","        return min;","    } else if (value > max) {","        return max;","    } else {","        return value;","    }","}","","function valueForType(definition, value) {","    return utils.valueForType(definition.type, value);","}"],"l":{"3":1,"9":1,"11":0,"22":1,"23":0,"26":0,"27":0,"28":0,"30":0,"31":0,"33":0,"34":0,"40":0,"43":1,"44":0,"47":1,"48":0,"55":1,"56":0,"57":0,"59":1,"65":1,"66":0,"67":0,"68":0,"76":1,"77":0,"78":0,"81":1,"82":0,"90":1,"91":0,"92":0,"100":1,"101":0,"102":0,"110":1,"111":0,"112":0,"120":1,"121":0,"122":0,"131":1,"133":0,"134":0,"135":0,"138":0,"139":0,"147":1,"148":0,"149":0,"157":1,"158":0,"159":0,"167":1,"168":0,"169":0,"177":1,"178":0,"179":0,"187":1,"188":0,"189":0,"197":1,"198":0,"199":0,"207":1,"208":0,"209":0,"217":1,"218":0,"219":0,"227":1,"228":0,"229":0,"232":1,"233":0,"234":0,"241":1,"243":1,"244":0,"245":0,"247":1,"254":1,"255":0,"258":1,"260":1,"261":1,"262":1,"263":1,"265":1,"266":1,"267":1,"268":1,"270":1,"272":1,"274":1,"275":0,"278":1,"280":1,"281":0,"283":1,"285":1,"286":0,"288":1,"290":1,"296":1,"297":0,"299":1,"300":1,"302":1,"303":0,"306":1,"307":0,"310":1,"311":0,"314":1,"315":0,"324":1,"325":0,"326":0,"336":1,"337":0,"342":0,"356":1,"357":0,"373":1,"379":0,"380":0,"381":0,"382":0,"385":0,"392":0,"395":1,"396":0,"399":1,"400":0,"402":1,"403":1,"404":1,"414":1,"415":0,"417":0,"418":0,"419":0,"422":0,"427":1,"428":0,"430":0,"431":0,"435":1,"436":0,"438":0,"439":0,"447":1,"448":0,"449":0,"452":0,"457":1,"458":0,"463":1,"464":0,"469":1,"470":0,"475":1,"476":0,"481":1,"482":0,"487":1,"488":0,"493":1,"494":0,"499":1,"500":0,"505":1,"506":0,"511":1,"512":0,"517":1,"518":0,"523":1,"524":0,"529":1,"530":0,"535":1,"536":0,"538":0,"539":0,"541":0,"544":1,"545":0,"554":1,"555":0,"558":1,"559":0,"562":0,"563":0,"566":0,"569":1,"570":0,"571":0,"574":1,"575":0,"576":0,"579":1,"580":0,"581":0,"584":1,"585":0,"586":0,"589":1,"590":0,"591":0,"594":1,"595":0,"596":0,"599":1,"600":0,"606":0,"607":0,"608":0,"609":0,"611":0,"615":1,"616":0,"619":1,"620":0,"629":1,"630":0,"632":0,"635":0,"639":0,"642":1,"643":0,"644":0,"647":1,"648":0,"649":0,"657":1,"658":0,"659":0,"667":1,"668":0,"669":0,"672":1,"673":0,"674":0,"677":1,"678":0,"679":0,"682":1,"683":0,"684":0,"687":1,"688":0,"692":0,"693":0,"694":0,"698":0,"701":1,"702":0,"704":0,"705":0,"708":0,"718":1,"719":0,"720":0,"723":0,"724":0,"725":0,"726":0,"728":0,"732":1,"733":0}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/rgb.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/rgb.js","s":{"1":1,"2":9,"3":9,"4":1,"5":0,"6":1,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":9,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":9},"end":{"line":3,"column":25}}},"2":{"name":"_crossProduct","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":31}}},"3":{"name":"_isInColorGamut","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":40}}},"4":{"name":"_getClosestPoint","line":53,"loc":{"start":{"line":53,"column":0},"end":{"line":53,"column":46}}},"5":{"name":"_getDistanceBetweenPoints","line":73,"loc":{"start":{"line":73,"column":0},"end":{"line":73,"column":47}}},"6":{"name":"_getXYStateFromRGB","line":80,"loc":{"start":{"line":80,"column":0},"end":{"line":80,"column":54}}},"7":{"name":"_getRGBFromXYState","line":115,"loc":{"start":{"line":115,"column":0},"end":{"line":115,"column":46}}},"8":{"name":"(anonymous_8)","line":127,"loc":{"start":{"line":127,"column":18},"end":{"line":127,"column":31}}},"9":{"name":"(anonymous_9)","line":132,"loc":{"start":{"line":132,"column":18},"end":{"line":132,"column":31}}},"10":{"name":"(anonymous_10)","line":137,"loc":{"start":{"line":137,"column":22},"end":{"line":137,"column":35}}},"11":{"name":"(anonymous_11)","line":140,"loc":{"start":{"line":140,"column":18},"end":{"line":140,"column":31}}},"12":{"name":"_resolveXYPointForLamp","line":151,"loc":{"start":{"line":151,"column":0},"end":{"line":151,"column":47}}},"13":{"name":"_gammaCorrection","line":175,"loc":{"start":{"line":175,"column":0},"end":{"line":175,"column":33}}},"14":{"name":"_getLimits","line":185,"loc":{"start":{"line":185,"column":0},"end":{"line":185,"column":29}}},"15":{"name":"(anonymous_15)","line":210,"loc":{"start":{"line":210,"column":20},"end":{"line":210,"column":43}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":22,"column":5}},"2":{"start":{"line":4,"column":8},"end":{"line":4,"column":19}},"3":{"start":{"line":5,"column":8},"end":{"line":5,"column":19}},"4":{"start":{"line":24,"column":0},"end":{"line":26,"column":1}},"5":{"start":{"line":25,"column":4},"end":{"line":25,"column":39}},"6":{"start":{"line":28,"column":0},"end":{"line":43,"column":1}},"7":{"start":{"line":29,"column":4},"end":{"line":40,"column":9}},"8":{"start":{"line":42,"column":4},"end":{"line":42,"column":54}},"9":{"start":{"line":53,"column":0},"end":{"line":71,"column":1}},"10":{"start":{"line":54,"column":4},"end":{"line":59,"column":9}},"11":{"start":{"line":61,"column":4},"end":{"line":65,"column":5}},"12":{"start":{"line":62,"column":8},"end":{"line":62,"column":16}},"13":{"start":{"line":63,"column":11},"end":{"line":65,"column":5}},"14":{"start":{"line":64,"column":8},"end":{"line":64,"column":16}},"15":{"start":{"line":67,"column":4},"end":{"line":70,"column":6}},"16":{"start":{"line":73,"column":0},"end":{"line":78,"column":1}},"17":{"start":{"line":74,"column":4},"end":{"line":76,"column":9}},"18":{"start":{"line":77,"column":4},"end":{"line":77,"column":40}},"19":{"start":{"line":80,"column":0},"end":{"line":102,"column":1}},"20":{"start":{"line":81,"column":4},"end":{"line":90,"column":9}},"21":{"start":{"line":92,"column":4},"end":{"line":92,"column":30}},"22":{"start":{"line":93,"column":4},"end":{"line":93,"column":30}},"23":{"start":{"line":95,"column":4},"end":{"line":95,"column":29}},"24":{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},"25":{"start":{"line":98,"column":8},"end":{"line":98,"column":58}},"26":{"start":{"line":101,"column":4},"end":{"line":101,"column":34}},"27":{"start":{"line":115,"column":0},"end":{"line":143,"column":1}},"28":{"start":{"line":116,"column":4},"end":{"line":124,"column":7}},"29":{"start":{"line":127,"column":4},"end":{"line":129,"column":7}},"30":{"start":{"line":128,"column":8},"end":{"line":128,"column":99}},"31":{"start":{"line":132,"column":4},"end":{"line":132,"column":59}},"32":{"start":{"line":132,"column":33},"end":{"line":132,"column":55}},"33":{"start":{"line":135,"column":4},"end":{"line":135,"column":47}},"34":{"start":{"line":136,"column":4},"end":{"line":138,"column":5}},"35":{"start":{"line":137,"column":8},"end":{"line":137,"column":56}},"36":{"start":{"line":137,"column":37},"end":{"line":137,"column":52}},"37":{"start":{"line":140,"column":4},"end":{"line":140,"column":64}},"38":{"start":{"line":140,"column":33},"end":{"line":140,"column":60}},"39":{"start":{"line":142,"column":4},"end":{"line":142,"column":15}},"40":{"start":{"line":151,"column":0},"end":{"line":173,"column":1}},"41":{"start":{"line":153,"column":4},"end":{"line":161,"column":9}},"42":{"start":{"line":163,"column":4},"end":{"line":166,"column":5}},"43":{"start":{"line":164,"column":8},"end":{"line":164,"column":21}},"44":{"start":{"line":165,"column":8},"end":{"line":165,"column":27}},"45":{"start":{"line":168,"column":4},"end":{"line":170,"column":5}},"46":{"start":{"line":169,"column":8},"end":{"line":169,"column":27}},"47":{"start":{"line":172,"column":4},"end":{"line":172,"column":24}},"48":{"start":{"line":175,"column":0},"end":{"line":183,"column":1}},"49":{"start":{"line":176,"column":4},"end":{"line":176,"column":23}},"50":{"start":{"line":177,"column":4},"end":{"line":181,"column":5}},"51":{"start":{"line":178,"column":8},"end":{"line":178,"column":64}},"52":{"start":{"line":180,"column":8},"end":{"line":180,"column":31}},"53":{"start":{"line":182,"column":4},"end":{"line":182,"column":18}},"54":{"start":{"line":185,"column":0},"end":{"line":207,"column":1}},"55":{"start":{"line":186,"column":4},"end":{"line":187,"column":9}},"56":{"start":{"line":189,"column":4},"end":{"line":204,"column":5}},"57":{"start":{"line":190,"column":8},"end":{"line":190,"column":40}},"58":{"start":{"line":192,"column":8},"end":{"line":203,"column":9}},"59":{"start":{"line":194,"column":12},"end":{"line":194,"column":31}},"60":{"start":{"line":195,"column":15},"end":{"line":203,"column":9}},"61":{"start":{"line":197,"column":12},"end":{"line":197,"column":40}},"62":{"start":{"line":198,"column":15},"end":{"line":203,"column":9}},"63":{"start":{"line":200,"column":12},"end":{"line":200,"column":35}},"64":{"start":{"line":202,"column":12},"end":{"line":202,"column":35}},"65":{"start":{"line":206,"column":4},"end":{"line":206,"column":18}},"66":{"start":{"line":209,"column":0},"end":{"line":215,"column":2}},"67":{"start":{"line":211,"column":8},"end":{"line":211,"column":41}},"68":{"start":{"line":212,"column":8},"end":{"line":212,"column":66}}},"branchMap":{"1":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":12},"end":{"line":42,"column":20}},{"start":{"line":42,"column":26},"end":{"line":42,"column":34}},{"start":{"line":42,"column":40},"end":{"line":42,"column":52}}]},"2":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":4}},{"start":{"line":61,"column":4},"end":{"line":61,"column":4}}]},"3":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":11},"end":{"line":63,"column":11}},{"start":{"line":63,"column":11},"end":{"line":63,"column":11}}]},"4":{"line":92,"type":"cond-expr","locations":[{"start":{"line":92,"column":21},"end":{"line":92,"column":24}},{"start":{"line":92,"column":27},"end":{"line":92,"column":29}}]},"5":{"line":93,"type":"cond-expr","locations":[{"start":{"line":93,"column":21},"end":{"line":93,"column":24}},{"start":{"line":93,"column":27},"end":{"line":93,"column":29}}]},"6":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":97,"column":4}},{"start":{"line":97,"column":4},"end":{"line":97,"column":4}}]},"7":{"line":128,"type":"cond-expr","locations":[{"start":{"line":128,"column":35},"end":{"line":128,"column":44}},{"start":{"line":128,"column":49},"end":{"line":128,"column":97}}]},"8":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":4},"end":{"line":136,"column":4}},{"start":{"line":136,"column":4},"end":{"line":136,"column":4}}]},"9":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":4},"end":{"line":163,"column":4}},{"start":{"line":163,"column":4},"end":{"line":163,"column":4}}]},"10":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":4},"end":{"line":168,"column":4}},{"start":{"line":168,"column":4},"end":{"line":168,"column":4}}]},"11":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":4},"end":{"line":177,"column":4}},{"start":{"line":177,"column":4},"end":{"line":177,"column":4}}]},"12":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":4},"end":{"line":189,"column":4}},{"start":{"line":189,"column":4},"end":{"line":189,"column":4}}]},"13":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":8},"end":{"line":192,"column":8}},{"start":{"line":192,"column":8},"end":{"line":192,"column":8}}]},"14":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":15},"end":{"line":195,"column":15}},{"start":{"line":195,"column":15},"end":{"line":195,"column":15}}]},"15":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":15},"end":{"line":198,"column":15}},{"start":{"line":198,"column":15},"end":{"line":198,"column":15}}]}},"code":["\"use strict\";","","var XY = function (x, y) {","        this.x = x;","        this.y = y;","    }","    , hueLimits = {","        red: new XY(0.675, 0.322),","        green: new XY(0.4091, 0.518),","        blue: new XY(0.167, 0.04)","    }","    , livingColorsLimits = {","        red: new XY(0.704, 0.296),","        green: new XY(0.2151, 0.7106),","        blue: new XY(0.138, 0.08)","    }","    , defaultLimits = {","        red: new XY(1.0, 0),","        green: new XY(0.0, 1.0),","        blue: new XY(0.0, 0.0)","    }","    ;","","function _crossProduct(p1, p2) {","    return (p1.x * p2.y - p1.y * p2.x);","}","","function _isInColorGamut(p, lampLimits) {","    var v1 = new XY(","            lampLimits.green.x - lampLimits.red.x","            , lampLimits.green.y - lampLimits.red.y","        )","        , v2 = new XY(","            lampLimits.blue.x - lampLimits.red.x","            , lampLimits.blue.y - lampLimits.red.y","        )","        , q = new XY(p.x - lampLimits.red.x, p.y - lampLimits.red.y)","        , s = _crossProduct(q, v2) / _crossProduct(v1, v2)","        , t = _crossProduct(v1, q) / _crossProduct(v1, v2)","        ;","","    return (s >= 0.0) && (t >= 0.0) && (s + t <= 1.0);","}","","/**"," * Find the closest point on a line. This point will be reproducible by the limits."," *"," * @param start {XY} The point where the line starts."," * @param stop {XY} The point where the line ends."," * @param point {XY} The point which is close to the line."," * @return {XY} A point that is on the line specified, and closest to the XY provided."," */","function _getClosestPoint(start, stop, point) {","    var AP = new XY(point.x - start.x, point.y - start.y)","        , AB = new XY(stop.x - start.x, stop.y - start.y)","        , ab2 = AB.x * AB.x + AB.y * AB.y","        , ap_ab = AP.x * AB.x + AP.y * AB.y","        , t = ap_ab / ab2","        ;","","    if (t < 0.0) {","        t = 0.0;","    } else if (t > 1.0) {","        t = 1.0;","    }","","    return new XY(","        start.x + AB.x * t","        , start.y + AB.y * t","    );","}","","function _getDistanceBetweenPoints(pOne, pTwo) {","    var dx = pOne.x - pTwo.x","        , dy = pOne.y - pTwo.y","        ;","    return Math.sqrt(dx * dx + dy * dy);","}","","function _getXYStateFromRGB(red, green, blue, limits) {","    var r = _gammaCorrection(red)","        , g = _gammaCorrection(green)","        , b = _gammaCorrection(blue)","        , X = r * 0.4360747 + g * 0.3850649 + b * 0.0930804","        , Y = r * 0.2225045 + g * 0.7168786 + b * 0.0406169","        , Z = r * 0.0139322 + g * 0.0971045 + b * 0.7141733","        , cx = X / (X + Y + Z)","        , cy = Y / (X + Y + Z)","        , xyPoint","        ;","","    cx = isNaN(cx) ? 0.0 : cx;","    cy = isNaN(cy) ? 0.0 : cy;","","    xyPoint = new XY(cx, cy);","","    if (!_isInColorGamut(xyPoint, limits)) {","        xyPoint = _resolveXYPointForLamp(xyPoint, limits);","    }","","    return [xyPoint.x, xyPoint.y];","}","","/**"," * This function is a rough approximation of the reversal of RGB to xy transform. It is a gross approximation and does"," * get close, but is not exact."," * @param x"," * @param y"," * @param brightness"," * @returns {Array} RGB values"," * @private"," *"," * This function is a modification of the one found at https://github.com/bjohnso5/hue-hacking/blob/master/src/colors.js#L251"," */","function _getRGBFromXYState(x, y, brightness) {","    var Y = brightness","      , X = (Y / y) * x","      , Z = (Y / y) * (1 - x - y)","      , rgb =  [","          X * 1.612 - Y * 0.203 - Z * 0.302,","          -X * 0.509 + Y * 1.412 + Z * 0.066,","          X * 0.026 - Y * 0.072 + Z * 0.962","      ]","      ;","","    // Apply reverse gamma correction.","    rgb = rgb.map(function (x) {","        return (x <= 0.0031308) ? (12.92 * x) : ((1.0 + 0.055) * Math.pow(x, (1.0 / 2.4)) - 0.055);","    });","","    // Bring all negative components to zero.","    rgb = rgb.map(function (x) { return Math.max(0, x); });","","    // If one component is greater than 1, weight components by that value.","    var max = Math.max(rgb[0], rgb[1], rgb[2]);","    if (max > 1) {","        rgb = rgb.map(function (x) { return x / max; });","    }","","    rgb = rgb.map(function (x) { return Math.floor(x * 255); });","","    return rgb;","}","","/**"," * When a color is outside the limits, find the closest point on each line in the CIE 1931 'triangle'."," * @param point {XY} The point that is outside the limits"," * @param limits The limits of the bulb (red, green and blue XY points)."," * @returns {XY}"," */","function _resolveXYPointForLamp(point, limits) {","","    var pAB = _getClosestPoint(limits.red, limits.green, point)","        , pAC = _getClosestPoint(limits.blue, limits.red, point)","        , pBC = _getClosestPoint(limits.green, limits.blue, point)","        , dAB = _getDistanceBetweenPoints(point, pAB)","        , dAC = _getDistanceBetweenPoints(point, pAC)","        , dBC = _getDistanceBetweenPoints(point, pBC)","        , lowest = dAB","        , closestPoint = pAB","        ;","","    if (dAC < lowest) {","        lowest = dAC;","        closestPoint = pAC;","    }","","    if (dBC < lowest) {","        closestPoint = pBC;","    }","","    return closestPoint;","}","","function _gammaCorrection(value) {","    var result = value;","    if (value > 0.04045) {","        result = Math.pow((value + 0.055) / (1.0 + 0.055), 2.4);","    } else {","        result = value / 12.92;","    }","    return result;","}","","function _getLimits(modelid) {","    var limits = defaultLimits","        ;","","    if (modelid) {","        modelid = modelid.toLowerCase();","","        if (/^lct/.test(modelid)) {","            // This is a Hue bulb","            limits = hueLimits;","        } else if (/^llc/.test(modelid)) {","            // This is a Living Color lamp (Bloom, Iris, etc..)","            limits = livingColorsLimits;","        } else if (/^lwb/.test(modelid)) {","            // This is a lux bulb","            limits = defaultLimits;","        } else {","            limits = defaultLimits;","        }","    }","","    return limits;","}","","module.exports = {","    convertRGBtoXY: function(rgb, modelid) {","        var limits = _getLimits(modelid);","        return _getXYStateFromRGB(rgb[0], rgb[1], rgb[2], limits);","    },","    convertXYtoRGB: _getRGBFromXYState","};"],"l":{"3":1,"4":9,"5":9,"24":1,"25":0,"28":1,"29":0,"42":0,"53":1,"54":0,"61":0,"62":0,"63":0,"64":0,"67":0,"73":1,"74":0,"77":0,"80":1,"81":0,"92":0,"93":0,"95":0,"97":0,"98":0,"101":0,"115":1,"116":0,"127":0,"128":0,"132":0,"135":0,"136":0,"137":0,"140":0,"142":0,"151":1,"153":0,"163":0,"164":0,"165":0,"168":0,"169":0,"172":0,"175":1,"176":0,"177":0,"178":0,"180":0,"182":0,"185":1,"186":0,"189":0,"190":0,"192":0,"194":0,"195":0,"197":0,"198":0,"200":0,"202":0,"206":0,"209":1,"211":0,"212":0}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/scene.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/scene.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":1,"35":0,"36":0,"37":1,"38":0,"39":0,"40":1,"41":0,"42":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":12},"end":{"line":4,"column":24}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":36}}},"3":{"name":"(anonymous_3)","line":49,"loc":{"start":{"line":49,"column":27},"end":{"line":49,"column":42}}},"4":{"name":"(anonymous_4)","line":54,"loc":{"start":{"line":54,"column":29},"end":{"line":54,"column":48}}},"5":{"name":"(anonymous_5)","line":67,"loc":{"start":{"line":67,"column":37},"end":{"line":67,"column":60}}},"6":{"name":"(anonymous_6)","line":72,"loc":{"start":{"line":72,"column":30},"end":{"line":72,"column":45}}},"7":{"name":"(anonymous_7)","line":77,"loc":{"start":{"line":77,"column":30},"end":{"line":77,"column":48}}},"8":{"name":"(anonymous_8)","line":82,"loc":{"start":{"line":82,"column":30},"end":{"line":82,"column":48}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":6,"column":3}},"2":{"start":{"line":8,"column":0},"end":{"line":46,"column":2}},"3":{"start":{"line":9,"column":2},"end":{"line":11,"column":5}},"4":{"start":{"line":13,"column":2},"end":{"line":44,"column":3}},"5":{"start":{"line":14,"column":4},"end":{"line":14,"column":24}},"6":{"start":{"line":16,"column":4},"end":{"line":16,"column":23}},"7":{"start":{"line":18,"column":4},"end":{"line":43,"column":5}},"8":{"start":{"line":19,"column":6},"end":{"line":19,"column":18}},"9":{"start":{"line":21,"column":6},"end":{"line":21,"column":26}},"10":{"start":{"line":24,"column":6},"end":{"line":26,"column":7}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":33}},"12":{"start":{"line":28,"column":6},"end":{"line":30,"column":7}},"13":{"start":{"line":29,"column":8},"end":{"line":29,"column":37}},"14":{"start":{"line":32,"column":6},"end":{"line":34,"column":7}},"15":{"start":{"line":33,"column":8},"end":{"line":33,"column":53}},"16":{"start":{"line":36,"column":6},"end":{"line":38,"column":7}},"17":{"start":{"line":37,"column":8},"end":{"line":37,"column":51}},"18":{"start":{"line":40,"column":6},"end":{"line":42,"column":7}},"19":{"start":{"line":41,"column":8},"end":{"line":41,"column":39}},"20":{"start":{"line":45,"column":2},"end":{"line":45,"column":15}},"21":{"start":{"line":49,"column":0},"end":{"line":52,"column":2}},"22":{"start":{"line":50,"column":2},"end":{"line":50,"column":62}},"23":{"start":{"line":51,"column":2},"end":{"line":51,"column":14}},"24":{"start":{"line":54,"column":0},"end":{"line":65,"column":2}},"25":{"start":{"line":55,"column":2},"end":{"line":55,"column":10}},"26":{"start":{"line":57,"column":2},"end":{"line":61,"column":3}},"27":{"start":{"line":58,"column":4},"end":{"line":58,"column":19}},"28":{"start":{"line":60,"column":4},"end":{"line":60,"column":48}},"29":{"start":{"line":63,"column":2},"end":{"line":63,"column":67}},"30":{"start":{"line":64,"column":2},"end":{"line":64,"column":14}},"31":{"start":{"line":67,"column":0},"end":{"line":70,"column":2}},"32":{"start":{"line":68,"column":2},"end":{"line":68,"column":54}},"33":{"start":{"line":69,"column":2},"end":{"line":69,"column":14}},"34":{"start":{"line":72,"column":0},"end":{"line":75,"column":2}},"35":{"start":{"line":73,"column":2},"end":{"line":73,"column":59}},"36":{"start":{"line":74,"column":2},"end":{"line":74,"column":14}},"37":{"start":{"line":77,"column":0},"end":{"line":80,"column":2}},"38":{"start":{"line":78,"column":2},"end":{"line":78,"column":42}},"39":{"start":{"line":79,"column":2},"end":{"line":79,"column":14}},"40":{"start":{"line":82,"column":0},"end":{"line":85,"column":2}},"41":{"start":{"line":83,"column":2},"end":{"line":83,"column":44}},"42":{"start":{"line":84,"column":2},"end":{"line":84,"column":14}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":2},"end":{"line":13,"column":2}},{"start":{"line":13,"column":2},"end":{"line":13,"column":2}}]},"2":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":18,"column":4}},{"start":{"line":18,"column":4},"end":{"line":18,"column":4}}]},"3":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":6},"end":{"line":24,"column":6}},{"start":{"line":24,"column":6},"end":{"line":24,"column":6}}]},"4":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":6},"end":{"line":28,"column":6}},{"start":{"line":28,"column":6},"end":{"line":28,"column":6}}]},"5":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":6},"end":{"line":32,"column":6}},{"start":{"line":32,"column":6},"end":{"line":32,"column":6}}]},"6":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":6}},{"start":{"line":36,"column":6},"end":{"line":36,"column":6}}]},"7":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":10},"end":{"line":36,"column":18}},{"start":{"line":36,"column":22},"end":{"line":36,"column":33}}]},"8":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":26},"end":{"line":37,"column":34}},{"start":{"line":37,"column":38},"end":{"line":37,"column":49}}]},"9":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":6},"end":{"line":40,"column":6}},{"start":{"line":40,"column":6},"end":{"line":40,"column":6}}]},"10":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":2},"end":{"line":57,"column":2}},{"start":{"line":57,"column":2},"end":{"line":57,"column":2}}]}},"code":["\"use strict\";","","var utils = require(\"./utils\")","  , Scene = function () {","  }","  ;","","module.exports.create = function () {","  var scene","    , arg","    ;","","  if (arguments.length == 0) {","    scene = new Scene();","  } else {","    arg = arguments[0];","","    if (arg instanceof Scene) {","      scene = arg;","    } else {","      scene = new Scene();","","      // try to populate the new scene using any values that match scene properties","      if (arg.name) {","        scene.withName(arg.name);","      }","","      if (arg.lights) {","        scene.withLights(arg.lights);","      }","","      if (arg.transitionTime) {","        scene.withTransitionTime(arg.transitionTime);","      }","","      if (arg.data || arg.appData) {","        scene.withAppData(arg.data || arg.appData);","      }","","      if (arg.picture) {","        scene.withPicture(arg.picture);","      }","    }","  }","  return scene;","};","","","Scene.prototype.withName = function(name) {","  utils.combine(this, {name: utils.getStringValue(name, 32)});","  return this;","};","","Scene.prototype.withLights = function(lightIds) {","  var ids;","","  if (Array.isArray(lightIds)) {","    ids = lightIds;","  } else {","    ids = Array.prototype.slice.call(arguments);","  }","","  utils.combine(this, {lights: utils.createStringValueArray(ids)});","  return this;","};","","Scene.prototype.withTransitionTime = function(milliseconds) {","  utils.combine(this, {transitiontime: milliseconds});","  return this;","};","","Scene.prototype.withAppData = function(data) {","  utils.combine(this, {appdata: {data: data, version: 1}});","  return this;","};","","Scene.prototype.withPicture = function(picture) {","  utils.combine(this, {picture: picture});","  return this;","};","","Scene.prototype.withRecycle = function(recycle) {","  utils.combine(this, {\"recycle\": recycle});","  return this;","};"],"l":{"3":1,"8":1,"9":0,"13":0,"14":0,"16":0,"18":0,"19":0,"21":0,"24":0,"25":0,"28":0,"29":0,"32":0,"33":0,"36":0,"37":0,"40":0,"41":0,"45":0,"49":1,"50":0,"51":0,"54":1,"55":0,"57":0,"58":0,"60":0,"63":0,"64":0,"67":1,"68":0,"69":0,"72":1,"73":0,"74":0,"77":1,"78":0,"79":0,"82":1,"83":0,"84":0}},"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/timer.js":{"path":"/home/travis/build/npmtest/node-npmtest-node-hue-api/node_modules/node-hue-api/hue-api/timer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":1,"17":0,"18":0,"19":1,"20":0,"21":1,"22":0,"23":0,"24":1,"25":0,"26":0,"27":1,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":1,"36":4,"37":0,"38":0,"39":0,"40":0,"41":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":4,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":23}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":24},"end":{"line":15,"column":35}}},"3":{"name":"(anonymous_3)","line":19,"loc":{"start":{"line":19,"column":23},"end":{"line":19,"column":44}}},"4":{"name":"(anonymous_4)","line":23,"loc":{"start":{"line":23,"column":23},"end":{"line":23,"column":36}}},"5":{"name":"(anonymous_5)","line":32,"loc":{"start":{"line":32,"column":25},"end":{"line":32,"column":38}}},"6":{"name":"(anonymous_6)","line":37,"loc":{"start":{"line":37,"column":25},"end":{"line":37,"column":38}}},"7":{"name":"(anonymous_7)","line":42,"loc":{"start":{"line":42,"column":28},"end":{"line":42,"column":49}}},"8":{"name":"(anonymous_8)","line":46,"loc":{"start":{"line":46,"column":32},"end":{"line":46,"column":45}}},"9":{"name":"(anonymous_9)","line":51,"loc":{"start":{"line":51,"column":34},"end":{"line":51,"column":47}}},"10":{"name":"(anonymous_10)","line":56,"loc":{"start":{"line":56,"column":34},"end":{"line":56,"column":47}}},"11":{"name":"(anonymous_11)","line":61,"loc":{"start":{"line":61,"column":28},"end":{"line":61,"column":44}}},"12":{"name":"limitValue","line":72,"loc":{"start":{"line":72,"column":0},"end":{"line":72,"column":30}}},"13":{"name":"(anonymous_13)","line":73,"loc":{"start":{"line":73,"column":9},"end":{"line":73,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":10,"column":3}},"3":{"start":{"line":12,"column":0},"end":{"line":13,"column":2}},"4":{"start":{"line":15,"column":0},"end":{"line":17,"column":2}},"5":{"start":{"line":16,"column":2},"end":{"line":16,"column":21}},"6":{"start":{"line":19,"column":0},"end":{"line":21,"column":2}},"7":{"start":{"line":20,"column":2},"end":{"line":20,"column":45}},"8":{"start":{"line":23,"column":0},"end":{"line":30,"column":2}},"9":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"10":{"start":{"line":25,"column":4},"end":{"line":25,"column":11}},"11":{"start":{"line":28,"column":2},"end":{"line":28,"column":44}},"12":{"start":{"line":29,"column":2},"end":{"line":29,"column":14}},"13":{"start":{"line":32,"column":0},"end":{"line":35,"column":2}},"14":{"start":{"line":33,"column":2},"end":{"line":33,"column":46}},"15":{"start":{"line":34,"column":2},"end":{"line":34,"column":14}},"16":{"start":{"line":37,"column":0},"end":{"line":40,"column":2}},"17":{"start":{"line":38,"column":2},"end":{"line":38,"column":46}},"18":{"start":{"line":39,"column":2},"end":{"line":39,"column":14}},"19":{"start":{"line":42,"column":0},"end":{"line":44,"column":2}},"20":{"start":{"line":43,"column":2},"end":{"line":43,"column":72}},"21":{"start":{"line":46,"column":0},"end":{"line":49,"column":2}},"22":{"start":{"line":47,"column":2},"end":{"line":47,"column":54}},"23":{"start":{"line":48,"column":2},"end":{"line":48,"column":14}},"24":{"start":{"line":51,"column":0},"end":{"line":54,"column":2}},"25":{"start":{"line":52,"column":2},"end":{"line":52,"column":56}},"26":{"start":{"line":53,"column":2},"end":{"line":53,"column":14}},"27":{"start":{"line":56,"column":0},"end":{"line":59,"column":2}},"28":{"start":{"line":57,"column":2},"end":{"line":57,"column":56}},"29":{"start":{"line":58,"column":2},"end":{"line":58,"column":14}},"30":{"start":{"line":61,"column":0},"end":{"line":68,"column":2}},"31":{"start":{"line":62,"column":2},"end":{"line":66,"column":3}},"32":{"start":{"line":63,"column":4},"end":{"line":63,"column":45}},"33":{"start":{"line":65,"column":4},"end":{"line":65,"column":57}},"34":{"start":{"line":67,"column":2},"end":{"line":67,"column":14}},"35":{"start":{"line":72,"column":0},"end":{"line":84,"column":1}},"36":{"start":{"line":73,"column":2},"end":{"line":83,"column":3}},"37":{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},"38":{"start":{"line":75,"column":6},"end":{"line":75,"column":17}},"39":{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},"40":{"start":{"line":79,"column":6},"end":{"line":79,"column":17}},"41":{"start":{"line":82,"column":4},"end":{"line":82,"column":15}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"2":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"3":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":6},"end":{"line":62,"column":20}},{"start":{"line":62,"column":24},"end":{"line":62,"column":43}}]},"4":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":74,"column":4}},{"start":{"line":74,"column":4},"end":{"line":74,"column":4}}]},"5":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":78,"column":4}},{"start":{"line":78,"column":4},"end":{"line":78,"column":4}}]}},"code":["\"use strict\";","","var deepExtend = require(\"deep-extend\")","  ;","","var minuteValidator = limitValue(0, 59)","  , hourValidator = limitValue(0, 23)","  , secondValidator = limitValue(0, 59)","  , countValidator = limitValue(0, 99)","  ;","","var Timer = function() {","};","","module.exports.create = function() {","  return new Timer();","};","","Timer.prototype.time = function(hh, mm, ss) {","  return this.hour(hh).minute(mm).second(ss);","};","","Timer.prototype.hour = function(hh) {","  if (hh >= 24) {","    hh = 0;","  }","","  deepExtend(this, {hh: hourValidator(hh)});","  return this;","};","","Timer.prototype.minute = function(mm) {","  deepExtend(this, {mm: minuteValidator(mm)});","  return this;","};","","Timer.prototype.second = function(ss) {","  deepExtend(this, {ss: secondValidator(ss)});","  return this;","};","","Timer.prototype.randomize = function(hh, mm, ss) {","  return this.randomizeHour(hh).randomizeMinute(mm).randomizeSecond(ss);","};","","Timer.prototype.randomizeHour = function(hh) {","  deepExtend(this, {random: {hh: hourValidator(hh)}});","  return this;","};","","Timer.prototype.randomizeMinute = function(mm) {","  deepExtend(this, {random: {mm: minuteValidator(mm)}});","  return this;","};","","Timer.prototype.randomizeSecond = function(ss) {","  deepExtend(this, {random: {ss: secondValidator(ss)}});","  return this;","};","","Timer.prototype.recurring = function(count) {","  if (count === null || count === undefined) {","    deepExtend(this, {recurring: \"forever\"});","  } else {","    deepExtend(this, {recurring: countValidator(count)});","  }","  return this;","};","","","","function limitValue(min, max) {","  return function(val) {","    if (val < min) {","      return min;","    }","","    if (val > max) {","      return max;","    }","","    return val;","  }","}"],"l":{"3":1,"6":1,"12":1,"15":1,"16":0,"19":1,"20":0,"23":1,"24":0,"25":0,"28":0,"29":0,"32":1,"33":0,"34":0,"37":1,"38":0,"39":0,"42":1,"43":0,"46":1,"47":0,"48":0,"51":1,"52":0,"53":0,"56":1,"57":0,"58":0,"61":1,"62":0,"63":0,"65":0,"67":0,"72":1,"73":4,"74":0,"75":0,"78":0,"79":0,"82":0}}}